Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/vitalActivity/VitalsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.intelehealth.ekalhelpline.activities.vitalActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.text.DecimalFormat;\r\nimport java.text.NumberFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.activities.complaintNodeActivity.ComplaintNodeActivity;\r\nimport org.intelehealth.ekalhelpline.activities.visitSummaryActivity.VisitSummaryActivity;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.database.dao.EncounterDAO;\r\nimport org.intelehealth.ekalhelpline.database.dao.ObsDAO;\r\nimport org.intelehealth.ekalhelpline.models.VitalsObject;\r\nimport org.intelehealth.ekalhelpline.models.dto.ObsDTO;\r\nimport org.intelehealth.ekalhelpline.utilities.ConfigUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\nimport org.intelehealth.ekalhelpline.utilities.UuidDictionary;\r\n\r\nimport org.intelehealth.ekalhelpline.utilities.exception.DAOException;\r\n\r\npublic class VitalsActivity extends AppCompatActivity {\r\n    private static final String TAG = VitalsActivity.class.getSimpleName();\r\n    SessionManager sessionManager;\r\n    private String patientName = \"\";\r\n    private String intentTag;\r\n    private String state;\r\n    private String patientUuid;\r\n    private String visitUuid;\r\n    private String encounterVitals;\r\n    private float float_ageYear_Month;\r\n    int flag_height = 0, flag_weight = 0;\r\n    String heightvalue;\r\n    String weightvalue;\r\n    ConfigUtils configUtils = new ConfigUtils(VitalsActivity.this);\r\n\r\n    VitalsObject results = new VitalsObject();\r\n    private String encounterAdultIntials = \"\", EncounterAdultInitial_LatestVisit = \"\";\r\n    EditText mHeight, mWeight, mPulse, mBpSys, mBpDia, mTemperature, mtempfaren, mSpo2, mBMI, mResp;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        Intent intent = this.getIntent(); // The intent was passed to the activity\r\n        if (intent != null) {\r\n            patientUuid = intent.getStringExtra(\"patientUuid\");\r\n            visitUuid = intent.getStringExtra(\"visitUuid\");\r\n            encounterVitals = intent.getStringExtra(\"encounterUuidVitals\");\r\n            encounterAdultIntials = intent.getStringExtra(\"encounterUuidAdultIntial\");\r\n            EncounterAdultInitial_LatestVisit = intent.getStringExtra(\"EncounterAdultInitial_LatestVisit\");\r\n            state = intent.getStringExtra(\"state\");\r\n            patientName = intent.getStringExtra(\"name\");\r\n            intentTag = intent.getStringExtra(\"tag\");\r\n            float_ageYear_Month = intent.getFloatExtra(\"float_ageYear_Month\", 0);\r\n            Log.v(TAG, \"Patient ID: \" + patientUuid);\r\n            Log.v(TAG, \"Visit ID: \" + visitUuid);\r\n            Log.v(TAG, \"Patient Name: \" + patientName);\r\n            Log.v(TAG, \"Intent Tag: \" + intentTag);\r\n        }\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_vitals);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(false);\r\n\r\n        sessionManager = new SessionManager(this);\r\n\r\n\r\n//        Setting the title\r\n        setTitle(getString(R.string.title_activity_vitals));\r\n        setTitle(patientName + \": \" + getTitle());\r\n\r\n        mHeight = findViewById(R.id.table_height);\r\n        mWeight = findViewById(R.id.table_weight);\r\n        mPulse = findViewById(R.id.table_pulse);\r\n        mBpSys = findViewById(R.id.table_bpsys);\r\n        mBpDia = findViewById(R.id.table_bpdia);\r\n        mTemperature = findViewById(R.id.table_temp);\r\n        mSpo2 = findViewById(R.id.table_spo2);\r\n\r\n        mBMI = findViewById(R.id.table_bmi);\r\n//    Respiratory added by mahiti dev team\r\n\r\n        mResp = findViewById(R.id.table_respiratory);\r\n\r\n        mBMI.setEnabled(false);\r\n\r\n\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n//            #633 #632\r\n            if (!sessionManager.getLicenseKey().isEmpty()) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, this),\r\n                                String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }//Load the config file\r\n            //Display the fields on the Vitals screen as per the config file\r\n            if (obj.getBoolean(\"mHeight\")) {\r\n                mHeight.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mHeight.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mWeight\")) {\r\n                mWeight.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mWeight.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mPulse\")) {\r\n                mPulse.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mPulse.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mBpSys\")) {\r\n                mBpSys.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mBpSys.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mBpDia\")) {\r\n                mBpDia.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mBpDia.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mTemperature\")) {\r\n                if (obj.getBoolean(\"mCelsius\")) {\r\n\r\n                    mTemperature = findViewById(R.id.table_temp);\r\n                    findViewById(R.id.table_temp_faren).setVisibility(View.GONE);\r\n\r\n                } else if (obj.getBoolean(\"mFahrenheit\")) {\r\n\r\n                    mTemperature = findViewById(R.id.table_temp_faren);\r\n                    findViewById(R.id.table_temp).setVisibility(View.GONE);\r\n                }\r\n            } else {\r\n                mTemperature.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mSpo2\")) {\r\n                mSpo2.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mSpo2.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mBMI\")) {\r\n                mBMI.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mBMI.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mResp\")) {\r\n                mResp.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mResp.setVisibility(View.GONE);\r\n            }\r\n        } catch (JSONException e) {\r\n            Toast.makeText(this, \"config file error\", Toast.LENGTH_SHORT).show();\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n        }\r\n        if (intentTag != null && intentTag.equals(\"edit\")) {\r\n            loadPrevious();\r\n        }\r\n\r\n        mHeight.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    mBMI.getText().clear();\r\n                    flag_height = 1;\r\n                    heightvalue = mHeight.getText().toString();\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_HEIGHT)) {\r\n                        mHeight.setError(getString(R.string.height_error, AppConstants.MAXIMUM_HEIGHT));\r\n                    } else {\r\n                        mHeight.setError(null);\r\n                    }\r\n\r\n                } else {\r\n                    flag_height = 0;\r\n                    mBMI.getText().clear();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                calculateBMI();\r\n                if (mHeight.getText().toString().startsWith(\".\")) {\r\n                    mHeight.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        mWeight.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    mBMI.getText().clear();\r\n                    flag_weight = 1;\r\n                    weightvalue = mWeight.getText().toString();\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_WEIGHT)) {\r\n                        mWeight.setError(getString(R.string.weight_error, AppConstants.MAXIMUM_WEIGHT));\r\n                    } else {\r\n                        mWeight.setError(null);\r\n                    }\r\n                } else {\r\n                    flag_weight = 0;\r\n                    mBMI.getText().clear();\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                if (mWeight.getText().toString().startsWith(\".\")) {\r\n                    mWeight.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n                calculateBMI();\r\n            }\r\n        });\r\n\r\n\r\n        mSpo2.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n            @Override\r\n            public boolean onEditorAction(TextView textView, int id, KeyEvent keyEvent) {\r\n                if (id == R.id.table_spo2 || id == EditorInfo.IME_NULL) {\r\n                    validateTable();\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        });\r\n\r\n        mSpo2.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_SPO2) ||\r\n                            Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_SPO2)) {\r\n                        mSpo2.setError(getResources().getString(R.string.spo_error,AppConstants.MINIMUM_SPO2,AppConstants.MAXIMUM_SPO2));\r\n                    } else {\r\n                        mSpo2.setError(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                if (mSpo2.getText().toString().startsWith(\".\")) {\r\n                    mSpo2.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        mTemperature.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n\r\n                if (configUtils.celsius()) {\r\n                    if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                        if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_TEMPERATURE_CELSIUS) ||\r\n                                Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_TEMPERATURE_CELSIUS)) {\r\n                            mTemperature.setError(getString(R.string.temp_error, AppConstants.MINIMUM_TEMPERATURE_CELSIUS, AppConstants.MAXIMUM_TEMPERATURE_CELSIUS));\r\n                        } else {\r\n                            mTemperature.setError(null);\r\n                        }\r\n\r\n                    }\r\n                } else if (configUtils.fahrenheit()) {\r\n                    if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                        if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_TEMPERATURE_FARHENIT) ||\r\n                                Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_TEMPERATURE_FARHENIT)) {\r\n                            mTemperature.setError(getString(R.string.temp_error, AppConstants.MINIMUM_TEMPERATURE_FARHENIT, AppConstants.MAXIMUM_TEMPERATURE_FARHENIT));\r\n                        } else {\r\n                            mTemperature.setError(null);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                if (mTemperature.getText().toString().startsWith(\".\")) {\r\n                    mTemperature.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        mResp.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_RESPIRATORY) ||\r\n                            Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_RESPIRATORY)) {\r\n                        mResp.setError(getString(R.string.resp_error, AppConstants.MINIMUM_RESPIRATORY, AppConstants.MAXIMUM_RESPIRATORY));\r\n                    } else {\r\n                        mResp.setError(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                if (mResp.getText().toString().startsWith(\".\")) {\r\n                    mResp.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        mPulse.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_PULSE) ||\r\n                            Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_PULSE)) {\r\n                        mPulse.setError(getString(R.string.pulse_error, AppConstants.MINIMUM_PULSE, AppConstants.MAXIMUM_PULSE));\r\n                    } else {\r\n                        mPulse.setError(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                if (mPulse.getText().toString().startsWith(\".\")) {\r\n                    mPulse.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        mBpSys.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_BP_SYS) ||\r\n                            Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_BP_SYS)) {\r\n                        mBpSys.setError(getString(R.string.bpsys_error, AppConstants.MINIMUM_BP_SYS, AppConstants.MAXIMUM_BP_SYS));\r\n                    } else {\r\n                        mBpSys.setError(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                if (mBpSys.getText().toString().startsWith(\".\")) {\r\n                    mBpSys.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        mBpDia.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                if (s.toString().trim().length() > 0 && !s.toString().startsWith(\".\")) {\r\n                    if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_BP_DSYS) ||\r\n                            Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_BP_DSYS)) {\r\n                        mBpDia.setError(getString(R.string.bpdia_error, AppConstants.MINIMUM_BP_DSYS, AppConstants.MAXIMUM_BP_DSYS));\r\n                    } else {\r\n                        mBpDia.setError(null);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n\r\n                if (mBpDia.getText().toString().startsWith(\".\")) {\r\n                    mBpDia.setText(\"\");\r\n                } else {\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        FloatingActionButton fab = findViewById(R.id.fab);\r\n        assert fab != null;\r\n        fab.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                validateTable();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void calculateBMI() {\r\n        if (flag_height == 1 && flag_weight == 1 ||\r\n                (mHeight.getText().toString().trim().length() > 0 && !mHeight.getText().toString().startsWith(\".\") && (mWeight.getText().toString().trim().length() > 0 &&\r\n                        !mWeight.getText().toString().startsWith(\".\")))) {\r\n            mBMI.getText().clear();\r\n            double numerator = Double.parseDouble(mWeight.getText().toString()) * 10000;\r\n            double denominator = (Double.parseDouble(mHeight.getText().toString())) * (Double.parseDouble(mHeight.getText().toString()));\r\n            double bmi_value = numerator / denominator;\r\n            DecimalFormat df = new DecimalFormat(\"0.00\");\r\n            mBMI.setText(df.format(bmi_value));\r\n            Log.d(\"BMI\", \"BMI: \" + mBMI.getText().toString());\r\n            //mBMI.setText(String.format(Locale.ENGLISH, \"%.2f\", bmi_value));\r\n        } else if (flag_height == 0 || flag_weight == 0) {\r\n            // do nothing\r\n            mBMI.getText().clear();\r\n        }\r\n        else\r\n        {\r\n            mBMI.getText().clear();\r\n        }\r\n    }\r\n\r\n    public void calculateBMI_onEdit(String height, String weight) {\r\n        if (height.toString().trim().length() > 0 && !height.toString().startsWith(\".\") &&\r\n                weight.toString().trim().length() > 0 && !weight.toString().startsWith(\".\")) {\r\n\r\n            mBMI.getText().clear();\r\n            double numerator = Double.parseDouble(weight) * 10000;\r\n            double denominator = (Double.parseDouble(height)) * (Double.parseDouble(height));\r\n            double bmi_value = numerator / denominator;\r\n            DecimalFormat df = new DecimalFormat(\"0.00\");\r\n            mBMI.setText(df.format(bmi_value));\r\n            Log.d(\"BMI\",\"BMI: \"+mBMI.getText().toString());\r\n            //mBMI.setText(String.format(Locale.ENGLISH, \"%.2f\", bmi_value));\r\n        } else  {\r\n            // do nothing\r\n            mBMI.getText().clear();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    public void loadPrevious() {\r\n\r\n        SQLiteDatabase db = AppConstants.inteleHealthDatabaseHelper.getWriteDb();\r\n        String[] columns = {\"value\", \" conceptuuid\"};\r\n        String visitSelection = \"encounteruuid = ? and voided!='1'\";\r\n        String[] visitArgs = {encounterVitals};\r\n        Cursor visitCursor = db.query(\"tbl_obs\", columns, visitSelection, visitArgs, null, null, null);\r\n        if (visitCursor.moveToFirst()) {\r\n            do {\r\n                String dbConceptID = visitCursor.getString(visitCursor.getColumnIndex(\"conceptuuid\"));\r\n                String dbValue = visitCursor.getString(visitCursor.getColumnIndex(\"value\"));\r\n                parseData(dbConceptID, dbValue);\r\n            } while (visitCursor.moveToNext());\r\n        }\r\n        visitCursor.close();\r\n    }\r\n\r\n    private void parseData(String concept_id, String value) {\r\n        switch (concept_id) {\r\n            case UuidDictionary.HEIGHT: //Height\r\n                mHeight.setText(value);\r\n                break;\r\n            case UuidDictionary.WEIGHT: //Weight\r\n                mWeight.setText(value);\r\n                break;\r\n            case UuidDictionary.PULSE: //Pulse\r\n                mPulse.setText(value);\r\n                break;\r\n            case UuidDictionary.SYSTOLIC_BP: //Systolic BP\r\n                mBpSys.setText(value);\r\n                break;\r\n            case UuidDictionary.DIASTOLIC_BP: //Diastolic BP\r\n                mBpDia.setText(value);\r\n                break;\r\n            case UuidDictionary.TEMPERATURE: //Temperature\r\n                if (findViewById(R.id.table_temp).getVisibility() == View.GONE) {\r\n                    //Converting Celsius to Fahrenheit\r\n                    if (value != null && !value.isEmpty()) {\r\n                        mTemperature.setText(convertCtoF(value));\r\n                    }\r\n                } else {\r\n                    mTemperature.setText(value);\r\n                }\r\n\r\n                break;\r\n            //    Respiratory added by mahiti dev team\r\n            case UuidDictionary.RESPIRATORY: //Respiratory\r\n                mResp.setText(value);\r\n                break;\r\n            case UuidDictionary.SPO2: //SpO2\r\n                mSpo2.setText(value);\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        //on edit on vs screen, the bmi will be set in vitals bmi edit field.\r\n        if(mBMI.getText().toString().equalsIgnoreCase(\"\")) {\r\n            calculateBMI_onEdit(mHeight.getText().toString(), mWeight.getText().toString());\r\n        }\r\n    }\r\n\r\n    public void validateTable() {\r\n        boolean cancel = false;\r\n        View focusView = null;\r\n\r\n        //BP vaidations added by Prajwal.\r\n        if(mBpSys.getText().toString().isEmpty() && !mBpDia.getText().toString().isEmpty() ||\r\n                !mBpSys.getText().toString().isEmpty() && mBpDia.getText().toString().isEmpty()) {\r\n            if(mBpSys.getText().toString().isEmpty()) {\r\n                mBpSys.requestFocus();\r\n                mBpSys.setError(\"Enter field\");\r\n                return;\r\n            }\r\n            else if(mBpDia.getText().toString().isEmpty()) {\r\n                mBpDia.requestFocus();\r\n                mBpDia.setError(\"Enter field\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        // Store values at the time of the fab is clicked.\r\n        ArrayList<EditText> values = new ArrayList<EditText>();\r\n        values.add(mHeight);\r\n        values.add(mWeight);\r\n        values.add(mPulse);\r\n        values.add(mBpSys);\r\n        values.add(mBpDia);\r\n        values.add(mTemperature);\r\n        values.add(mResp);\r\n        values.add(mSpo2);\r\n\r\n        // Check to see if values were inputted.\r\n        for (int i = 0; i < values.size(); i++) {\r\n            if (i == 0) {\r\n                EditText et = values.get(i);\r\n                String abc = et.getText().toString().trim();\r\n                if (abc != null && !abc.isEmpty()) {\r\n                    if (Double.parseDouble(abc) > Double.parseDouble(AppConstants.MAXIMUM_HEIGHT)) {\r\n                        et.setError(getString(R.string.height_error, AppConstants.MAXIMUM_HEIGHT));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n            } else if (i == 1) {\r\n                EditText et = values.get(i);\r\n                String abc1 = et.getText().toString().trim();\r\n                if (abc1 != null && !abc1.isEmpty()) {\r\n                    if (Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_WEIGHT)) {\r\n                        et.setError(getString(R.string.weight_error, AppConstants.MAXIMUM_WEIGHT));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n\r\n            } else if (i == 2) {\r\n                EditText et = values.get(i);\r\n                String abc2 = et.getText().toString().trim();\r\n                if (abc2 != null && !abc2.isEmpty() && (!abc2.equals(\"0.0\"))) {\r\n                    if ((Double.parseDouble(abc2) > Double.parseDouble(AppConstants.MAXIMUM_PULSE)) ||\r\n                            (Double.parseDouble(abc2) < Double.parseDouble(AppConstants.MINIMUM_PULSE))) {\r\n                        et.setError(getString(R.string.pulse_error, AppConstants.MINIMUM_PULSE, AppConstants.MAXIMUM_PULSE));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n\r\n            } else if (i == 3) {\r\n                EditText et = values.get(i);\r\n                String abc1 = et.getText().toString().trim();\r\n                if (abc1 != null && !abc1.isEmpty() && (!abc1.equals(\"0.0\"))) {\r\n                    if ((Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_BP_SYS)) ||\r\n                            (Double.parseDouble(abc1) < Double.parseDouble(AppConstants.MINIMUM_BP_SYS))) {\r\n                        et.setError(getString(R.string.bpsys_error, AppConstants.MINIMUM_BP_SYS, AppConstants.MAXIMUM_BP_SYS));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n\r\n            } else if (i == 4) {\r\n                EditText et = values.get(i);\r\n                String abc1 = et.getText().toString().trim();\r\n                if (abc1 != null && !abc1.isEmpty() && (!abc1.equals(\"0.0\"))) {\r\n                    if ((Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_BP_DSYS)) ||\r\n                            (Double.parseDouble(abc1) < Double.parseDouble(AppConstants.MINIMUM_BP_DSYS))) {\r\n                        et.setError(getString(R.string.bpdia_error, AppConstants.MINIMUM_BP_DSYS, AppConstants.MAXIMUM_BP_DSYS));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n\r\n            } else if (i == 5) {\r\n                EditText et = values.get(i);\r\n                String abc1 = et.getText().toString().trim();\r\n                if (abc1 != null && !abc1.isEmpty() && (!abc1.equals(\"0.0\"))) {\r\n                    if (configUtils.celsius()) {\r\n                        if ((Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_TEMPERATURE_CELSIUS)) ||\r\n                                (Double.parseDouble(abc1) < Double.parseDouble(AppConstants.MINIMUM_TEMPERATURE_CELSIUS))) {\r\n                            et.setError(getString(R.string.temp_error, AppConstants.MINIMUM_TEMPERATURE_CELSIUS, AppConstants.MAXIMUM_TEMPERATURE_CELSIUS));\r\n                            focusView = et;\r\n                            cancel = true;\r\n                            break;\r\n                        } else {\r\n                            cancel = false;\r\n                        }\r\n                    } else if (configUtils.fahrenheit()) {\r\n                        if ((Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_TEMPERATURE_FARHENIT)) ||\r\n                                (Double.parseDouble(abc1) < Double.parseDouble(AppConstants.MINIMUM_TEMPERATURE_FARHENIT))) {\r\n                            et.setError(getString(R.string.temp_error, AppConstants.MINIMUM_TEMPERATURE_FARHENIT, AppConstants.MAXIMUM_TEMPERATURE_FARHENIT));\r\n                            focusView = et;\r\n                            cancel = true;\r\n                            break;\r\n                        } else {\r\n                            cancel = false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n            } else if (i == 6) {\r\n                EditText et = values.get(i);\r\n                String abc1 = et.getText().toString().trim();\r\n                if (abc1 != null && !abc1.isEmpty() && (!abc1.equals(\"0.0\"))) {\r\n                    if ((Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_RESPIRATORY)) ||\r\n                            (Double.parseDouble(abc1) < Double.parseDouble(AppConstants.MINIMUM_RESPIRATORY))) {\r\n                        et.setError(getString(R.string.resp_error, AppConstants.MINIMUM_RESPIRATORY, AppConstants.MAXIMUM_RESPIRATORY));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n            } else {\r\n                EditText et = values.get(i);\r\n                String abc1 = et.getText().toString().trim();\r\n                if (abc1 != null && !abc1.isEmpty() && (!abc1.equals(\"0.0\"))) {\r\n                    if ((Double.parseDouble(abc1) > Double.parseDouble(AppConstants.MAXIMUM_SPO2)) ||\r\n                            (Double.parseDouble(abc1) < Double.parseDouble(AppConstants.MINIMUM_SPO2))) {\r\n                        et.setError(getString(R.string.spo_error, AppConstants.MINIMUM_SPO2, AppConstants.MAXIMUM_SPO2));\r\n                        focusView = et;\r\n                        cancel = true;\r\n                        break;\r\n                    } else {\r\n                        cancel = false;\r\n                    }\r\n//       }\r\n                } else {\r\n                    cancel = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (cancel) {\r\n            // There was an error - focus the first form field with an error.\r\n            focusView.requestFocus();\r\n            return;\r\n        } else {\r\n            try {\r\n                if (mHeight.getText() != null && !mHeight.getText().toString().equals(\"\")) {\r\n                    results.setHeight((mHeight.getText().toString()));\r\n                } else if (mHeight.getText().toString().equals(\"\")) {\r\n                    results.setHeight(\"0\");\r\n                }\r\n                if (mWeight.getText() != null) {\r\n                    results.setWeight((mWeight.getText().toString()));\r\n                }\r\n                if (mPulse.getText() != null) {\r\n                    results.setPulse((mPulse.getText().toString()));\r\n                }\r\n                if (mBpDia.getText() != null) {\r\n                    results.setBpdia((mBpDia.getText().toString()));\r\n                }\r\n                if (mBpSys.getText() != null) {\r\n                    results.setBpsys((mBpSys.getText().toString()));\r\n                }\r\n                if (mResp.getText() != null) {\r\n                    results.setResp((mResp.getText().toString()));\r\n                }\r\n                if (mSpo2.getText() != null) {\r\n                    results.setSpo2((mSpo2.getText().toString()));\r\n                }\r\n                if (mTemperature.getText() != null) {\r\n\r\n                    if (findViewById(R.id.table_temp).getVisibility() == View.GONE) {\r\n                        //Converting Fahrenheit to Celsius\r\n//                        results.setTemperature((mTemperature.getText().toString()));\r\n\r\n                        results.setTemperature(ConvertFtoC(mTemperature.getText().toString()));\r\n                    } else {\r\n                        results.setTemperature((mTemperature.getText().toString()));\r\n                    }\r\n\r\n                }\r\n\r\n            } catch (NumberFormatException e) {\r\n                Snackbar.make(findViewById(R.id.cl_table), R.string.error_non_decimal_no_added, Snackbar.LENGTH_LONG).setAction(\"Action\", null).show();\r\n            }\r\n\r\n//\r\n        }\r\n\r\n        ObsDAO obsDAO = new ObsDAO();\r\n        ObsDTO obsDTO = new ObsDTO();\r\n        if (intentTag != null && intentTag.equals(\"edit\")) {\r\n            try {\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.HEIGHT);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                if (results.getHeight().equals(\"\")) {\r\n                    obsDTO.setValue(\"0\");\r\n                } else {\r\n                    obsDTO.setValue(results.getHeight());\r\n                }\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.HEIGHT));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.WEIGHT);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getWeight());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.WEIGHT));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.PULSE);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getPulse());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.PULSE));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.SYSTOLIC_BP);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getBpsys());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.SYSTOLIC_BP));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.DIASTOLIC_BP);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getBpdia());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.DIASTOLIC_BP));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.TEMPERATURE);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getTemperature());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.TEMPERATURE));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.RESPIRATORY);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getResp());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.RESPIRATORY));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n\r\n                obsDTO = new ObsDTO();\r\n                obsDTO.setConceptuuid(UuidDictionary.SPO2);\r\n                obsDTO.setEncounteruuid(encounterVitals);\r\n                obsDTO.setCreator(sessionManager.getCreatorID());\r\n                obsDTO.setValue(results.getSpo2());\r\n                obsDTO.setUuid(obsDAO.getObsuuid(encounterVitals, UuidDictionary.SPO2));\r\n\r\n                obsDAO.updateObs(obsDTO);\r\n                //making flag to false in the encounter table so it will sync again\r\n                EncounterDAO encounterDAO = new EncounterDAO();\r\n                try {\r\n                    encounterDAO.updateEncounterSync(\"false\", encounterVitals);\r\n                    encounterDAO.updateEncounterModifiedDate(encounterVitals);\r\n                } catch (DAOException e) {\r\n                    FirebaseCrashlytics.getInstance().recordException(e);\r\n                }\r\n\r\n                Intent intent = new Intent(VitalsActivity.this, VisitSummaryActivity.class);\r\n                intent.putExtra(\"patientUuid\", patientUuid);\r\n                intent.putExtra(\"visitUuid\", visitUuid);\r\n                intent.putExtra(\"encounterUuidVitals\", encounterVitals);\r\n                intent.putExtra(\"encounterUuidAdultIntial\", encounterAdultIntials);\r\n                intent.putExtra(\"EncounterAdultInitial_LatestVisit\", EncounterAdultInitial_LatestVisit);\r\n                intent.putExtra(\"state\", state);\r\n                intent.putExtra(\"name\", patientName);\r\n                intent.putExtra(\"tag\", intentTag);\r\n                intent.putExtra(\"hasPrescription\", \"false\");\r\n                startActivity(intent);\r\n            } catch (DAOException dao) {\r\n                FirebaseCrashlytics.getInstance().recordException(dao);\r\n            }\r\n        } else {\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.HEIGHT);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            if (results.getHeight().equals(\"\")) {\r\n                obsDTO.setValue(\"0\");\r\n            } else {\r\n                obsDTO.setValue(results.getHeight());\r\n            }\r\n\r\n            obsDTO.setUuid(AppConstants.NEW_UUID);\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.WEIGHT);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getWeight());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.PULSE);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getPulse());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.SYSTOLIC_BP);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getBpsys());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.DIASTOLIC_BP);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getBpdia());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.TEMPERATURE);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getTemperature());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.RESPIRATORY);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getResp());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n\r\n            obsDTO = new ObsDTO();\r\n            obsDTO.setConceptuuid(UuidDictionary.SPO2);\r\n            obsDTO.setEncounteruuid(encounterVitals);\r\n            obsDTO.setCreator(sessionManager.getCreatorID());\r\n            obsDTO.setValue(results.getSpo2());\r\n\r\n            try {\r\n                obsDAO.insertObs(obsDTO);\r\n            } catch (DAOException e) {\r\n                FirebaseCrashlytics.getInstance().recordException(e);\r\n            }\r\n            Intent intent = new Intent(VitalsActivity.this, ComplaintNodeActivity.class);\r\n\r\n            intent.putExtra(\"patientUuid\", patientUuid);\r\n            intent.putExtra(\"visitUuid\", visitUuid);\r\n            intent.putExtra(\"encounterUuidVitals\", encounterVitals);\r\n            intent.putExtra(\"encounterUuidAdultIntial\", encounterAdultIntials);\r\n            intent.putExtra(\"EncounterAdultInitial_LatestVisit\", EncounterAdultInitial_LatestVisit);\r\n            intent.putExtra(\"state\", state);\r\n            intent.putExtra(\"name\", patientName);\r\n            intent.putExtra(\"float_ageYear_Month\", float_ageYear_Month);\r\n            intent.putExtra(\"tag\", intentTag);\r\n            startActivity(intent);\r\n        }\r\n    }\r\n\r\n    private String ConvertFtoC(String temperature) {\r\n\r\n        if(temperature != null && temperature.length() > 0) {\r\n//            String result = \"\";\r\n//            double fTemp = Double.parseDouble(temperature);\r\n//            double cTemp = ((fTemp - 32) * 5 / 9);\r\n//            Log.i(TAG, \"uploadTemperatureInC: \" + cTemp);\r\n//            DecimalFormat dtime = new DecimalFormat(\"#.##\");\r\n//            cTemp = Double.parseDouble(dtime.format(cTemp));\r\n//            result = String.valueOf(cTemp);\r\n//            return result;\r\n\r\n            //This new code has been added as previous throwing errors for Marathi language: By Nishita\r\n            String resultVal;\r\n            NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);\r\n            double a = Double.parseDouble(temperature);\r\n            double b = ((a - 32) * 5 / 9);\r\n//            nf.format(b);\r\n//            double roundOff = Math.round(b * 100.0) / 100.0;\r\n            resultVal = nf.format(b);\r\n            return resultVal;\r\n\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n//This code commented out not working properly for Marathi Tranlation and thus the new code written below; BY Nishita\r\n//    private String convertCtoF(String temperature) {\r\n//\r\n////        NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);\r\n////\r\n////        String result = \"\";\r\n////        double a = Double.parseDouble(temperature);\r\n////        double b = (a * 9 / 5) + 32;\r\n////\r\n////        DecimalFormat dtime = new DecimalFormat(\"0.00\");\r\n////        b = Double.parseDouble(dtime.format(b));\r\n////\r\n////        result = nf.format(b);\r\n////        return result;\r\n//\r\n//    }\r\n\r\n    private String convertCtoF(String temperature) {\r\n\r\n        String resultVal;\r\n        NumberFormat nf = NumberFormat.getInstance(Locale.ENGLISH);\r\n        double a = Double.parseDouble(temperature);\r\n        double b = (a * 9 / 5) + 32;\r\n        nf.format(b);\r\n        double roundOff = Math.round(b * 100.0) / 100.0;\r\n        resultVal = nf.format(roundOff);\r\n        return resultVal;\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/intelehealth/ekalhelpline/activities/vitalActivity/VitalsActivity.java	(revision 5cc7417156ca0c9186c7c10dedd44a0791b837ff)
+++ app/src/main/java/org/intelehealth/ekalhelpline/activities/vitalActivity/VitalsActivity.java	(date 1626351430054)
@@ -285,7 +285,7 @@
                 if (s.toString().trim().length() > 0 && !s.toString().startsWith(".")) {
                     if (Double.valueOf(s.toString()) > Double.valueOf(AppConstants.MAXIMUM_SPO2) ||
                             Double.valueOf(s.toString()) < Double.valueOf(AppConstants.MINIMUM_SPO2)) {
-                        mSpo2.setError(getResources().getString(R.string.spo_error,AppConstants.MINIMUM_SPO2,AppConstants.MAXIMUM_SPO2));
+                        mSpo2.setError(getResources().getString(R.string.spo_error));
                     } else {
                         mSpo2.setError(null);
                     }
@@ -499,7 +499,6 @@
     public void calculateBMI_onEdit(String height, String weight) {
         if (height.toString().trim().length() > 0 && !height.toString().startsWith(".") &&
                 weight.toString().trim().length() > 0 && !weight.toString().startsWith(".")) {
-
             mBMI.getText().clear();
             double numerator = Double.parseDouble(weight) * 10000;
             double denominator = (Double.parseDouble(height)) * (Double.parseDouble(height));
@@ -508,7 +507,8 @@
             mBMI.setText(df.format(bmi_value));
             Log.d("BMI","BMI: "+mBMI.getText().toString());
             //mBMI.setText(String.format(Locale.ENGLISH, "%.2f", bmi_value));
-        } else  {
+        }
+        else  {
             // do nothing
             mBMI.getText().clear();
         }
@@ -1057,6 +1057,7 @@
         return "";
 
     }
+
 //This code commented out not working properly for Marathi Tranlation and thus the new code written below; BY Nishita
 //    private String convertCtoF(String temperature) {
 //
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_11_11__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_11_11__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_13-07-2021_11_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_13-07-2021_11_48__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_19_14__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_19_14__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_18-06-2021_11_21__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_18-06-2021_11_21__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_13-07-2021_18_18__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_13-07-2021_18_18__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_17-06-2021_13_51__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_17-06-2021_13_51__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_21-06-2021_12_50__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_21-06-2021_12_50__Default_Changelist_.xml
