Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nbuildscript {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'http://jitpack.io' }\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.3.2'\r\n        \r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n        // Add the following line:\r\n        classpath 'com.google.gms:google-services:4.3.4'  // Google Services plugin\r\n        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        maven { url 'http://jitpack.io' }\r\n        maven { url 'http://maven.google.com' }\r\n\r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 121aa6d8ef863451cc88c599b1637ac9bc741641)
+++ build.gradle	(date 1605075483198)
@@ -7,7 +7,7 @@
         
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.3.2'
+        classpath 'com.android.tools.build:gradle:4.1.0'
         
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
Index: app/src/main/java/app/intelehealth/client/activities/todayPatientActivity/TodayPatientActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.intelehealth.client.activities.todayPatientActivity;\r\n\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.database.SQLException;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.Color;\r\nimport android.graphics.drawable.Drawable;\r\nimport android.os.Bundle;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.recyclerview.widget.DividerItemDecoration;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.widget.Button;\r\n\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\n\r\nimport app.intelehealth.client.R;\r\nimport app.intelehealth.client.app.AppConstants;\r\nimport app.intelehealth.client.app.IntelehealthApplication;\r\nimport app.intelehealth.client.database.InteleHealthDatabaseHelper;\r\nimport app.intelehealth.client.database.dao.EncounterDAO;\r\nimport app.intelehealth.client.database.dao.ProviderDAO;\r\nimport app.intelehealth.client.database.dao.VisitsDAO;\r\nimport app.intelehealth.client.models.TodayPatientModel;\r\nimport app.intelehealth.client.models.dto.EncounterDTO;\r\nimport app.intelehealth.client.models.dto.VisitDTO;\r\nimport app.intelehealth.client.utilities.Logger;\r\nimport app.intelehealth.client.utilities.SessionManager;\r\nimport app.intelehealth.client.activities.homeActivity.HomeActivity;\r\nimport app.intelehealth.client.utilities.StringUtils;\r\nimport app.intelehealth.client.utilities.exception.DAOException;\r\n\r\npublic class TodayPatientActivity extends AppCompatActivity {\r\n    private static final String TAG = TodayPatientActivity.class.getSimpleName();\r\n    InteleHealthDatabaseHelper mDbHelper;\r\n    private SQLiteDatabase db;\r\n    SessionManager sessionManager = null;\r\n    RecyclerView mTodayPatientList;\r\n   MaterialAlertDialogBuilder dialogBuilder;\r\n\r\n    private ArrayList<String> listPatientUUID = new ArrayList<String>();\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_today_patient);\r\n//        binding = DataBindingUtil.setContentView(this, R.layout.activity_today_patient);\r\n\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n\r\n        Drawable drawable = ContextCompat.getDrawable(getApplicationContext(),\r\n                R.drawable.ic_sort_white_24dp);\r\n//        toolbar.setOverflowIcon(drawable);\r\n\r\n\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n        getSupportActionBar().setDisplayShowTitleEnabled(true);\r\n\r\n        mTodayPatientList = findViewById(R.id.today_patient_recycler_view);\r\n        sessionManager = new SessionManager(this);\r\n        db = AppConstants.inteleHealthDatabaseHelper.getWriteDb();\r\n        if (sessionManager.isPullSyncFinished()) {\r\n            doQuery();\r\n        }\r\n\r\n        getVisits();\r\n\r\n    }\r\n\r\n    private void getVisits() {\r\n\r\n        ArrayList<String> encounterVisitUUID = new ArrayList<String>();\r\n        HashSet<String> hsPatientUUID = new HashSet<String>();\r\n\r\n        //Get all Visits\r\n        VisitsDAO visitsDAO = new VisitsDAO();\r\n        List<VisitDTO> visitsDTOList = visitsDAO.getAllVisits();\r\n\r\n        //Get all Encounters\r\n        EncounterDAO encounterDAO = new EncounterDAO();\r\n        List<EncounterDTO> encounterDTOList = encounterDAO.getAllEncounters();\r\n\r\n        //Get Visit Complete Encounters only, visit complete encounter id - bd1fbfaa-f5fb-4ebd-b75c-564506fc309e\r\n        if (encounterDTOList.size() > 0) {\r\n            for (int i = 0; i < encounterDTOList.size(); i++) {\r\n                if (encounterDTOList.get(i).getEncounterTypeUuid().equalsIgnoreCase(\"bd1fbfaa-f5fb-4ebd-b75c-564506fc309e\")) {\r\n                    encounterVisitUUID.add(encounterDTOList.get(i).getVisituuid());\r\n                }\r\n            }\r\n        }\r\n\r\n        //Get patientUUID from visitList\r\n        for (int i = 0; i < encounterVisitUUID.size(); i++) {\r\n\r\n            for (int j = 0; j < visitsDTOList.size(); j++) {\r\n\r\n                if (encounterVisitUUID.get(i).equalsIgnoreCase(visitsDTOList.get(j).getUuid())) {\r\n                    listPatientUUID.add(visitsDTOList.get(j).getPatientuuid());\r\n                }\r\n            }\r\n        }\r\n\r\n        if (listPatientUUID.size() > 0) {\r\n\r\n            hsPatientUUID.addAll(listPatientUUID);\r\n            listPatientUUID.clear();\r\n            listPatientUUID.addAll(hsPatientUUID);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    private void doQuery() {\r\n        List<TodayPatientModel> todayPatientList = new ArrayList<>();\r\n        Date cDate = new Date();\r\n        String currentDate = new SimpleDateFormat(\"yyyy-MM-dd\").format(cDate);\r\n        String query = \"SELECT a.uuid, a.sync, a.patientuuid, a.startdate, a.enddate, b.first_name, b.middle_name, b.last_name, b.date_of_birth,b.openmrs_id \" +\r\n                \"FROM tbl_visit a, tbl_patient b  \" +\r\n                \"WHERE a.patientuuid = b.uuid \" +\r\n                \"AND a.startdate LIKE '\" + currentDate + \"T%'   \" +\r\n                \"GROUP BY a.uuid ORDER BY a.patientuuid ASC\";\r\n        Logger.logD(TAG, query);\r\n        final Cursor cursor = db.rawQuery(query, null);\r\n\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                do {\r\n                    try {\r\n                        todayPatientList.add(new TodayPatientModel(\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"uuid\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"patientuuid\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"startdate\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"enddate\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"openmrs_id\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"first_name\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"middle_name\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"last_name\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"date_of_birth\")),\r\n                                StringUtils.mobileNumberEmpty(phoneNumber(cursor.getString(cursor.getColumnIndexOrThrow(\"patientuuid\")))),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"sync\")))\r\n                        );\r\n                    } catch (DAOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                } while (cursor.moveToNext());\r\n            }\r\n        }\r\n        if (cursor != null) {\r\n            cursor.close();\r\n        }\r\n\r\n        if (!todayPatientList.isEmpty()) {\r\n            for (TodayPatientModel todayPatientModel : todayPatientList)\r\n                Log.i(TAG, todayPatientModel.getFirst_name() + \" \" + todayPatientModel.getLast_name());\r\n\r\n            TodayPatientAdapter mTodayPatientAdapter = new TodayPatientAdapter(todayPatientList, TodayPatientActivity.this, listPatientUUID);\r\n            LinearLayoutManager linearLayoutManager = new LinearLayoutManager(TodayPatientActivity.this);\r\n            mTodayPatientList.setLayoutManager(linearLayoutManager);\r\n           /* mTodayPatientList.addItemDecoration(new\r\n                    DividerItemDecoration(TodayPatientActivity.this,\r\n                    DividerItemDecoration.VERTICAL));*/\r\n            mTodayPatientList.setAdapter(mTodayPatientAdapter);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_today_patient, menu);\r\n        inflater.inflate(R.menu.today_filter, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case android.R.id.home:\r\n                finish();\r\n                return true;\r\n            case R.id.summary_endAllVisit:\r\n                endAllVisit();\r\n\r\n            case R.id.action_filter:\r\n                //alert box.\r\n                displaySingleSelectionDialog();    //function call\r\n\r\n\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n\r\n    private void displaySingleSelectionDialog() {\r\n        ProviderDAO providerDAO = new ProviderDAO();\r\n        ArrayList selectedItems = new ArrayList<>();\r\n        String[] creator_names = null;\r\n        String[] creator_uuid = null;\r\n        try {\r\n            creator_names = providerDAO.getProvidersList().toArray(new String[0]);\r\n            creator_uuid = providerDAO.getProvidersUuidList().toArray(new String[0]);\r\n        } catch (DAOException e) {\r\n            e.printStackTrace();\r\n        }\r\n//        boolean[] checkedItems = {false, false, false, false};\r\n        // ngo_numbers = getResources().getStringArray(R.array.ngo_numbers);\r\n        dialogBuilder = new MaterialAlertDialogBuilder(TodayPatientActivity.this);\r\n        dialogBuilder.setTitle(R.string.filter_by_creator);\r\n\r\n        String[] finalCreator_names = creator_names;\r\n        String[] finalCreator_uuid = creator_uuid;\r\n        dialogBuilder.setMultiChoiceItems(creator_names, null, new DialogInterface.OnMultiChoiceClickListener() {\r\n\r\n\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int which, boolean isChecked) {\r\n                Logger.logD(TAG, \"multichoice\" + which + isChecked);\r\n                if (isChecked) {\r\n                    // If the user checked the item, add it to the selected items\r\n                    selectedItems.add(finalCreator_uuid[which]);\r\n                    Logger.logD(TAG, finalCreator_names[which] + finalCreator_uuid[which]);\r\n                } else if (selectedItems.contains(which)) {\r\n                    // Else, if the item is already in the array, remove it\r\n                    selectedItems.remove(finalCreator_uuid[which]);\r\n                    Logger.logD(TAG, finalCreator_names[which] + finalCreator_uuid[which]);\r\n                }\r\n            }\r\n        });\r\n\r\n        dialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                //display filter query code on list menu\r\n                Logger.logD(TAG, \"onclick\" + i);\r\n                doQueryWithProviders(selectedItems);\r\n            }\r\n        });\r\n\r\n        dialogBuilder.setNegativeButton(R.string.generic_cancel, null);\r\n//        dialogBuilder.show();\r\n\r\n        AlertDialog alertDialog = dialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this,alertDialog);\r\n    }\r\n\r\n    private void doQueryWithProviders(List<String> providersuuids) {\r\n        List<TodayPatientModel> todayPatientList = new ArrayList<>();\r\n        Date cDate = new Date();\r\n        String currentDate = new SimpleDateFormat(\"yyyy-MM-dd\").format(cDate);\r\n        String query = \"SELECT  distinct a.uuid, a.sync, a.patientuuid, a.startdate, a.enddate, b.first_name, b.middle_name, b.last_name, b.date_of_birth,b.openmrs_id \" +\r\n                \"FROM tbl_visit a, tbl_patient b, tbl_encounter c \" +\r\n                \"WHERE a.patientuuid = b.uuid \" +\r\n                \"AND c.visituuid=a.uuid and c.provider_uuid in ('\" + StringUtils.convertUsingStringBuilder(providersuuids) + \"')  \" +\r\n                \"AND a.startdate LIKE '\" + currentDate + \"T%'\" +\r\n                \"ORDER BY a.patientuuid ASC \";\r\n        Logger.logD(TAG, query);\r\n        final Cursor cursor = db.rawQuery(query, null);\r\n\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                do {\r\n                    try {\r\n                        todayPatientList.add(new TodayPatientModel(\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"uuid\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"patientuuid\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"startdate\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"enddate\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"openmrs_id\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"first_name\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"middle_name\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"last_name\")),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"date_of_birth\")),\r\n                                StringUtils.mobileNumberEmpty(phoneNumber(cursor.getString(cursor.getColumnIndexOrThrow(\"patientuuid\")))),\r\n                                cursor.getString(cursor.getColumnIndexOrThrow(\"sync\")))\r\n                        );\r\n                    } catch (DAOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                } while (cursor.moveToNext());\r\n            }\r\n        }\r\n        if (cursor != null) {\r\n            cursor.close();\r\n        }\r\n\r\n        if (!todayPatientList.isEmpty()) {\r\n            for (TodayPatientModel todayPatientModel : todayPatientList)\r\n                Log.i(TAG, todayPatientModel.getFirst_name() + \" \" + todayPatientModel.getLast_name());\r\n\r\n            TodayPatientAdapter mTodayPatientAdapter = new TodayPatientAdapter(todayPatientList, TodayPatientActivity.this, listPatientUUID);\r\n            LinearLayoutManager linearLayoutManager = new LinearLayoutManager(TodayPatientActivity.this);\r\n            mTodayPatientList.setLayoutManager(linearLayoutManager);\r\n            mTodayPatientList.addItemDecoration(new\r\n                    DividerItemDecoration(this,\r\n                    DividerItemDecoration.VERTICAL));\r\n            mTodayPatientList.setAdapter(mTodayPatientAdapter);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    private void endAllVisit() {\r\n\r\n        int failedUploads = 0;\r\n\r\n        String query = \"SELECT tbl_visit.patientuuid, tbl_visit.enddate, tbl_visit.uuid,\" +\r\n                \"tbl_patient.first_name, tbl_patient.middle_name, tbl_patient.last_name FROM tbl_visit, tbl_patient WHERE\" +\r\n                \" tbl_visit.patientuuid = tbl_patient.uuid AND tbl_visit.enddate IS NULL OR tbl_visit.enddate = ''\";\r\n\r\n        final Cursor cursor = db.rawQuery(query, null);\r\n\r\n        if (cursor != null) {\r\n            if (cursor.moveToFirst()) {\r\n                do {\r\n                    boolean result = endVisit(\r\n                            cursor.getString(cursor.getColumnIndexOrThrow(\"patientuuid\")),\r\n                            cursor.getString(cursor.getColumnIndexOrThrow(\"first_name\")) + \" \" +\r\n                                    cursor.getString(cursor.getColumnIndexOrThrow(\"last_name\")),\r\n                            cursor.getString(cursor.getColumnIndexOrThrow(\"uuid\"))\r\n                    );\r\n                    if (!result) failedUploads++;\r\n                } while (cursor.moveToNext());\r\n            }\r\n        }\r\n        if (cursor != null) {\r\n            cursor.close();\r\n        }\r\n\r\n        if (failedUploads == 0) {\r\n            Intent intent = new Intent(this, HomeActivity.class);\r\n            startActivity(intent);\r\n        } else {\r\n            MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(this);\r\n            alertDialogBuilder.setMessage(getString(R.string.unable_to_end) + failedUploads +\r\n                    getString(R.string.upload_before_end_visit_active));\r\n            alertDialogBuilder.setNeutralButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    dialog.dismiss();\r\n                }\r\n            });\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n            alertDialog.show();\r\n            IntelehealthApplication.setAlertDialogCustomTheme(this,alertDialog);\r\n        }\r\n\r\n    }\r\n\r\n    private boolean endVisit(String patientID, String patientName, String visitUUID) {\r\n\r\n        return visitUUID != null;\r\n\r\n    }\r\n\r\n    private String phoneNumber(String patientuuid) throws DAOException {\r\n        String phone = null;\r\n        Cursor idCursor = db.rawQuery(\"SELECT value  FROM tbl_patient_attribute where patientuuid = ? AND person_attribute_type_uuid='14d4f066-15f5-102d-96e4-000c29c2a5d7' \", new String[]{patientuuid});\r\n        try {\r\n            if (idCursor.getCount() != 0) {\r\n                while (idCursor.moveToNext()) {\r\n\r\n                    phone = idCursor.getString(idCursor.getColumnIndexOrThrow(\"value\"));\r\n\r\n                }\r\n            }\r\n        } catch (SQLException s) {\r\n            FirebaseCrashlytics.getInstance().recordException(s);\r\n        }\r\n        idCursor.close();\r\n\r\n        return phone;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/app/intelehealth/client/activities/todayPatientActivity/TodayPatientActivity.java	(revision 121aa6d8ef863451cc88c599b1637ac9bc741641)
+++ app/src/main/java/app/intelehealth/client/activities/todayPatientActivity/TodayPatientActivity.java	(date 1605074170892)
@@ -121,11 +121,9 @@
         }
 
         if (listPatientUUID.size() > 0) {
-
             hsPatientUUID.addAll(listPatientUUID);
             listPatientUUID.clear();
             listPatientUUID.addAll(hsPatientUUID);
-
         }
     }
 
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 121aa6d8ef863451cc88c599b1637ac9bc741641)
+++ .idea/compiler.xml	(date 1605075475368)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="12" />
   </component>
 </project>
\ No newline at end of file
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Wed Apr 22 14:32:59 IST 2020\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-5.6.4-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision 121aa6d8ef863451cc88c599b1637ac9bc741641)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1605075483207)
@@ -1,6 +1,6 @@
-#Wed Apr 22 14:32:59 IST 2020
+#Wed Nov 11 11:48:03 IST 2020
 distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.4-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.5-bin.zip
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RemoteRepositoriesConfiguration\">\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"central\" />\r\n      <option name=\"name\" value=\"Maven Central repository\" />\r\n      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"jboss.community\" />\r\n      <option name=\"name\" value=\"JBoss Community repository\" />\r\n      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"maven\" />\r\n      <option name=\"name\" value=\"maven\" />\r\n      <option name=\"url\" value=\"http://jitpack.io\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"maven3\" />\r\n      <option name=\"name\" value=\"maven3\" />\r\n      <option name=\"url\" value=\"http://maven.fabric.io/public\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"BintrayJCenter\" />\r\n      <option name=\"name\" value=\"BintrayJCenter\" />\r\n      <option name=\"url\" value=\"https://jcenter.bintray.com/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"maven2\" />\r\n      <option name=\"name\" value=\"maven2\" />\r\n      <option name=\"url\" value=\"http://maven.google.com\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"Google\" />\r\n      <option name=\"name\" value=\"Google\" />\r\n      <option name=\"url\" value=\"https://dl.google.com/dl/android/maven2/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"C:\\Users\\Sagar\\AppData\\Local\\Android\\Sdk\\extras\\m2repository\" />\r\n      <option name=\"name\" value=\"C:\\Users\\Sagar\\AppData\\Local\\Android\\Sdk\\extras\\m2repository\" />\r\n      <option name=\"url\" value=\"file:/$USER_HOME$/AppData/Local/Android/Sdk/extras/m2repository\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"C:\\Users\\Sagar\\AppData\\Local\\Android\\Sdk\\extras\\android\\m2repository\" />\r\n      <option name=\"name\" value=\"C:\\Users\\Sagar\\AppData\\Local\\Android\\Sdk\\extras\\android\\m2repository\" />\r\n      <option name=\"url\" value=\"file:/$USER_HOME$/AppData/Local/Android/Sdk/extras/android/m2repository/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"C:\\Users\\Sagar\\AppData\\Local\\Android\\Sdk\\extras\\google\\m2repository\" />\r\n      <option name=\"name\" value=\"C:\\Users\\Sagar\\AppData\\Local\\Android\\Sdk\\extras\\google\\m2repository\" />\r\n      <option name=\"url\" value=\"file:/$USER_HOME$/AppData/Local/Android/Sdk/extras/google/m2repository/\" />\r\n    </remote-repository>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(revision 121aa6d8ef863451cc88c599b1637ac9bc741641)
+++ .idea/jarRepositories.xml	(date 1605075532802)
@@ -51,5 +51,15 @@
       <option name="name" value="C:\Users\Sagar\AppData\Local\Android\Sdk\extras\google\m2repository" />
       <option name="url" value="file:/$USER_HOME$/AppData/Local/Android/Sdk/extras/google/m2repository/" />
     </remote-repository>
+    <remote-repository>
+      <option name="id" value="C:\Users\Shubham\AppData\Local\Android\Sdk\extras\android\m2repository" />
+      <option name="name" value="C:\Users\Shubham\AppData\Local\Android\Sdk\extras\android\m2repository" />
+      <option name="url" value="file:/$USER_HOME$/AppData/Local/Android/Sdk/extras/android/m2repository" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="C:\Users\Shubham\AppData\Local\Android\Sdk\extras\google\m2repository" />
+      <option name="name" value="C:\Users\Shubham\AppData\Local\Android\Sdk\extras\google\m2repository" />
+      <option name="url" value="file:/$USER_HOME$/AppData/Local/Android/Sdk/extras/google/m2repository" />
+    </remote-repository>
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 121aa6d8ef863451cc88c599b1637ac9bc741641)
+++ .idea/misc.xml	(date 1605075475309)
@@ -5,7 +5,7 @@
       <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
     </configurations>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_12" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
