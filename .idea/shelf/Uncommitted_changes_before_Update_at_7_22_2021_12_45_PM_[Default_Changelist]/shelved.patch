Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,1 +0,0 @@
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56__Default_Changelist_.xml
Index: .idea/copyright/sanjay_kranthi.xml
===================================================================
--- .idea/copyright/sanjay_kranthi.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/copyright/sanjay_kranthi.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,6 +0,0 @@
-<component name="CopyrightManager">
-  <copyright>
-    <option name="notice" value="Copyright (c) &amp;#36;today.year.&#10;Project Developed for InteleHealth  &#10;kranthi.kumar@mahiti.org&#10;kranthi0987@gmail.com " />
-    <option name="myName" value="sanjay kranthi" />
-  </copyright>
-</component>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2021_11_53_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2021_11_53_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2021_11_53_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,18 +0,0 @@
-Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/privacyNoticeActivity/PrivacyNotice_Activity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package org.intelehealth.ekalhelpline.activities.privacyNoticeActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.text.util.Linkify;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.google.android.material.checkbox.MaterialCheckBox;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\n\r\nimport org.intelehealth.ekalhelpline.activities.identificationActivity.IdentificationActivity;\r\n\r\npublic class PrivacyNotice_Activity extends AppCompatActivity implements View.OnClickListener {\r\n    TextView privacy_textview;\r\n    SessionManager sessionManager = null;\r\n    private boolean hasLicense = false;\r\n    Button accept, reject;\r\n    MaterialCheckBox checkBox_cho;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        sessionManager = new SessionManager(this);\r\n        String language = sessionManager.getAppLanguage();\r\n        //In case of crash still the app should hold the current lang fix.\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_privacy_notice_2);\r\n        setTitle(getString(R.string.privacy_notice_title));\r\n\r\n        /*\r\n         * Toolbar which displays back arrow on action bar\r\n         * Add the below lines for every activity*/\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n\r\n        privacy_textview = findViewById(R.id.privacy_text);\r\n        privacy_textview.setAutoLinkMask(Linkify.ALL);\r\n        accept = findViewById(R.id.button_accept);\r\n        reject = findViewById(R.id.button_reject);\r\n        checkBox_cho = findViewById(R.id.checkbox_CHO);\r\n\r\n\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse(\r\n                        FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, this),\r\n                        String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n//            SharedPreferences sharedPreferences = getSharedPreferences(\"CommonPrefs\", Activity.MODE_PRIVATE);\r\n//            if(sharedPreferences.getAll().values().contains(\"cb\"))\r\n            Locale current = getResources().getConfiguration().locale;\r\n//            if (current.toString().equals(\"cb\")) {\r\n//                String privacy_string = obj.getString(\"privacyNoticeText_Cebuano\");\r\n//                if (privacy_string.isEmpty()) {\r\n//                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n//                    privacy_textview.setText(privacy_string);\r\n//                } else {\r\n//                    privacy_textview.setText(privacy_string);\r\n//                }\r\n//\r\n//            } else\r\n            if (current.toString().equals(\"or\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Odiya\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"hi\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Hindi\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"kn\")) {          //Privacy text support for Kannada\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Kannada\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"mr\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Marathi\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"gu\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Gujrathi\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n            } else {\r\n\r\n                String privacy_string = obj.getString(\"privacyNoticeText\");\r\n                privacy_textview.setText(privacy_string);\r\n            }\r\n\r\n            accept.setOnClickListener(this);\r\n            reject.setOnClickListener(this);\r\n\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n\r\n        if (checkBox_cho.isChecked() && v.getId() == R.id.button_accept) {\r\n\r\n            //Clear HouseHold UUID from Session for new registration\r\n            sessionManager.setHouseholdUuid(\"\");\r\n\r\n            Intent intent = new Intent(getApplicationContext(), IdentificationActivity.class);\r\n            intent.putExtra(\"privacy\", accept.getText().toString()); //privacy value send to identificationActivity\r\n            Log.d(\"Privacy\", \"selected radio: \" + accept.getText().toString());\r\n            startActivity(intent);\r\n        } else if (checkBox_cho.isChecked() && v.getId() == R.id.button_reject) {\r\n            Toast.makeText(PrivacyNotice_Activity.this,\r\n                    getString(R.string.privacy_reject_toast), Toast.LENGTH_SHORT).show();\r\n            finish();\r\n        } else {\r\n            Toast.makeText(PrivacyNotice_Activity.this,\r\n                    getString(R.string.please_read_out_privacy_consent_first), Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/org/intelehealth/ekalhelpline/activities/privacyNoticeActivity/PrivacyNotice_Activity.java	(revision 79bb80ad7dd95dcedc1ce54949ffb365ecb0c5c6)
-+++ app/src/main/java/org/intelehealth/ekalhelpline/activities/privacyNoticeActivity/PrivacyNotice_Activity.java	(date 1621491808529)
-@@ -146,7 +146,7 @@
-                 }
- 
-             } else if (current.toString().equals("gu")) {
--                String privacy_string = obj.getString("privacyNoticeText_Gujrathi");
-+                String privacy_string = obj.getString("privacyNoticeText_Gujarati");
-                 if (privacy_string.isEmpty()) {
-                     privacy_string = obj.getString("privacyNoticeText");
-                     privacy_textview.setText(privacy_string);
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_14-07-2021_10_56_[Default_Changelist]" date="1626240368731" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 14-07-2021 10:56 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/encodings.xml
===================================================================
--- .idea/encodings.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/encodings.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Encoding">
-    <file url="PROJECT" charset="UTF-8" />
-  </component>
-</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_14-07-2021_10_56_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,42 +0,0 @@
-Index: .idea/compiler.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"11\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/compiler.xml	(revision 10e0af02175e66bc97b8565a0399ddb8d9144848)
-+++ .idea/compiler.xml	(date 1626240343985)
-@@ -1,6 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="CompilerConfiguration">
--    <bytecodeTargetLevel target="11" />
-+    <bytecodeTargetLevel target="12" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"11\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/gradle.xml	(revision 10e0af02175e66bc97b8565a0399ddb8d9144848)
-+++ .idea/gradle.xml	(date 1626240343991)
-@@ -1,5 +1,6 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-+  <component name="GradleMigrationSettings" migrationVersion="1" />
-   <component name="GradleSettings">
-     <option name="linkedExternalProjectsSettings">
-       <GradleProjectSettings>
-@@ -14,6 +15,7 @@
-           </set>
-         </option>
-         <option name="resolveModulePerSourceSet" value="false" />
-+        <option name="useQualifiedModuleNames" value="true" />
-       </GradleProjectSettings>
-     </option>
-   </component>
Index: .idea/codeStyles/Project.xml
===================================================================
--- .idea/codeStyles/Project.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/codeStyles/Project.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,116 +0,0 @@
-<component name="ProjectCodeStyleConfiguration">
-  <code_scheme name="Project" version="173">
-    <codeStyleSettings language="XML">
-      <indentOptions>
-        <option name="CONTINUATION_INDENT_SIZE" value="4" />
-      </indentOptions>
-      <arrangement>
-        <rules>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>xmlns:android</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>^$</XML_NAMESPACE>
-                </AND>
-              </match>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>xmlns:.*</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>^$</XML_NAMESPACE>
-                </AND>
-              </match>
-              <order>BY_NAME</order>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>.*:id</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                </AND>
-              </match>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>.*:name</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                </AND>
-              </match>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>name</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>^$</XML_NAMESPACE>
-                </AND>
-              </match>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>style</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>^$</XML_NAMESPACE>
-                </AND>
-              </match>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>.*</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>^$</XML_NAMESPACE>
-                </AND>
-              </match>
-              <order>BY_NAME</order>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>.*</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
-                </AND>
-              </match>
-              <order>ANDROID_ATTRIBUTE_ORDER</order>
-            </rule>
-          </section>
-          <section>
-            <rule>
-              <match>
-                <AND>
-                  <NAME>.*</NAME>
-                  <XML_ATTRIBUTE />
-                  <XML_NAMESPACE>.*</XML_NAMESPACE>
-                </AND>
-              </match>
-              <order>BY_NAME</order>
-            </rule>
-          </section>
-        </rules>
-      </arrangement>
-    </codeStyleSettings>
-  </code_scheme>
-</component>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,1218 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07_[Default_Changelist]/shelved.patch	(date 1621420899669)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07_[Default_Changelist]/shelved.patch	(date 1621420899669)
-@@ -0,0 +1,130 @@
-+Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package org.intelehealth.ekalhelpline.activities.homeActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.WorkManager;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.ParsePosition;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.activities.activePatientsActivity.ActivePatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.loginActivity.LoginActivity;\r\nimport org.intelehealth.ekalhelpline.activities.searchPatientActivity.SearchPatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.settingsActivity.SettingsActivity;\r\nimport org.intelehealth.ekalhelpline.activities.todayPatientActivity.TodayPatientActivity;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.app.IntelehealthApplication;\r\nimport org.intelehealth.ekalhelpline.models.CheckAppUpdateRes;\r\nimport org.intelehealth.ekalhelpline.models.DownloadMindMapRes;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiClient;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiInterface;\r\nimport org.intelehealth.ekalhelpline.syncModule.SyncUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.DownloadMindMaps;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.Logger;\r\nimport org.intelehealth.ekalhelpline.utilities.NetworkConnection;\r\nimport org.intelehealth.ekalhelpline.utilities.OfflineLogin;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\nimport org.intelehealth.ekalhelpline.widget.materialprogressbar.CustomProgressDialog;\r\nimport io.reactivex.Observable;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.observers.DisposableObserver;\r\nimport io.reactivex.observers.DisposableSingleObserver;\r\nimport io.reactivex.schedulers.Schedulers;\r\n\r\n/**\r\n * Home Screen\r\n */\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = HomeActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private ProgressDialog mSyncProgressDialog;\r\n    CountDownTimer CDT;\r\n    private boolean hasLicense = false;\r\n    int i = 5;\r\n\r\n    TextView lastSyncTextView;\r\n    TextView lastSyncAgo;\r\n    Button manualSyncButton;\r\n    //IntentFilter filter;\r\n\r\n    SyncUtils syncUtils = new SyncUtils();\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n    private String key = null;\r\n    private String licenseUrl = null;\r\n\r\n    Context context;\r\n    CustomProgressDialog customProgressDialog;\r\n    private String mindmapURL = \"\";\r\n    private DownloadMindMaps mTask;\r\n    ProgressDialog mProgressDialog;\r\n\r\n    private int versionCode = 0;\r\n    private CompositeDisposable disposable = new CompositeDisposable();\r\n    TextView newPatient_textview, findPatients_textview, todaysVisits_textview,\r\n            activeVisits_textview, videoLibrary_textview, help_textview;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        sessionManager = new SessionManager(this);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n\r\n        String language = sessionManager.getAppLanguage();\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n\r\n        setTitle(R.string.title_activity_login);\r\n        context = HomeActivity.this;\r\n        customProgressDialog = new CustomProgressDialog(context);\r\n        /*syncBroadcastReceiver = new SyncBroadcastReceiver();\r\n        filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);*/\r\n\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        checkAppVer();  //auto-update feature.\r\n\r\n        Logger.logD(TAG, \"onCreate: \" + getFilesDir().toString());\r\n        lastSyncTextView = findViewById(R.id.lastsynctextview);\r\n        lastSyncAgo = findViewById(R.id.lastsyncago);\r\n        manualSyncButton = findViewById(R.id.manualsyncbutton);\r\n//        manualSyncButton.setPaintFlags(Paint.UNDERLINE_TEXT_FLAG);\r\n       // c1 = findViewById(R.id.cardview_newpat);\r\n        c2 = findViewById(R.id.cardview_find_patient);\r\n        c3 = findViewById(R.id.cardview_today_patient);\r\n        c4 = findViewById(R.id.cardview_active_patients);\r\n        c5 = findViewById(R.id.cardview_video_libraby);\r\n        c6 = findViewById(R.id.cardview_help_whatsapp);\r\n\r\n        //card textview referrenced to fix bug of localization not working in some cases...\r\n     /*   newPatient_textview = findViewById(R.id.newPatient_textview);\r\n        newPatient_textview.setText(R.string.new_patient);*/\r\n\r\n        findPatients_textview = findViewById(R.id.findPatients_textview);\r\n        findPatients_textview.setText(R.string.find_patient);\r\n\r\n        todaysVisits_textview = findViewById(R.id.todaysVisits_textview);\r\n        todaysVisits_textview.setText(R.string.today_visits);\r\n\r\n        activeVisits_textview = findViewById(R.id.activeVisits_textview);\r\n        activeVisits_textview.setText(R.string.active_visits);\r\n\r\n        videoLibrary_textview = findViewById(R.id.videoLibrary_textview);\r\n        videoLibrary_textview.setText(R.string.video_library);\r\n\r\n        help_textview = findViewById(R.id.help_textview);\r\n        help_textview.setText(R.string.Whatsapp_Help_Cardview);\r\n\r\n        // manualSyncButton.setText(R.string.sync_now);\r\n        manualSyncButton.setText(R.string.refresh);\r\n\r\n        //Help section of watsapp...\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String phoneNumberWithCountryCode = \"+917005308163\";\r\n                String message =\r\n                        getString(R.string.hello_my_name_is) + \" \" + sessionManager.getChwname() + \" \" +\r\n                                /*\" from \" + sessionManager.getState() + */getString(R.string.i_need_assistance);\r\n\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\r\n                                String.format(\"https://api.whatsapp.com/send?phone=%s&text=%s\",\r\n                                        phoneNumberWithCountryCode, message))));\r\n            }\r\n        });\r\n/*\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Loads the config file values and check for the boolean value of privacy key.\r\n                ConfigUtils configUtils = new ConfigUtils(HomeActivity.this);\r\n                if (configUtils.privacy_notice()) {\r\n                    Intent intent = new Intent(HomeActivity.this, PrivacyNotice_Activity.class);\r\n                    startActivity(intent);\r\n                } else {\r\n                    //Clear HouseHold UUID from Session for new registration\r\n                    sessionManager.setHouseholdUuid(\"\");\r\n\r\n                    Intent intent = new Intent(HomeActivity.this, IdentificationActivity.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n*/\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, SearchPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, TodayPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, ActivePatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                videoLibrary();\r\n            }\r\n        });\r\n\r\n\r\n        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n\r\n//        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n////            lastSyncAgo.setText(CalculateAgoTime());\r\n//        }\r\n\r\n        manualSyncButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, context);\r\n\r\n                if (isNetworkConnected()) {\r\n                    Toast.makeText(context, getString(R.string.syncInProgress), Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Toast.makeText(context, context.getString(R.string.failed_synced), Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                syncUtils.syncForeground(\"home\");\r\n//                if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                        && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n//                    lastSyncAgo.setText(sessionManager.getLastTimeAgo());\r\n//                }\r\n            }\r\n        });\r\n        if (sessionManager.isFirstTimeLaunched()) {\r\n            mSyncProgressDialog = new ProgressDialog(HomeActivity.this, R.style.AlertDialogStyle); //thats how to add a style!\r\n            mSyncProgressDialog.setTitle(R.string.syncInProgress);\r\n            mSyncProgressDialog.setCancelable(false);\r\n            mSyncProgressDialog.setProgress(i);\r\n\r\n            mSyncProgressDialog.show();\r\n\r\n            syncUtils.initialSync(\"home\");\r\n        } else {\r\n            // if initial setup done then we can directly set the periodic background sync job\r\n            WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n        }\r\n\r\n\r\n        showProgressbar();\r\n    }\r\n\r\n    //function for handling the video library feature...\r\n    private void videoLibrary() {\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            if (obj.has(\"video_library\")) {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                Uri uri = Uri.parse(obj.getString(\"video_library\"));\r\n                intent.setData(uri);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(context, \"No config attribute found\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void showProgressbar() {\r\n\r\n\r\n// instantiate it within the onCreate method\r\n        mProgressDialog = new ProgressDialog(HomeActivity.this);\r\n        mProgressDialog.setMessage(getString(R.string.download_protocols));\r\n        mProgressDialog.setIndeterminate(true);\r\n        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n        mProgressDialog.setCancelable(false);\r\n    }\r\n\r\n\r\n    private String CalculateAgoTime() {\r\n        String finalTime = \"\";\r\n\r\n        String syncTime = sessionManager.getLastSyncDateTime();\r\n\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMM yyyy HH:mm\", Locale.getDefault());\r\n        ParsePosition pos = new ParsePosition(0);\r\n        long then = formatter.parse(syncTime, pos).getTime();\r\n        long now = new Date().getTime();\r\n\r\n        long seconds = (now - then) / 1000;\r\n        long minutes = seconds / 60;\r\n        long hours = minutes / 60;\r\n        long days = hours / 24;\r\n\r\n        String time = \"\";\r\n        long num = 0;\r\n        if (days > 0) {\r\n            num = days;\r\n            time = days + \" \" + context.getString(R.string.day);\r\n        } else if (hours > 0) {\r\n            num = hours;\r\n            time = hours + \" \" + context.getString(R.string.hour);\r\n        } else if (minutes >= 0) {\r\n            num = minutes;\r\n            time = minutes + \" \" + context.getString(R.string.minute);\r\n        }\r\n//      <For Seconds>\r\n//      else {\r\n//            num = seconds;\r\n//            time = seconds + \" second\";\r\n//      }\r\n        if (num > 1) {\r\n            time += context.getString(R.string.s);\r\n        }\r\n        finalTime = time + \" \" + context.getString(R.string.ago);\r\n\r\n        sessionManager.setLastTimeAgo(finalTime);\r\n\r\n        return finalTime;\r\n    }\r\n\r\n    private boolean isNetworkConnected() {\r\n        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n\r\n        return cm.getActiveNetworkInfo() != null && cm.getActiveNetworkInfo().isConnected();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_home, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n//            case R.id.syncOption:\r\n//                refreshDatabases();\r\n//                return true;\r\n            case R.id.settingsOption:\r\n                settings();\r\n                return true;\r\n            case R.id.updateProtocolsOption: {\r\n\r\n\r\n                if (NetworkConnection.isOnline(this)) {\r\n\r\n                    if (!sessionManager.getLicenseKey().isEmpty()) {\r\n\r\n                        String licenseUrl = sessionManager.getMindMapServerUrl();\r\n                        String licenseKey = sessionManager.getLicenseKey();\r\n                        getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\", licenseKey);\r\n\r\n                    } else {\r\n//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);\r\n//                    LayoutInflater li = LayoutInflater.from(this);\r\n//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n//                    dialog.setTitle(getString(R.string.enter_license_key))\r\n//                            .setView(promptsView)\r\n//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//\r\n//                                    Dialog d = (Dialog) dialog;\r\n//\r\n//                                    EditText etURL = d.findViewById(R.id.licenseurl);\r\n//                                    EditText etKey = d.findViewById(R.id.licensekey);\r\n//                                    String url = etURL.getText().toString().replace(\" \", \"\");\r\n//                                    String key = etKey.getText().toString().trim();\r\n//\r\n//                                    if (url.isEmpty()) {\r\n//                                        etURL.setError(getResources().getString(R.string.enter_server_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (url.contains(\":\")) {\r\n//                                        etURL.setError(getResources().getString(R.string.invalid_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (key.isEmpty()) {\r\n//                                        etKey.setError(getResources().getString(R.string.enter_license_key));\r\n//                                        etKey.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//\r\n//                                    sessionManager.setMindMapServerUrl(url); //trim\r\n//                                    getMindmapDownloadURL(\"https://\" + url + \":3004/\", key);\r\n//\r\n//                                }\r\n//                            })\r\n//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//                                    dialog.dismiss();\r\n//                                }\r\n//                            });\r\n//                    Dialog builderDialog = dialog.show();\r\n//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);\r\n//\r\n//                    // }\r\n                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n                        LayoutInflater li = LayoutInflater.from(this);\r\n                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n\r\n                                        dialog.setTitle(getString(R.string.enter_license_key))\r\n                                                .setView(promptsView)\r\n                                                .setPositiveButton(getString(R.string.button_ok), null)\r\n                                                .setNegativeButton(getString(R.string.button_cancel), null);\r\n\r\n                                        AlertDialog alertDialog = dialog.create();\r\n                                        alertDialog.setView(promptsView, 20, 0, 20, 0);\r\n                                        alertDialog.show();\r\n                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...\r\n\r\n                                        // Get the alert dialog buttons reference\r\n                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);\r\n\r\n                                        // Change the alert dialog buttons text and background color\r\n                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n                                        positiveButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                EditText text = promptsView.findViewById(R.id.licensekey);\r\n                                                EditText url = promptsView.findViewById(R.id.licenseurl);\r\n\r\n                                                url.setError(null);\r\n                                                text.setError(null);\r\n\r\n                                                //If both are not entered...\r\n                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is empty...key is not empty...\r\n                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is not empty...key is empty...\r\n                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    text.requestFocus();\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url has : in it...\r\n                                                if (url.getText().toString().trim().contains(\":\")) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.invalid_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If url entered is Invalid...\r\n                                                if (!url.getText().toString().trim().isEmpty()) {\r\n                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {\r\n                                                        String url_field = \"https://\" + url.getText().toString() + \":3004/\";\r\n                                                        if (URLUtil.isValidUrl(url_field)) {\r\n                                                            key = text.getText().toString().trim();\r\n                                                            licenseUrl = url.getText().toString().trim();\r\n\r\n                                                            sessionManager.setMindMapServerUrl(licenseUrl);\r\n\r\n                                                            if (keyVerified(key)) {\r\n                                                                getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\",key);\r\n                                                                alertDialog.dismiss();\r\n                                                            }\r\n                                                        } else {\r\n                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        //invalid url || invalid url and key.\r\n                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();\r\n                                                    }\r\n                                                } else {\r\n                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        negativeButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                alertDialog.dismiss();\r\n                                            }\r\n                                        });\r\n\r\n                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                }}else {\r\n                    Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n         /*   case R.id.sync:\r\n//                pullDataDAO.pullData(this);\r\n//                pullDataDAO.pushDataApi();\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, this);\r\n                boolean isSynced = syncUtils.syncForeground();\r\n//                boolean i = imagesPushDAO.patientProfileImagesPush();\r\n//                boolean o = imagesPushDAO.obsImagesPush();\r\n//                if (isSynced)\r\n//                    AppConstants.notificationUtils.showNotifications_noProgress(getString(R.string.sync_not_available), getString(R.string.please_connect_to_internet), getApplicationContext());\r\n//                else\r\n//                    AppConstants.notificationUtils.showNotifications(getString(R.string.image_upload), getString(R.string.image_upload_failed), 4, this);\r\n                return true;\r\n                */\r\n//            case R.id.backupOption:\r\n//                manageBackup(true, false);  // to backup app data at any time of the day\r\n//                return true;\r\n//\r\n//            case R.id.restoreOption:\r\n//                manageBackup(false, false); // to restore app data if db is empty\r\n//                return true;\r\n\r\n            case R.id.logoutOption:\r\n//                manageBackup(true, false);\r\n\r\n                MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n                alertdialogBuilder.setMessage(R.string.sure_to_logout);\r\n                alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        logout();\r\n                    }\r\n                });\r\n                alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n                AlertDialog alertDialog = alertdialogBuilder.create();\r\n                alertDialog.show();\r\n                Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n                Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method starts intent to another activity to change settings\r\n     *\r\n     * @return void\r\n     */\r\n    public void settings() {\r\n        Intent intent = new Intent(this, SettingsActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Logs out the user. It removes user account using AccountManager.\r\n     *\r\n     * @return void\r\n     */\r\n    public void logout() {\r\n\r\n        OfflineLogin.getOfflineLogin().setOfflineLoginStatus(false);\r\n\r\n//        parseLogOut();\r\n\r\n       /* AccountManager manager = AccountManager.get(HomeActivity.this);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.GET_ACCOUNTS) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }*/\r\n     /*   Account[] accountList = manager.getAccountsByType(\"io.intelehealth.openmrs\");\r\n        if (accountList.length > 0) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                manager.removeAccount(accountList[0], HomeActivity.this, null, null);\r\n            } else {\r\n                manager.removeAccount(accountList[0], null, null); // Legacy implementation\r\n            }\r\n        }\r\n*/\r\n        Intent intent = new Intent(HomeActivity.this, LoginActivity.class);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n\r\n        SyncUtils syncUtils = new SyncUtils();\r\n        syncUtils.syncBackground();\r\n        sessionManager.setReturningUser(false);\r\n        sessionManager.setLogout(true);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        //IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        //registerReceiver(syncBroadcastReceiver, filter);\r\n        checkAppVer();  //auto-update feature.\r\n//        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n                && Locale.getDefault().toString().equals(\"en\")) {\r\n//            lastSyncAgo.setText(CalculateAgoTime());\r\n        }\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        registerReceiver(syncBroadcastReceiver, filter);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        try {\r\n            unregisterReceiver(syncBroadcastReceiver);\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private boolean keyVerified(String key) {\r\n        //TODO: Verify License Key\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        /*new AlertDialog.Builder(this)\r\n                .setMessage(\"Are you sure you want to EXIT ?\")\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        moveTaskToBack(true);\r\n                        finish();\r\n\r\n                    }\r\n\r\n                })\r\n                .setNegativeButton(\"No\", null)\r\n                .show();\r\n*/\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n\r\n        // AlertDialog.Builder alertdialogBuilder = new AlertDialog.Builder(this, R.style.AlertDialogStyle);\r\n        alertdialogBuilder.setMessage(R.string.sure_to_exit);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                moveTaskToBack(true);\r\n                // finish();\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n    }\r\n\r\n    private List<Integer> mTempSyncHelperList = new ArrayList<Integer>();\r\n    private BroadcastReceiver syncBroadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Logger.logD(\"syncBroadcastReceiver\", \"onReceive! \" + intent);\r\n\r\n            if (intent != null && intent.hasExtra(AppConstants.SYNC_INTENT_DATA_KEY)) {\r\n                int flagType = intent.getIntExtra(AppConstants.SYNC_INTENT_DATA_KEY, AppConstants.SYNC_FAILED);\r\n                if (sessionManager.isFirstTimeLaunched()) {\r\n                    if (flagType == AppConstants.SYNC_FAILED) {\r\n                        hideSyncProgressBar(false);\r\n                        /*Toast.makeText(context, R.string.failed_synced, Toast.LENGTH_SHORT).show();\r\n                        finish();*/\r\n                        new AlertDialog.Builder(HomeActivity.this)\r\n                                .setMessage(R.string.failed_initial_synced)\r\n                                .setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialog, int which) {\r\n                                        finish();\r\n                                    }\r\n\r\n                                }).setCancelable(false)\r\n\r\n                                .show();\r\n                    } else {\r\n                        mTempSyncHelperList.add(flagType);\r\n                        if (mTempSyncHelperList.contains(AppConstants.SYNC_PULL_DATA_DONE)\r\n//                                && mTempSyncHelperList.contains(AppConstants.SYNC_PUSH_DATA_DONE)\r\n                                /*&& mTempSyncHelperList.contains(AppConstants.SYNC_PATIENT_PROFILE_IMAGE_PUSH_DONE)\r\n                                && mTempSyncHelperList.contains(AppConstants.SYNC_OBS_IMAGE_PUSH_DONE)*/) {\r\n                            hideSyncProgressBar(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        }\r\n    };\r\n\r\n    private void hideSyncProgressBar(boolean isSuccess) {\r\n        if (mTempSyncHelperList != null) mTempSyncHelperList.clear();\r\n        if (mSyncProgressDialog != null && mSyncProgressDialog.isShowing()) {\r\n            mSyncProgressDialog.dismiss();\r\n            if (isSuccess) {\r\n\r\n                sessionManager.setFirstTimeLaunched(false);\r\n                sessionManager.setMigration(true);\r\n                // initial setup/sync done and now we can set the periodic background sync job\r\n                // given some delay after initial sync\r\n                new Handler().postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n                    }\r\n                }, 10000);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getMindmapDownloadURL(String url, String key) {\r\n        customProgressDialog.show();\r\n        ApiClient.changeApiBaseUrl(url); //trim\r\n        ApiInterface apiService = ApiClient.createService(ApiInterface.class);\r\n        try {\r\n            Observable<DownloadMindMapRes> resultsObservable = apiService.DOWNLOAD_MIND_MAP_RES_OBSERVABLE(key);\r\n            resultsObservable\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(new DisposableObserver<DownloadMindMapRes>() {\r\n                        @Override\r\n                        public void onNext(DownloadMindMapRes res) {\r\n                            customProgressDialog.dismiss();\r\n                            if (res.getMessage() != null && res.getMessage().equalsIgnoreCase(\"Success\")) {\r\n\r\n                                Log.e(\"MindMapURL\", \"Successfully get MindMap URL\");\r\n                                mTask = new DownloadMindMaps(context, mProgressDialog);\r\n                                mindmapURL = res.getMindmap().trim();\r\n                                sessionManager.setLicenseKey(key);\r\n                                checkExistingMindMaps();\r\n\r\n                            } else {\r\n                                Toast.makeText(context, getResources().getString(R.string.no_protocols_found), Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onError(Throwable e) {\r\n                            customProgressDialog.dismiss();\r\n                            Toast.makeText(context, getResources().getString(R.string.unable_to_get_proper_response), Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onComplete() {\r\n\r\n                        }\r\n                    });\r\n        } catch (IllegalArgumentException e) {\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getMessage());\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getStackTrace());\r\n        }\r\n    }\r\n\r\n    private void checkExistingMindMaps() {\r\n\r\n        //Check is there any existing mindmaps are present, if yes then delete.\r\n\r\n        File engines = new File(context.getFilesDir().getAbsolutePath(), \"/Engines\");\r\n        Log.e(TAG, \"Engines folder=\" + engines.exists());\r\n        if (engines.exists()) {\r\n            engines.delete();\r\n        }\r\n        File logo = new File(context.getFilesDir().getAbsolutePath(), \"/logo\");\r\n        Log.e(TAG, \"Logo folder=\" + logo.exists());\r\n        if (logo.exists()) {\r\n            logo.delete();\r\n        }\r\n        File physicalExam = new File(context.getFilesDir().getAbsolutePath() + \"/physExam.json\");\r\n        Log.e(TAG, \"physExam.json=\" + physicalExam.exists());\r\n        if (physicalExam.exists()) {\r\n            physicalExam.delete();\r\n        }\r\n        File familyHistory = new File(context.getFilesDir().getAbsolutePath() + \"/famHist.json\");\r\n        Log.e(TAG, \"famHist.json=\" + familyHistory.exists());\r\n        if (familyHistory.exists()) {\r\n            familyHistory.delete();\r\n        }\r\n        File pastMedicalHistory = new File(context.getFilesDir().getAbsolutePath() + \"/patHist.json\");\r\n        Log.e(TAG, \"patHist.json=\" + pastMedicalHistory.exists());\r\n        if (pastMedicalHistory.exists()) {\r\n            pastMedicalHistory.delete();\r\n        }\r\n        File config = new File(context.getFilesDir().getAbsolutePath() + \"/config.json\");\r\n        Log.e(TAG, \"config.json=\" + config.exists());\r\n        if (config.exists()) {\r\n            config.delete();\r\n        }\r\n\r\n        //Start downloading mindmaps\r\n        mTask.execute(mindmapURL, context.getFilesDir().getAbsolutePath() + \"/mindmaps.zip\");\r\n        Log.e(\"DOWNLOAD\", \"isSTARTED\");\r\n\r\n    }\r\n\r\n    private void checkAppVer() {\r\n\r\n        try {\r\n            PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            String version = pInfo.versionName;\r\n            versionCode = pInfo.versionCode;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        disposable.add((Disposable) AppConstants.apiInterface.checkAppUpdate()\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribeWith(new DisposableSingleObserver<CheckAppUpdateRes>() {\r\n                    @Override\r\n                    public void onSuccess(CheckAppUpdateRes res) {\r\n                        int latestVersionCode = 0;\r\n                        if (!res.getLatestVersionCode().isEmpty()) {\r\n                            latestVersionCode = Integer.parseInt(res.getLatestVersionCode());\r\n                        }\r\n\r\n                        if (latestVersionCode > versionCode) {\r\n                            android.app.AlertDialog.Builder builder;\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this, android.R.style.Theme_Material_Dialog_Alert);\r\n                            } else {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this);\r\n                            }\r\n\r\n\r\n                            builder.setTitle(getResources().getString(R.string.new_update_available))\r\n                                    .setCancelable(false)\r\n                                    .setMessage(getResources().getString(R.string.update_app_note))\r\n                                    .setPositiveButton(getResources().getString(R.string.update), new DialogInterface.OnClickListener() {\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n\r\n                                            final String appPackageName = getPackageName(); // getPackageName() from Context or Activity object\r\n                                            try {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + appPackageName)));\r\n                                            } catch (ActivityNotFoundException anfe) {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=\" + appPackageName)));\r\n                                            }\r\n\r\n                                        }\r\n                                    })\r\n\r\n                                    .setIcon(android.R.drawable.ic_dialog_alert)\r\n                                    .setCancelable(false);\r\n\r\n                            Dialog dialog = builder.show();\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                int textViewId = dialog.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null);\r\n                                TextView tv = (TextView) dialog.findViewById(textViewId);\r\n                                tv.setTextColor(getResources().getColor(R.color.white));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        Log.e(\"Error\", \"\" + e);\r\n                    }\r\n                })\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(revision 3dfc6cc3ab4d038979a3b922a72c02dc02e76966)
-++++ app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(date 1621420665837)
-+@@ -395,61 +395,61 @@
-+ 
-+                 if (NetworkConnection.isOnline(this)) {
-+ 
-+-                    if (!sessionManager.getLicenseKey().isEmpty()) {
-++                    /*if (!sessionManager.getLicenseKey().isEmpty()) {
-+ 
-+                         String licenseUrl = sessionManager.getMindMapServerUrl();
-+                         String licenseKey = sessionManager.getLicenseKey();
-+                         getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+ 
-+-                    } else {
-+-//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-+-//                    LayoutInflater li = LayoutInflater.from(this);
-+-//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-//                    dialog.setTitle(getString(R.string.enter_license_key))
-+-//                            .setView(promptsView)
-+-//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//
-+-//                                    Dialog d = (Dialog) dialog;
-+-//
-+-//                                    EditText etURL = d.findViewById(R.id.licenseurl);
-+-//                                    EditText etKey = d.findViewById(R.id.licensekey);
-+-//                                    String url = etURL.getText().toString().replace(" ", "");
-+-//                                    String key = etKey.getText().toString().trim();
-+-//
-+-//                                    if (url.isEmpty()) {
-+-//                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (url.contains(":")) {
-+-//                                        etURL.setError(getResources().getString(R.string.invalid_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (key.isEmpty()) {
-+-//                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-+-//                                        etKey.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//
-+-//                                    sessionManager.setMindMapServerUrl(url); //trim
-+-//                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-+-//
-+-//                                }
-+-//                            })
-+-//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//                                    dialog.dismiss();
-+-//                                }
-+-//                            });
-+-//                    Dialog builderDialog = dialog.show();
-+-//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+-//
-+-//                    // }
-++                    }else {*/
-++                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-++                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-++                    LayoutInflater li = LayoutInflater.from(this);
-++                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-++                    dialog.setTitle(getString(R.string.enter_license_key))
-++                            .setView(promptsView)
-++                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++
-++                                    Dialog d = (Dialog) dialog;
-++
-++                                    EditText etURL = d.findViewById(R.id.licenseurl);
-++                                    EditText etKey = d.findViewById(R.id.licensekey);
-++                                    String url = etURL.getText().toString().replace(" ", "");
-++                                    String key = etKey.getText().toString().trim();
-++
-++                                    if (url.isEmpty()) {
-++                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (url.contains(":")) {
-++                                        etURL.setError(getResources().getString(R.string.invalid_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (key.isEmpty()) {
-++                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-++                                        etKey.requestFocus();
-++                                        return;
-++                                    }
-++
-++                                    sessionManager.setMindMapServerUrl(url); //trim
-++                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-++
-++                                }
-++                            })
-++                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++                                    dialog.dismiss();
-++                                }
-++                            });
-++                    Dialog builderDialog = dialog.show();
-++                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-++
-++                    // }
-+                         MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+                         LayoutInflater li = LayoutInflater.from(this);
-+                         View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+@@ -547,7 +547,7 @@
-+ 
-+                         IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
-+ 
-+-                }}else {
-++                } else {
-+                     Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();
-+                 }
-+ 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52__Default_Changelist_.xml	(date 1621420939940)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52__Default_Changelist_.xml	(date 1621420939940)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_19-05-2021_15_52_[Default_Changelist]" date="1621419772473" recycled="false" toDelete="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19-05-2021 15:52 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55__Default_Changelist_.xml	(date 1621420939973)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55__Default_Changelist_.xml	(date 1621420939973)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]" date="1621419916930" recycled="false" toDelete="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19-05-2021 15:55 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02_[Default_Changelist]/shelved.patch	(date 1621420899667)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02_[Default_Changelist]/shelved.patch	(date 1621420899667)
-@@ -0,0 +1,231 @@
-+Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package org.intelehealth.ekalhelpline.activities.homeActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.WorkManager;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.ParsePosition;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.activities.activePatientsActivity.ActivePatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.loginActivity.LoginActivity;\r\nimport org.intelehealth.ekalhelpline.activities.searchPatientActivity.SearchPatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.settingsActivity.SettingsActivity;\r\nimport org.intelehealth.ekalhelpline.activities.todayPatientActivity.TodayPatientActivity;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.app.IntelehealthApplication;\r\nimport org.intelehealth.ekalhelpline.models.CheckAppUpdateRes;\r\nimport org.intelehealth.ekalhelpline.models.DownloadMindMapRes;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiClient;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiInterface;\r\nimport org.intelehealth.ekalhelpline.syncModule.SyncUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.DownloadMindMaps;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.Logger;\r\nimport org.intelehealth.ekalhelpline.utilities.NetworkConnection;\r\nimport org.intelehealth.ekalhelpline.utilities.OfflineLogin;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\nimport org.intelehealth.ekalhelpline.widget.materialprogressbar.CustomProgressDialog;\r\nimport io.reactivex.Observable;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.observers.DisposableObserver;\r\nimport io.reactivex.observers.DisposableSingleObserver;\r\nimport io.reactivex.schedulers.Schedulers;\r\n\r\n/**\r\n * Home Screen\r\n */\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = HomeActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private ProgressDialog mSyncProgressDialog;\r\n    CountDownTimer CDT;\r\n    private boolean hasLicense = false;\r\n    int i = 5;\r\n\r\n    TextView lastSyncTextView;\r\n    TextView lastSyncAgo;\r\n    Button manualSyncButton;\r\n    //IntentFilter filter;\r\n\r\n    SyncUtils syncUtils = new SyncUtils();\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n    private String key = null;\r\n    private String licenseUrl = null;\r\n\r\n    Context context;\r\n    CustomProgressDialog customProgressDialog;\r\n    private String mindmapURL = \"\";\r\n    private DownloadMindMaps mTask;\r\n    ProgressDialog mProgressDialog;\r\n\r\n    private int versionCode = 0;\r\n    private CompositeDisposable disposable = new CompositeDisposable();\r\n    TextView newPatient_textview, findPatients_textview, todaysVisits_textview,\r\n            activeVisits_textview, videoLibrary_textview, help_textview;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        sessionManager = new SessionManager(this);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n\r\n        String language = sessionManager.getAppLanguage();\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n\r\n        setTitle(R.string.title_activity_login);\r\n        context = HomeActivity.this;\r\n        customProgressDialog = new CustomProgressDialog(context);\r\n        /*syncBroadcastReceiver = new SyncBroadcastReceiver();\r\n        filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);*/\r\n\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        checkAppVer();  //auto-update feature.\r\n\r\n        Logger.logD(TAG, \"onCreate: \" + getFilesDir().toString());\r\n        lastSyncTextView = findViewById(R.id.lastsynctextview);\r\n        lastSyncAgo = findViewById(R.id.lastsyncago);\r\n        manualSyncButton = findViewById(R.id.manualsyncbutton);\r\n//        manualSyncButton.setPaintFlags(Paint.UNDERLINE_TEXT_FLAG);\r\n       // c1 = findViewById(R.id.cardview_newpat);\r\n        c2 = findViewById(R.id.cardview_find_patient);\r\n        c3 = findViewById(R.id.cardview_today_patient);\r\n        c4 = findViewById(R.id.cardview_active_patients);\r\n        c5 = findViewById(R.id.cardview_video_libraby);\r\n        c6 = findViewById(R.id.cardview_help_whatsapp);\r\n\r\n        //card textview referrenced to fix bug of localization not working in some cases...\r\n     /*   newPatient_textview = findViewById(R.id.newPatient_textview);\r\n        newPatient_textview.setText(R.string.new_patient);*/\r\n\r\n        findPatients_textview = findViewById(R.id.findPatients_textview);\r\n        findPatients_textview.setText(R.string.find_patient);\r\n\r\n        todaysVisits_textview = findViewById(R.id.todaysVisits_textview);\r\n        todaysVisits_textview.setText(R.string.today_visits);\r\n\r\n        activeVisits_textview = findViewById(R.id.activeVisits_textview);\r\n        activeVisits_textview.setText(R.string.active_visits);\r\n\r\n        videoLibrary_textview = findViewById(R.id.videoLibrary_textview);\r\n        videoLibrary_textview.setText(R.string.video_library);\r\n\r\n        help_textview = findViewById(R.id.help_textview);\r\n        help_textview.setText(R.string.Whatsapp_Help_Cardview);\r\n\r\n        // manualSyncButton.setText(R.string.sync_now);\r\n        manualSyncButton.setText(R.string.refresh);\r\n\r\n        //Help section of watsapp...\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String phoneNumberWithCountryCode = \"+917005308163\";\r\n                String message =\r\n                        getString(R.string.hello_my_name_is) + \" \" + sessionManager.getChwname() + \" \" +\r\n                                /*\" from \" + sessionManager.getState() + */getString(R.string.i_need_assistance);\r\n\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\r\n                                String.format(\"https://api.whatsapp.com/send?phone=%s&text=%s\",\r\n                                        phoneNumberWithCountryCode, message))));\r\n            }\r\n        });\r\n/*\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Loads the config file values and check for the boolean value of privacy key.\r\n                ConfigUtils configUtils = new ConfigUtils(HomeActivity.this);\r\n                if (configUtils.privacy_notice()) {\r\n                    Intent intent = new Intent(HomeActivity.this, PrivacyNotice_Activity.class);\r\n                    startActivity(intent);\r\n                } else {\r\n                    //Clear HouseHold UUID from Session for new registration\r\n                    sessionManager.setHouseholdUuid(\"\");\r\n\r\n                    Intent intent = new Intent(HomeActivity.this, IdentificationActivity.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n*/\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, SearchPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, TodayPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, ActivePatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                videoLibrary();\r\n            }\r\n        });\r\n\r\n\r\n        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n\r\n//        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n////            lastSyncAgo.setText(CalculateAgoTime());\r\n//        }\r\n\r\n        manualSyncButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, context);\r\n\r\n                if (isNetworkConnected()) {\r\n                    Toast.makeText(context, getString(R.string.syncInProgress), Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Toast.makeText(context, context.getString(R.string.failed_synced), Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                syncUtils.syncForeground(\"home\");\r\n//                if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                        && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n//                    lastSyncAgo.setText(sessionManager.getLastTimeAgo());\r\n//                }\r\n            }\r\n        });\r\n        if (sessionManager.isFirstTimeLaunched()) {\r\n            mSyncProgressDialog = new ProgressDialog(HomeActivity.this, R.style.AlertDialogStyle); //thats how to add a style!\r\n            mSyncProgressDialog.setTitle(R.string.syncInProgress);\r\n            mSyncProgressDialog.setCancelable(false);\r\n            mSyncProgressDialog.setProgress(i);\r\n\r\n            mSyncProgressDialog.show();\r\n\r\n            syncUtils.initialSync(\"home\");\r\n        } else {\r\n            // if initial setup done then we can directly set the periodic background sync job\r\n            WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n        }\r\n\r\n\r\n        showProgressbar();\r\n    }\r\n\r\n    //function for handling the video library feature...\r\n    private void videoLibrary() {\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            if (obj.has(\"video_library\")) {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                Uri uri = Uri.parse(obj.getString(\"video_library\"));\r\n                intent.setData(uri);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(context, \"No config attribute found\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void showProgressbar() {\r\n\r\n\r\n// instantiate it within the onCreate method\r\n        mProgressDialog = new ProgressDialog(HomeActivity.this);\r\n        mProgressDialog.setMessage(getString(R.string.download_protocols));\r\n        mProgressDialog.setIndeterminate(true);\r\n        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n        mProgressDialog.setCancelable(false);\r\n    }\r\n\r\n\r\n    private String CalculateAgoTime() {\r\n        String finalTime = \"\";\r\n\r\n        String syncTime = sessionManager.getLastSyncDateTime();\r\n\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMM yyyy HH:mm\", Locale.getDefault());\r\n        ParsePosition pos = new ParsePosition(0);\r\n        long then = formatter.parse(syncTime, pos).getTime();\r\n        long now = new Date().getTime();\r\n\r\n        long seconds = (now - then) / 1000;\r\n        long minutes = seconds / 60;\r\n        long hours = minutes / 60;\r\n        long days = hours / 24;\r\n\r\n        String time = \"\";\r\n        long num = 0;\r\n        if (days > 0) {\r\n            num = days;\r\n            time = days + \" \" + context.getString(R.string.day);\r\n        } else if (hours > 0) {\r\n            num = hours;\r\n            time = hours + \" \" + context.getString(R.string.hour);\r\n        } else if (minutes >= 0) {\r\n            num = minutes;\r\n            time = minutes + \" \" + context.getString(R.string.minute);\r\n        }\r\n//      <For Seconds>\r\n//      else {\r\n//            num = seconds;\r\n//            time = seconds + \" second\";\r\n//      }\r\n        if (num > 1) {\r\n            time += context.getString(R.string.s);\r\n        }\r\n        finalTime = time + \" \" + context.getString(R.string.ago);\r\n\r\n        sessionManager.setLastTimeAgo(finalTime);\r\n\r\n        return finalTime;\r\n    }\r\n\r\n    private boolean isNetworkConnected() {\r\n        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n\r\n        return cm.getActiveNetworkInfo() != null && cm.getActiveNetworkInfo().isConnected();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_home, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n//            case R.id.syncOption:\r\n//                refreshDatabases();\r\n//                return true;\r\n            case R.id.settingsOption:\r\n                settings();\r\n                return true;\r\n            case R.id.updateProtocolsOption: {\r\n\r\n\r\n                if (NetworkConnection.isOnline(this)) {\r\n\r\n                    if (!sessionManager.getLicenseKey().isEmpty()) {\r\n\r\n                        String licenseUrl = sessionManager.getMindMapServerUrl();\r\n                        String licenseKey = sessionManager.getLicenseKey();\r\n                        getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\", licenseKey);\r\n\r\n                    } else {\r\n//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);\r\n//                    LayoutInflater li = LayoutInflater.from(this);\r\n//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n//                    dialog.setTitle(getString(R.string.enter_license_key))\r\n//                            .setView(promptsView)\r\n//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//\r\n//                                    Dialog d = (Dialog) dialog;\r\n//\r\n//                                    EditText etURL = d.findViewById(R.id.licenseurl);\r\n//                                    EditText etKey = d.findViewById(R.id.licensekey);\r\n//                                    String url = etURL.getText().toString().replace(\" \", \"\");\r\n//                                    String key = etKey.getText().toString().trim();\r\n//\r\n//                                    if (url.isEmpty()) {\r\n//                                        etURL.setError(getResources().getString(R.string.enter_server_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (url.contains(\":\")) {\r\n//                                        etURL.setError(getResources().getString(R.string.invalid_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (key.isEmpty()) {\r\n//                                        etKey.setError(getResources().getString(R.string.enter_license_key));\r\n//                                        etKey.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//\r\n//                                    sessionManager.setMindMapServerUrl(url); //trim\r\n//                                    getMindmapDownloadURL(\"https://\" + url + \":3004/\", key);\r\n//\r\n//                                }\r\n//                            })\r\n//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//                                    dialog.dismiss();\r\n//                                }\r\n//                            });\r\n//                    Dialog builderDialog = dialog.show();\r\n//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);\r\n//\r\n//                    // }\r\n                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n                        LayoutInflater li = LayoutInflater.from(this);\r\n                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n\r\n                                        dialog.setTitle(getString(R.string.enter_license_key))\r\n                                                .setView(promptsView)\r\n                                                .setPositiveButton(getString(R.string.button_ok), null)\r\n                                                .setNegativeButton(getString(R.string.button_cancel), null);\r\n\r\n                                        AlertDialog alertDialog = dialog.create();\r\n                                        alertDialog.setView(promptsView, 20, 0, 20, 0);\r\n                                        alertDialog.show();\r\n                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...\r\n\r\n                                        // Get the alert dialog buttons reference\r\n                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);\r\n\r\n                                        // Change the alert dialog buttons text and background color\r\n                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n                                        positiveButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                EditText text = promptsView.findViewById(R.id.licensekey);\r\n                                                EditText url = promptsView.findViewById(R.id.licenseurl);\r\n\r\n                                                url.setError(null);\r\n                                                text.setError(null);\r\n\r\n                                                //If both are not entered...\r\n                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is empty...key is not empty...\r\n                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is not empty...key is empty...\r\n                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    text.requestFocus();\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url has : in it...\r\n                                                if (url.getText().toString().trim().contains(\":\")) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.invalid_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If url entered is Invalid...\r\n                                                if (!url.getText().toString().trim().isEmpty()) {\r\n                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {\r\n                                                        String url_field = \"https://\" + url.getText().toString() + \":3004/\";\r\n                                                        if (URLUtil.isValidUrl(url_field)) {\r\n                                                            key = text.getText().toString().trim();\r\n                                                            licenseUrl = url.getText().toString().trim();\r\n\r\n                                                            sessionManager.setMindMapServerUrl(licenseUrl);\r\n\r\n                                                            if (keyVerified(key)) {\r\n                                                                getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\",key);\r\n                                                                alertDialog.dismiss();\r\n                                                            }\r\n                                                        } else {\r\n                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        //invalid url || invalid url and key.\r\n                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();\r\n                                                    }\r\n                                                } else {\r\n                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        negativeButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                alertDialog.dismiss();\r\n                                            }\r\n                                        });\r\n\r\n                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                }}else {\r\n                    Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n         /*   case R.id.sync:\r\n//                pullDataDAO.pullData(this);\r\n//                pullDataDAO.pushDataApi();\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, this);\r\n                boolean isSynced = syncUtils.syncForeground();\r\n//                boolean i = imagesPushDAO.patientProfileImagesPush();\r\n//                boolean o = imagesPushDAO.obsImagesPush();\r\n//                if (isSynced)\r\n//                    AppConstants.notificationUtils.showNotifications_noProgress(getString(R.string.sync_not_available), getString(R.string.please_connect_to_internet), getApplicationContext());\r\n//                else\r\n//                    AppConstants.notificationUtils.showNotifications(getString(R.string.image_upload), getString(R.string.image_upload_failed), 4, this);\r\n                return true;\r\n                */\r\n//            case R.id.backupOption:\r\n//                manageBackup(true, false);  // to backup app data at any time of the day\r\n//                return true;\r\n//\r\n//            case R.id.restoreOption:\r\n//                manageBackup(false, false); // to restore app data if db is empty\r\n//                return true;\r\n\r\n            case R.id.logoutOption:\r\n//                manageBackup(true, false);\r\n\r\n                MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n                alertdialogBuilder.setMessage(R.string.sure_to_logout);\r\n                alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        logout();\r\n                    }\r\n                });\r\n                alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n                AlertDialog alertDialog = alertdialogBuilder.create();\r\n                alertDialog.show();\r\n                Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n                Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method starts intent to another activity to change settings\r\n     *\r\n     * @return void\r\n     */\r\n    public void settings() {\r\n        Intent intent = new Intent(this, SettingsActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Logs out the user. It removes user account using AccountManager.\r\n     *\r\n     * @return void\r\n     */\r\n    public void logout() {\r\n\r\n        OfflineLogin.getOfflineLogin().setOfflineLoginStatus(false);\r\n\r\n//        parseLogOut();\r\n\r\n       /* AccountManager manager = AccountManager.get(HomeActivity.this);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.GET_ACCOUNTS) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }*/\r\n     /*   Account[] accountList = manager.getAccountsByType(\"io.intelehealth.openmrs\");\r\n        if (accountList.length > 0) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                manager.removeAccount(accountList[0], HomeActivity.this, null, null);\r\n            } else {\r\n                manager.removeAccount(accountList[0], null, null); // Legacy implementation\r\n            }\r\n        }\r\n*/\r\n        Intent intent = new Intent(HomeActivity.this, LoginActivity.class);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n\r\n        SyncUtils syncUtils = new SyncUtils();\r\n        syncUtils.syncBackground();\r\n        sessionManager.setReturningUser(false);\r\n        sessionManager.setLogout(true);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        //IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        //registerReceiver(syncBroadcastReceiver, filter);\r\n        checkAppVer();  //auto-update feature.\r\n//        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n                && Locale.getDefault().toString().equals(\"en\")) {\r\n//            lastSyncAgo.setText(CalculateAgoTime());\r\n        }\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        registerReceiver(syncBroadcastReceiver, filter);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        try {\r\n            unregisterReceiver(syncBroadcastReceiver);\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private boolean keyVerified(String key) {\r\n        //TODO: Verify License Key\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        /*new AlertDialog.Builder(this)\r\n                .setMessage(\"Are you sure you want to EXIT ?\")\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        moveTaskToBack(true);\r\n                        finish();\r\n\r\n                    }\r\n\r\n                })\r\n                .setNegativeButton(\"No\", null)\r\n                .show();\r\n*/\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n\r\n        // AlertDialog.Builder alertdialogBuilder = new AlertDialog.Builder(this, R.style.AlertDialogStyle);\r\n        alertdialogBuilder.setMessage(R.string.sure_to_exit);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                moveTaskToBack(true);\r\n                // finish();\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n    }\r\n\r\n    private List<Integer> mTempSyncHelperList = new ArrayList<Integer>();\r\n    private BroadcastReceiver syncBroadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Logger.logD(\"syncBroadcastReceiver\", \"onReceive! \" + intent);\r\n\r\n            if (intent != null && intent.hasExtra(AppConstants.SYNC_INTENT_DATA_KEY)) {\r\n                int flagType = intent.getIntExtra(AppConstants.SYNC_INTENT_DATA_KEY, AppConstants.SYNC_FAILED);\r\n                if (sessionManager.isFirstTimeLaunched()) {\r\n                    if (flagType == AppConstants.SYNC_FAILED) {\r\n                        hideSyncProgressBar(false);\r\n                        /*Toast.makeText(context, R.string.failed_synced, Toast.LENGTH_SHORT).show();\r\n                        finish();*/\r\n                        new AlertDialog.Builder(HomeActivity.this)\r\n                                .setMessage(R.string.failed_initial_synced)\r\n                                .setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialog, int which) {\r\n                                        finish();\r\n                                    }\r\n\r\n                                }).setCancelable(false)\r\n\r\n                                .show();\r\n                    } else {\r\n                        mTempSyncHelperList.add(flagType);\r\n                        if (mTempSyncHelperList.contains(AppConstants.SYNC_PULL_DATA_DONE)\r\n//                                && mTempSyncHelperList.contains(AppConstants.SYNC_PUSH_DATA_DONE)\r\n                                /*&& mTempSyncHelperList.contains(AppConstants.SYNC_PATIENT_PROFILE_IMAGE_PUSH_DONE)\r\n                                && mTempSyncHelperList.contains(AppConstants.SYNC_OBS_IMAGE_PUSH_DONE)*/) {\r\n                            hideSyncProgressBar(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        }\r\n    };\r\n\r\n    private void hideSyncProgressBar(boolean isSuccess) {\r\n        if (mTempSyncHelperList != null) mTempSyncHelperList.clear();\r\n        if (mSyncProgressDialog != null && mSyncProgressDialog.isShowing()) {\r\n            mSyncProgressDialog.dismiss();\r\n            if (isSuccess) {\r\n\r\n                sessionManager.setFirstTimeLaunched(false);\r\n                sessionManager.setMigration(true);\r\n                // initial setup/sync done and now we can set the periodic background sync job\r\n                // given some delay after initial sync\r\n                new Handler().postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n                    }\r\n                }, 10000);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getMindmapDownloadURL(String url, String key) {\r\n        customProgressDialog.show();\r\n        ApiClient.changeApiBaseUrl(url); //trim\r\n        ApiInterface apiService = ApiClient.createService(ApiInterface.class);\r\n        try {\r\n            Observable<DownloadMindMapRes> resultsObservable = apiService.DOWNLOAD_MIND_MAP_RES_OBSERVABLE(key);\r\n            resultsObservable\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(new DisposableObserver<DownloadMindMapRes>() {\r\n                        @Override\r\n                        public void onNext(DownloadMindMapRes res) {\r\n                            customProgressDialog.dismiss();\r\n                            if (res.getMessage() != null && res.getMessage().equalsIgnoreCase(\"Success\")) {\r\n\r\n                                Log.e(\"MindMapURL\", \"Successfully get MindMap URL\");\r\n                                mTask = new DownloadMindMaps(context, mProgressDialog);\r\n                                mindmapURL = res.getMindmap().trim();\r\n                                sessionManager.setLicenseKey(key);\r\n                                checkExistingMindMaps();\r\n\r\n                            } else {\r\n                                Toast.makeText(context, getResources().getString(R.string.no_protocols_found), Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onError(Throwable e) {\r\n                            customProgressDialog.dismiss();\r\n                            Toast.makeText(context, getResources().getString(R.string.unable_to_get_proper_response), Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onComplete() {\r\n\r\n                        }\r\n                    });\r\n        } catch (IllegalArgumentException e) {\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getMessage());\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getStackTrace());\r\n        }\r\n    }\r\n\r\n    private void checkExistingMindMaps() {\r\n\r\n        //Check is there any existing mindmaps are present, if yes then delete.\r\n\r\n        File engines = new File(context.getFilesDir().getAbsolutePath(), \"/Engines\");\r\n        Log.e(TAG, \"Engines folder=\" + engines.exists());\r\n        if (engines.exists()) {\r\n            engines.delete();\r\n        }\r\n        File logo = new File(context.getFilesDir().getAbsolutePath(), \"/logo\");\r\n        Log.e(TAG, \"Logo folder=\" + logo.exists());\r\n        if (logo.exists()) {\r\n            logo.delete();\r\n        }\r\n        File physicalExam = new File(context.getFilesDir().getAbsolutePath() + \"/physExam.json\");\r\n        Log.e(TAG, \"physExam.json=\" + physicalExam.exists());\r\n        if (physicalExam.exists()) {\r\n            physicalExam.delete();\r\n        }\r\n        File familyHistory = new File(context.getFilesDir().getAbsolutePath() + \"/famHist.json\");\r\n        Log.e(TAG, \"famHist.json=\" + familyHistory.exists());\r\n        if (familyHistory.exists()) {\r\n            familyHistory.delete();\r\n        }\r\n        File pastMedicalHistory = new File(context.getFilesDir().getAbsolutePath() + \"/patHist.json\");\r\n        Log.e(TAG, \"patHist.json=\" + pastMedicalHistory.exists());\r\n        if (pastMedicalHistory.exists()) {\r\n            pastMedicalHistory.delete();\r\n        }\r\n        File config = new File(context.getFilesDir().getAbsolutePath() + \"/config.json\");\r\n        Log.e(TAG, \"config.json=\" + config.exists());\r\n        if (config.exists()) {\r\n            config.delete();\r\n        }\r\n\r\n        //Start downloading mindmaps\r\n        mTask.execute(mindmapURL, context.getFilesDir().getAbsolutePath() + \"/mindmaps.zip\");\r\n        Log.e(\"DOWNLOAD\", \"isSTARTED\");\r\n\r\n    }\r\n\r\n    private void checkAppVer() {\r\n\r\n        try {\r\n            PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            String version = pInfo.versionName;\r\n            versionCode = pInfo.versionCode;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        disposable.add((Disposable) AppConstants.apiInterface.checkAppUpdate()\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribeWith(new DisposableSingleObserver<CheckAppUpdateRes>() {\r\n                    @Override\r\n                    public void onSuccess(CheckAppUpdateRes res) {\r\n                        int latestVersionCode = 0;\r\n                        if (!res.getLatestVersionCode().isEmpty()) {\r\n                            latestVersionCode = Integer.parseInt(res.getLatestVersionCode());\r\n                        }\r\n\r\n                        if (latestVersionCode > versionCode) {\r\n                            android.app.AlertDialog.Builder builder;\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this, android.R.style.Theme_Material_Dialog_Alert);\r\n                            } else {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this);\r\n                            }\r\n\r\n\r\n                            builder.setTitle(getResources().getString(R.string.new_update_available))\r\n                                    .setCancelable(false)\r\n                                    .setMessage(getResources().getString(R.string.update_app_note))\r\n                                    .setPositiveButton(getResources().getString(R.string.update), new DialogInterface.OnClickListener() {\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n\r\n                                            final String appPackageName = getPackageName(); // getPackageName() from Context or Activity object\r\n                                            try {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + appPackageName)));\r\n                                            } catch (ActivityNotFoundException anfe) {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=\" + appPackageName)));\r\n                                            }\r\n\r\n                                        }\r\n                                    })\r\n\r\n                                    .setIcon(android.R.drawable.ic_dialog_alert)\r\n                                    .setCancelable(false);\r\n\r\n                            Dialog dialog = builder.show();\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                int textViewId = dialog.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null);\r\n                                TextView tv = (TextView) dialog.findViewById(textViewId);\r\n                                tv.setTextColor(getResources().getColor(R.color.white));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        Log.e(\"Error\", \"\" + e);\r\n                    }\r\n                })\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(revision 3dfc6cc3ab4d038979a3b922a72c02dc02e76966)
-++++ app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(date 1621420335123)
-+@@ -19,13 +19,11 @@
-+ import android.os.CountDownTimer;
-+ import android.os.Handler;
-+ import android.util.Log;
-+-import android.util.Patterns;
-+ import android.view.LayoutInflater;
-+ import android.view.Menu;
-+ import android.view.MenuInflater;
-+ import android.view.MenuItem;
-+ import android.view.View;
-+-import android.webkit.URLUtil;
-+ import android.widget.Button;
-+ import android.widget.EditText;
-+ import android.widget.TextView;
-+@@ -395,159 +393,62 @@
-+ 
-+                 if (NetworkConnection.isOnline(this)) {
-+ 
-+-                    if (!sessionManager.getLicenseKey().isEmpty()) {
-+-
-+-                        String licenseUrl = sessionManager.getMindMapServerUrl();
-+-                        String licenseKey = sessionManager.getLicenseKey();
-+-                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+-
-+-                    } else {
-+-//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-+-//                    LayoutInflater li = LayoutInflater.from(this);
-+-//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-//                    dialog.setTitle(getString(R.string.enter_license_key))
-+-//                            .setView(promptsView)
-+-//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//
-+-//                                    Dialog d = (Dialog) dialog;
-+-//
-+-//                                    EditText etURL = d.findViewById(R.id.licenseurl);
-+-//                                    EditText etKey = d.findViewById(R.id.licensekey);
-+-//                                    String url = etURL.getText().toString().replace(" ", "");
-+-//                                    String key = etKey.getText().toString().trim();
-+-//
-+-//                                    if (url.isEmpty()) {
-+-//                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (url.contains(":")) {
-+-//                                        etURL.setError(getResources().getString(R.string.invalid_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (key.isEmpty()) {
-+-//                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-+-//                                        etKey.requestFocus();
-+-//                                        return;
-+-//                                    }
-++//                    if (!sessionManager.getLicenseKey().isEmpty()) {
-+ //
-+-//                                    sessionManager.setMindMapServerUrl(url); //trim
-+-//                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-++//                        String licenseUrl = sessionManager.getMindMapServerUrl();
-++//                        String licenseKey = sessionManager.getLicenseKey();
-++//                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+ //
-+-//                                }
-+-//                            })
-+-//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//                                    dialog.dismiss();
-+-//                                }
-+-//                            });
-+-//                    Dialog builderDialog = dialog.show();
-+-//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+-//
-+-//                    // }
-+-                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-                        LayoutInflater li = LayoutInflater.from(this);
-+-                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-
-+-                                        dialog.setTitle(getString(R.string.enter_license_key))
-+-                                                .setView(promptsView)
-+-                                                .setPositiveButton(getString(R.string.button_ok), null)
-+-                                                .setNegativeButton(getString(R.string.button_cancel), null);
-+-
-+-                                        AlertDialog alertDialog = dialog.create();
-+-                                        alertDialog.setView(promptsView, 20, 0, 20, 0);
-+-                                        alertDialog.show();
-+-                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...
-+-
-+-                                        // Get the alert dialog buttons reference
-+-                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);
-+-                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);
-+-
-+-                                        // Change the alert dialog buttons text and background color
-+-                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-
-+-                                        positiveButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                EditText text = promptsView.findViewById(R.id.licensekey);
-+-                                                EditText url = promptsView.findViewById(R.id.licenseurl);
-++//                    } else {
-++                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-++                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-++                    LayoutInflater li = LayoutInflater.from(this);
-++                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-++                    dialog.setTitle(getString(R.string.enter_license_key))
-++                            .setView(promptsView)
-++                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-+ 
-+-                                                url.setError(null);
-+-                                                text.setError(null);
-++                                    Dialog d = (Dialog) dialog;
-+ 
-+-                                                //If both are not entered...
-+-                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-++                                    EditText etURL = d.findViewById(R.id.licenseurl);
-++                                    EditText etKey = d.findViewById(R.id.licensekey);
-++                                    String url = etURL.getText().toString().replace(" ", "");
-++                                    String key = etKey.getText().toString().trim();
-+ 
-+-                                                //If Url is empty...key is not empty...
-+-                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is not empty...key is empty...
-+-                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    text.requestFocus();
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url has : in it...
-+-                                                if (url.getText().toString().trim().contains(":")) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.invalid_url));
-+-                                                    return;
-+-                                                }
-++                                    if (url.isEmpty()) {
-++                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (url.contains(":")) {
-++                                        etURL.setError(getResources().getString(R.string.invalid_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (key.isEmpty()) {
-++                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-++                                        etKey.requestFocus();
-++                                        return;
-++                                    }
-+ 
-+-                                                //If url entered is Invalid...
-+-                                                if (!url.getText().toString().trim().isEmpty()) {
-+-                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {
-+-                                                        String url_field = "https://" + url.getText().toString() + ":3004/";
-+-                                                        if (URLUtil.isValidUrl(url_field)) {
-+-                                                            key = text.getText().toString().trim();
-+-                                                            licenseUrl = url.getText().toString().trim();
-+-
-+-                                                            sessionManager.setMindMapServerUrl(licenseUrl);
-+-
-+-                                                            if (keyVerified(key)) {
-+-                                                                getMindmapDownloadURL("https://" + licenseUrl + ":3004/",key);
-+-                                                                alertDialog.dismiss();
-+-                                                            }
-+-                                                        } else {
-+-                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();
-+-                                                        }
-++                                    sessionManager.setMindMapServerUrl(url); //trim
-++                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-+ 
-+-                                                    } else {
-+-                                                        //invalid url || invalid url and key.
-+-                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();
-+-                                                    }
-+-                                                } else {
-+-                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();
-+-                                                }
-+-                                            }
-+-                                        });
-+-
-+-                                        negativeButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                alertDialog.dismiss();
-+-                                            }
-+-                                        });
-++                                }
-++                            })
-++                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++                                    dialog.dismiss();
-++                                }
-++                            });
-++                    Dialog builderDialog = dialog.show();
-++                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+ 
-+-                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
-+-
-+-                }}else {
-++                    // }
-++                }else {
-+                     Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();
-+                 }
-+ 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07__Default_Changelist_.xml	(date 1621420940051)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07__Default_Changelist_.xml	(date 1621420940051)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_19-05-2021_16_07_[Default_Changelist]" date="1621420669037" recycled="false" toDelete="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_07_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19-05-2021 16:07 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]1/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]1/shelved.patch	(date 1621420899646)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]1/shelved.patch	(date 1621420899646)
-@@ -0,0 +1,219 @@
-+Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package org.intelehealth.ekalhelpline.activities.homeActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.WorkManager;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.ParsePosition;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.activities.activePatientsActivity.ActivePatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.loginActivity.LoginActivity;\r\nimport org.intelehealth.ekalhelpline.activities.searchPatientActivity.SearchPatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.settingsActivity.SettingsActivity;\r\nimport org.intelehealth.ekalhelpline.activities.todayPatientActivity.TodayPatientActivity;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.app.IntelehealthApplication;\r\nimport org.intelehealth.ekalhelpline.models.CheckAppUpdateRes;\r\nimport org.intelehealth.ekalhelpline.models.DownloadMindMapRes;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiClient;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiInterface;\r\nimport org.intelehealth.ekalhelpline.syncModule.SyncUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.DownloadMindMaps;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.Logger;\r\nimport org.intelehealth.ekalhelpline.utilities.NetworkConnection;\r\nimport org.intelehealth.ekalhelpline.utilities.OfflineLogin;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\nimport org.intelehealth.ekalhelpline.widget.materialprogressbar.CustomProgressDialog;\r\nimport io.reactivex.Observable;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.observers.DisposableObserver;\r\nimport io.reactivex.observers.DisposableSingleObserver;\r\nimport io.reactivex.schedulers.Schedulers;\r\n\r\n/**\r\n * Home Screen\r\n */\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = HomeActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private ProgressDialog mSyncProgressDialog;\r\n    CountDownTimer CDT;\r\n    private boolean hasLicense = false;\r\n    int i = 5;\r\n\r\n    TextView lastSyncTextView;\r\n    TextView lastSyncAgo;\r\n    Button manualSyncButton;\r\n    //IntentFilter filter;\r\n\r\n    SyncUtils syncUtils = new SyncUtils();\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n    private String key = null;\r\n    private String licenseUrl = null;\r\n\r\n    Context context;\r\n    CustomProgressDialog customProgressDialog;\r\n    private String mindmapURL = \"\";\r\n    private DownloadMindMaps mTask;\r\n    ProgressDialog mProgressDialog;\r\n\r\n    private int versionCode = 0;\r\n    private CompositeDisposable disposable = new CompositeDisposable();\r\n    TextView newPatient_textview, findPatients_textview, todaysVisits_textview,\r\n            activeVisits_textview, videoLibrary_textview, help_textview;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        sessionManager = new SessionManager(this);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n\r\n        String language = sessionManager.getAppLanguage();\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n\r\n        setTitle(R.string.title_activity_login);\r\n        context = HomeActivity.this;\r\n        customProgressDialog = new CustomProgressDialog(context);\r\n        /*syncBroadcastReceiver = new SyncBroadcastReceiver();\r\n        filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);*/\r\n\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        checkAppVer();  //auto-update feature.\r\n\r\n        Logger.logD(TAG, \"onCreate: \" + getFilesDir().toString());\r\n        lastSyncTextView = findViewById(R.id.lastsynctextview);\r\n        lastSyncAgo = findViewById(R.id.lastsyncago);\r\n        manualSyncButton = findViewById(R.id.manualsyncbutton);\r\n//        manualSyncButton.setPaintFlags(Paint.UNDERLINE_TEXT_FLAG);\r\n       // c1 = findViewById(R.id.cardview_newpat);\r\n        c2 = findViewById(R.id.cardview_find_patient);\r\n        c3 = findViewById(R.id.cardview_today_patient);\r\n        c4 = findViewById(R.id.cardview_active_patients);\r\n        c5 = findViewById(R.id.cardview_video_libraby);\r\n        c6 = findViewById(R.id.cardview_help_whatsapp);\r\n\r\n        //card textview referrenced to fix bug of localization not working in some cases...\r\n     /*   newPatient_textview = findViewById(R.id.newPatient_textview);\r\n        newPatient_textview.setText(R.string.new_patient);*/\r\n\r\n        findPatients_textview = findViewById(R.id.findPatients_textview);\r\n        findPatients_textview.setText(R.string.find_patient);\r\n\r\n        todaysVisits_textview = findViewById(R.id.todaysVisits_textview);\r\n        todaysVisits_textview.setText(R.string.today_visits);\r\n\r\n        activeVisits_textview = findViewById(R.id.activeVisits_textview);\r\n        activeVisits_textview.setText(R.string.active_visits);\r\n\r\n        videoLibrary_textview = findViewById(R.id.videoLibrary_textview);\r\n        videoLibrary_textview.setText(R.string.video_library);\r\n\r\n        help_textview = findViewById(R.id.help_textview);\r\n        help_textview.setText(R.string.Whatsapp_Help_Cardview);\r\n\r\n        // manualSyncButton.setText(R.string.sync_now);\r\n        manualSyncButton.setText(R.string.refresh);\r\n\r\n        //Help section of watsapp...\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String phoneNumberWithCountryCode = \"+917005308163\";\r\n                String message =\r\n                        getString(R.string.hello_my_name_is) + \" \" + sessionManager.getChwname() + \" \" +\r\n                                /*\" from \" + sessionManager.getState() + */getString(R.string.i_need_assistance);\r\n\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\r\n                                String.format(\"https://api.whatsapp.com/send?phone=%s&text=%s\",\r\n                                        phoneNumberWithCountryCode, message))));\r\n            }\r\n        });\r\n/*\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Loads the config file values and check for the boolean value of privacy key.\r\n                ConfigUtils configUtils = new ConfigUtils(HomeActivity.this);\r\n                if (configUtils.privacy_notice()) {\r\n                    Intent intent = new Intent(HomeActivity.this, PrivacyNotice_Activity.class);\r\n                    startActivity(intent);\r\n                } else {\r\n                    //Clear HouseHold UUID from Session for new registration\r\n                    sessionManager.setHouseholdUuid(\"\");\r\n\r\n                    Intent intent = new Intent(HomeActivity.this, IdentificationActivity.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n*/\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, SearchPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, TodayPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, ActivePatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                videoLibrary();\r\n            }\r\n        });\r\n\r\n\r\n        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n\r\n//        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n////            lastSyncAgo.setText(CalculateAgoTime());\r\n//        }\r\n\r\n        manualSyncButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, context);\r\n\r\n                if (isNetworkConnected()) {\r\n                    Toast.makeText(context, getString(R.string.syncInProgress), Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Toast.makeText(context, context.getString(R.string.failed_synced), Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                syncUtils.syncForeground(\"home\");\r\n//                if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                        && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n//                    lastSyncAgo.setText(sessionManager.getLastTimeAgo());\r\n//                }\r\n            }\r\n        });\r\n        if (sessionManager.isFirstTimeLaunched()) {\r\n            mSyncProgressDialog = new ProgressDialog(HomeActivity.this, R.style.AlertDialogStyle); //thats how to add a style!\r\n            mSyncProgressDialog.setTitle(R.string.syncInProgress);\r\n            mSyncProgressDialog.setCancelable(false);\r\n            mSyncProgressDialog.setProgress(i);\r\n\r\n            mSyncProgressDialog.show();\r\n\r\n            syncUtils.initialSync(\"home\");\r\n        } else {\r\n            // if initial setup done then we can directly set the periodic background sync job\r\n            WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n        }\r\n\r\n\r\n        showProgressbar();\r\n    }\r\n\r\n    //function for handling the video library feature...\r\n    private void videoLibrary() {\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            if (obj.has(\"video_library\")) {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                Uri uri = Uri.parse(obj.getString(\"video_library\"));\r\n                intent.setData(uri);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(context, \"No config attribute found\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void showProgressbar() {\r\n\r\n\r\n// instantiate it within the onCreate method\r\n        mProgressDialog = new ProgressDialog(HomeActivity.this);\r\n        mProgressDialog.setMessage(getString(R.string.download_protocols));\r\n        mProgressDialog.setIndeterminate(true);\r\n        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n        mProgressDialog.setCancelable(false);\r\n    }\r\n\r\n\r\n    private String CalculateAgoTime() {\r\n        String finalTime = \"\";\r\n\r\n        String syncTime = sessionManager.getLastSyncDateTime();\r\n\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMM yyyy HH:mm\", Locale.getDefault());\r\n        ParsePosition pos = new ParsePosition(0);\r\n        long then = formatter.parse(syncTime, pos).getTime();\r\n        long now = new Date().getTime();\r\n\r\n        long seconds = (now - then) / 1000;\r\n        long minutes = seconds / 60;\r\n        long hours = minutes / 60;\r\n        long days = hours / 24;\r\n\r\n        String time = \"\";\r\n        long num = 0;\r\n        if (days > 0) {\r\n            num = days;\r\n            time = days + \" \" + context.getString(R.string.day);\r\n        } else if (hours > 0) {\r\n            num = hours;\r\n            time = hours + \" \" + context.getString(R.string.hour);\r\n        } else if (minutes >= 0) {\r\n            num = minutes;\r\n            time = minutes + \" \" + context.getString(R.string.minute);\r\n        }\r\n//      <For Seconds>\r\n//      else {\r\n//            num = seconds;\r\n//            time = seconds + \" second\";\r\n//      }\r\n        if (num > 1) {\r\n            time += context.getString(R.string.s);\r\n        }\r\n        finalTime = time + \" \" + context.getString(R.string.ago);\r\n\r\n        sessionManager.setLastTimeAgo(finalTime);\r\n\r\n        return finalTime;\r\n    }\r\n\r\n    private boolean isNetworkConnected() {\r\n        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n\r\n        return cm.getActiveNetworkInfo() != null && cm.getActiveNetworkInfo().isConnected();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_home, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n//            case R.id.syncOption:\r\n//                refreshDatabases();\r\n//                return true;\r\n            case R.id.settingsOption:\r\n                settings();\r\n                return true;\r\n            case R.id.updateProtocolsOption: {\r\n\r\n\r\n                if (NetworkConnection.isOnline(this)) {\r\n\r\n                    if (!sessionManager.getLicenseKey().isEmpty()) {\r\n\r\n                        String licenseUrl = sessionManager.getMindMapServerUrl();\r\n                        String licenseKey = sessionManager.getLicenseKey();\r\n                        getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\", licenseKey);\r\n\r\n                    } else {\r\n//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);\r\n//                    LayoutInflater li = LayoutInflater.from(this);\r\n//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n//                    dialog.setTitle(getString(R.string.enter_license_key))\r\n//                            .setView(promptsView)\r\n//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//\r\n//                                    Dialog d = (Dialog) dialog;\r\n//\r\n//                                    EditText etURL = d.findViewById(R.id.licenseurl);\r\n//                                    EditText etKey = d.findViewById(R.id.licensekey);\r\n//                                    String url = etURL.getText().toString().replace(\" \", \"\");\r\n//                                    String key = etKey.getText().toString().trim();\r\n//\r\n//                                    if (url.isEmpty()) {\r\n//                                        etURL.setError(getResources().getString(R.string.enter_server_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (url.contains(\":\")) {\r\n//                                        etURL.setError(getResources().getString(R.string.invalid_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (key.isEmpty()) {\r\n//                                        etKey.setError(getResources().getString(R.string.enter_license_key));\r\n//                                        etKey.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//\r\n//                                    sessionManager.setMindMapServerUrl(url); //trim\r\n//                                    getMindmapDownloadURL(\"https://\" + url + \":3004/\", key);\r\n//\r\n//                                }\r\n//                            })\r\n//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//                                    dialog.dismiss();\r\n//                                }\r\n//                            });\r\n//                    Dialog builderDialog = dialog.show();\r\n//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);\r\n//\r\n//                    // }\r\n                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n                        LayoutInflater li = LayoutInflater.from(this);\r\n                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n\r\n                                        dialog.setTitle(getString(R.string.enter_license_key))\r\n                                                .setView(promptsView)\r\n                                                .setPositiveButton(getString(R.string.button_ok), null)\r\n                                                .setNegativeButton(getString(R.string.button_cancel), null);\r\n\r\n                                        AlertDialog alertDialog = dialog.create();\r\n                                        alertDialog.setView(promptsView, 20, 0, 20, 0);\r\n                                        alertDialog.show();\r\n                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...\r\n\r\n                                        // Get the alert dialog buttons reference\r\n                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);\r\n\r\n                                        // Change the alert dialog buttons text and background color\r\n                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n                                        positiveButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                EditText text = promptsView.findViewById(R.id.licensekey);\r\n                                                EditText url = promptsView.findViewById(R.id.licenseurl);\r\n\r\n                                                url.setError(null);\r\n                                                text.setError(null);\r\n\r\n                                                //If both are not entered...\r\n                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is empty...key is not empty...\r\n                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is not empty...key is empty...\r\n                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    text.requestFocus();\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url has : in it...\r\n                                                if (url.getText().toString().trim().contains(\":\")) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.invalid_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If url entered is Invalid...\r\n                                                if (!url.getText().toString().trim().isEmpty()) {\r\n                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {\r\n                                                        String url_field = \"https://\" + url.getText().toString() + \":3004/\";\r\n                                                        if (URLUtil.isValidUrl(url_field)) {\r\n                                                            key = text.getText().toString().trim();\r\n                                                            licenseUrl = url.getText().toString().trim();\r\n\r\n                                                            sessionManager.setMindMapServerUrl(licenseUrl);\r\n\r\n                                                            if (keyVerified(key)) {\r\n                                                                getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\",key);\r\n                                                                alertDialog.dismiss();\r\n                                                            }\r\n                                                        } else {\r\n                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        //invalid url || invalid url and key.\r\n                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();\r\n                                                    }\r\n                                                } else {\r\n                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        negativeButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                alertDialog.dismiss();\r\n                                            }\r\n                                        });\r\n\r\n                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                }}else {\r\n                    Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n         /*   case R.id.sync:\r\n//                pullDataDAO.pullData(this);\r\n//                pullDataDAO.pushDataApi();\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, this);\r\n                boolean isSynced = syncUtils.syncForeground();\r\n//                boolean i = imagesPushDAO.patientProfileImagesPush();\r\n//                boolean o = imagesPushDAO.obsImagesPush();\r\n//                if (isSynced)\r\n//                    AppConstants.notificationUtils.showNotifications_noProgress(getString(R.string.sync_not_available), getString(R.string.please_connect_to_internet), getApplicationContext());\r\n//                else\r\n//                    AppConstants.notificationUtils.showNotifications(getString(R.string.image_upload), getString(R.string.image_upload_failed), 4, this);\r\n                return true;\r\n                */\r\n//            case R.id.backupOption:\r\n//                manageBackup(true, false);  // to backup app data at any time of the day\r\n//                return true;\r\n//\r\n//            case R.id.restoreOption:\r\n//                manageBackup(false, false); // to restore app data if db is empty\r\n//                return true;\r\n\r\n            case R.id.logoutOption:\r\n//                manageBackup(true, false);\r\n\r\n                MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n                alertdialogBuilder.setMessage(R.string.sure_to_logout);\r\n                alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        logout();\r\n                    }\r\n                });\r\n                alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n                AlertDialog alertDialog = alertdialogBuilder.create();\r\n                alertDialog.show();\r\n                Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n                Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method starts intent to another activity to change settings\r\n     *\r\n     * @return void\r\n     */\r\n    public void settings() {\r\n        Intent intent = new Intent(this, SettingsActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Logs out the user. It removes user account using AccountManager.\r\n     *\r\n     * @return void\r\n     */\r\n    public void logout() {\r\n\r\n        OfflineLogin.getOfflineLogin().setOfflineLoginStatus(false);\r\n\r\n//        parseLogOut();\r\n\r\n       /* AccountManager manager = AccountManager.get(HomeActivity.this);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.GET_ACCOUNTS) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }*/\r\n     /*   Account[] accountList = manager.getAccountsByType(\"io.intelehealth.openmrs\");\r\n        if (accountList.length > 0) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                manager.removeAccount(accountList[0], HomeActivity.this, null, null);\r\n            } else {\r\n                manager.removeAccount(accountList[0], null, null); // Legacy implementation\r\n            }\r\n        }\r\n*/\r\n        Intent intent = new Intent(HomeActivity.this, LoginActivity.class);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n\r\n        SyncUtils syncUtils = new SyncUtils();\r\n        syncUtils.syncBackground();\r\n        sessionManager.setReturningUser(false);\r\n        sessionManager.setLogout(true);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        //IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        //registerReceiver(syncBroadcastReceiver, filter);\r\n        checkAppVer();  //auto-update feature.\r\n//        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n                && Locale.getDefault().toString().equals(\"en\")) {\r\n//            lastSyncAgo.setText(CalculateAgoTime());\r\n        }\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        registerReceiver(syncBroadcastReceiver, filter);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        try {\r\n            unregisterReceiver(syncBroadcastReceiver);\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private boolean keyVerified(String key) {\r\n        //TODO: Verify License Key\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        /*new AlertDialog.Builder(this)\r\n                .setMessage(\"Are you sure you want to EXIT ?\")\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        moveTaskToBack(true);\r\n                        finish();\r\n\r\n                    }\r\n\r\n                })\r\n                .setNegativeButton(\"No\", null)\r\n                .show();\r\n*/\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n\r\n        // AlertDialog.Builder alertdialogBuilder = new AlertDialog.Builder(this, R.style.AlertDialogStyle);\r\n        alertdialogBuilder.setMessage(R.string.sure_to_exit);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                moveTaskToBack(true);\r\n                // finish();\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n    }\r\n\r\n    private List<Integer> mTempSyncHelperList = new ArrayList<Integer>();\r\n    private BroadcastReceiver syncBroadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Logger.logD(\"syncBroadcastReceiver\", \"onReceive! \" + intent);\r\n\r\n            if (intent != null && intent.hasExtra(AppConstants.SYNC_INTENT_DATA_KEY)) {\r\n                int flagType = intent.getIntExtra(AppConstants.SYNC_INTENT_DATA_KEY, AppConstants.SYNC_FAILED);\r\n                if (sessionManager.isFirstTimeLaunched()) {\r\n                    if (flagType == AppConstants.SYNC_FAILED) {\r\n                        hideSyncProgressBar(false);\r\n                        /*Toast.makeText(context, R.string.failed_synced, Toast.LENGTH_SHORT).show();\r\n                        finish();*/\r\n                        new AlertDialog.Builder(HomeActivity.this)\r\n                                .setMessage(R.string.failed_initial_synced)\r\n                                .setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialog, int which) {\r\n                                        finish();\r\n                                    }\r\n\r\n                                }).setCancelable(false)\r\n\r\n                                .show();\r\n                    } else {\r\n                        mTempSyncHelperList.add(flagType);\r\n                        if (mTempSyncHelperList.contains(AppConstants.SYNC_PULL_DATA_DONE)\r\n//                                && mTempSyncHelperList.contains(AppConstants.SYNC_PUSH_DATA_DONE)\r\n                                /*&& mTempSyncHelperList.contains(AppConstants.SYNC_PATIENT_PROFILE_IMAGE_PUSH_DONE)\r\n                                && mTempSyncHelperList.contains(AppConstants.SYNC_OBS_IMAGE_PUSH_DONE)*/) {\r\n                            hideSyncProgressBar(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        }\r\n    };\r\n\r\n    private void hideSyncProgressBar(boolean isSuccess) {\r\n        if (mTempSyncHelperList != null) mTempSyncHelperList.clear();\r\n        if (mSyncProgressDialog != null && mSyncProgressDialog.isShowing()) {\r\n            mSyncProgressDialog.dismiss();\r\n            if (isSuccess) {\r\n\r\n                sessionManager.setFirstTimeLaunched(false);\r\n                sessionManager.setMigration(true);\r\n                // initial setup/sync done and now we can set the periodic background sync job\r\n                // given some delay after initial sync\r\n                new Handler().postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n                    }\r\n                }, 10000);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getMindmapDownloadURL(String url, String key) {\r\n        customProgressDialog.show();\r\n        ApiClient.changeApiBaseUrl(url); //trim\r\n        ApiInterface apiService = ApiClient.createService(ApiInterface.class);\r\n        try {\r\n            Observable<DownloadMindMapRes> resultsObservable = apiService.DOWNLOAD_MIND_MAP_RES_OBSERVABLE(key);\r\n            resultsObservable\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(new DisposableObserver<DownloadMindMapRes>() {\r\n                        @Override\r\n                        public void onNext(DownloadMindMapRes res) {\r\n                            customProgressDialog.dismiss();\r\n                            if (res.getMessage() != null && res.getMessage().equalsIgnoreCase(\"Success\")) {\r\n\r\n                                Log.e(\"MindMapURL\", \"Successfully get MindMap URL\");\r\n                                mTask = new DownloadMindMaps(context, mProgressDialog);\r\n                                mindmapURL = res.getMindmap().trim();\r\n                                sessionManager.setLicenseKey(key);\r\n                                checkExistingMindMaps();\r\n\r\n                            } else {\r\n                                Toast.makeText(context, getResources().getString(R.string.no_protocols_found), Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onError(Throwable e) {\r\n                            customProgressDialog.dismiss();\r\n                            Toast.makeText(context, getResources().getString(R.string.unable_to_get_proper_response), Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onComplete() {\r\n\r\n                        }\r\n                    });\r\n        } catch (IllegalArgumentException e) {\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getMessage());\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getStackTrace());\r\n        }\r\n    }\r\n\r\n    private void checkExistingMindMaps() {\r\n\r\n        //Check is there any existing mindmaps are present, if yes then delete.\r\n\r\n        File engines = new File(context.getFilesDir().getAbsolutePath(), \"/Engines\");\r\n        Log.e(TAG, \"Engines folder=\" + engines.exists());\r\n        if (engines.exists()) {\r\n            engines.delete();\r\n        }\r\n        File logo = new File(context.getFilesDir().getAbsolutePath(), \"/logo\");\r\n        Log.e(TAG, \"Logo folder=\" + logo.exists());\r\n        if (logo.exists()) {\r\n            logo.delete();\r\n        }\r\n        File physicalExam = new File(context.getFilesDir().getAbsolutePath() + \"/physExam.json\");\r\n        Log.e(TAG, \"physExam.json=\" + physicalExam.exists());\r\n        if (physicalExam.exists()) {\r\n            physicalExam.delete();\r\n        }\r\n        File familyHistory = new File(context.getFilesDir().getAbsolutePath() + \"/famHist.json\");\r\n        Log.e(TAG, \"famHist.json=\" + familyHistory.exists());\r\n        if (familyHistory.exists()) {\r\n            familyHistory.delete();\r\n        }\r\n        File pastMedicalHistory = new File(context.getFilesDir().getAbsolutePath() + \"/patHist.json\");\r\n        Log.e(TAG, \"patHist.json=\" + pastMedicalHistory.exists());\r\n        if (pastMedicalHistory.exists()) {\r\n            pastMedicalHistory.delete();\r\n        }\r\n        File config = new File(context.getFilesDir().getAbsolutePath() + \"/config.json\");\r\n        Log.e(TAG, \"config.json=\" + config.exists());\r\n        if (config.exists()) {\r\n            config.delete();\r\n        }\r\n\r\n        //Start downloading mindmaps\r\n        mTask.execute(mindmapURL, context.getFilesDir().getAbsolutePath() + \"/mindmaps.zip\");\r\n        Log.e(\"DOWNLOAD\", \"isSTARTED\");\r\n\r\n    }\r\n\r\n    private void checkAppVer() {\r\n\r\n        try {\r\n            PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            String version = pInfo.versionName;\r\n            versionCode = pInfo.versionCode;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        disposable.add((Disposable) AppConstants.apiInterface.checkAppUpdate()\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribeWith(new DisposableSingleObserver<CheckAppUpdateRes>() {\r\n                    @Override\r\n                    public void onSuccess(CheckAppUpdateRes res) {\r\n                        int latestVersionCode = 0;\r\n                        if (!res.getLatestVersionCode().isEmpty()) {\r\n                            latestVersionCode = Integer.parseInt(res.getLatestVersionCode());\r\n                        }\r\n\r\n                        if (latestVersionCode > versionCode) {\r\n                            android.app.AlertDialog.Builder builder;\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this, android.R.style.Theme_Material_Dialog_Alert);\r\n                            } else {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this);\r\n                            }\r\n\r\n\r\n                            builder.setTitle(getResources().getString(R.string.new_update_available))\r\n                                    .setCancelable(false)\r\n                                    .setMessage(getResources().getString(R.string.update_app_note))\r\n                                    .setPositiveButton(getResources().getString(R.string.update), new DialogInterface.OnClickListener() {\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n\r\n                                            final String appPackageName = getPackageName(); // getPackageName() from Context or Activity object\r\n                                            try {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + appPackageName)));\r\n                                            } catch (ActivityNotFoundException anfe) {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=\" + appPackageName)));\r\n                                            }\r\n\r\n                                        }\r\n                                    })\r\n\r\n                                    .setIcon(android.R.drawable.ic_dialog_alert)\r\n                                    .setCancelable(false);\r\n\r\n                            Dialog dialog = builder.show();\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                int textViewId = dialog.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null);\r\n                                TextView tv = (TextView) dialog.findViewById(textViewId);\r\n                                tv.setTextColor(getResources().getColor(R.color.white));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        Log.e(\"Error\", \"\" + e);\r\n                    }\r\n                })\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(revision 3dfc6cc3ab4d038979a3b922a72c02dc02e76966)
-++++ app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(date 1621420000342)
-+@@ -395,159 +395,63 @@
-+ 
-+                 if (NetworkConnection.isOnline(this)) {
-+ 
-+-                    if (!sessionManager.getLicenseKey().isEmpty()) {
-+-
-+-                        String licenseUrl = sessionManager.getMindMapServerUrl();
-+-                        String licenseKey = sessionManager.getLicenseKey();
-+-                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+-
-+-                    } else {
-+-//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-+-//                    LayoutInflater li = LayoutInflater.from(this);
-+-//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-//                    dialog.setTitle(getString(R.string.enter_license_key))
-+-//                            .setView(promptsView)
-+-//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//
-+-//                                    Dialog d = (Dialog) dialog;
-+-//
-+-//                                    EditText etURL = d.findViewById(R.id.licenseurl);
-+-//                                    EditText etKey = d.findViewById(R.id.licensekey);
-+-//                                    String url = etURL.getText().toString().replace(" ", "");
-+-//                                    String key = etKey.getText().toString().trim();
-+-//
-+-//                                    if (url.isEmpty()) {
-+-//                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (url.contains(":")) {
-+-//                                        etURL.setError(getResources().getString(R.string.invalid_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (key.isEmpty()) {
-+-//                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-+-//                                        etKey.requestFocus();
-+-//                                        return;
-+-//                                    }
-++//                    if (!sessionManager.getLicenseKey().isEmpty()) {
-+ //
-+-//                                    sessionManager.setMindMapServerUrl(url); //trim
-+-//                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-++//                        String licenseUrl = sessionManager.getMindMapServerUrl();
-++//                        String licenseKey = sessionManager.getLicenseKey();
-++//                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+ //
-+-//                                }
-+-//                            })
-+-//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//                                    dialog.dismiss();
-+-//                                }
-+-//                            });
-+-//                    Dialog builderDialog = dialog.show();
-+-//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+-//
-+-//                    // }
-+-                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-                        LayoutInflater li = LayoutInflater.from(this);
-+-                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-
-+-                                        dialog.setTitle(getString(R.string.enter_license_key))
-+-                                                .setView(promptsView)
-+-                                                .setPositiveButton(getString(R.string.button_ok), null)
-+-                                                .setNegativeButton(getString(R.string.button_cancel), null);
-+-
-+-                                        AlertDialog alertDialog = dialog.create();
-+-                                        alertDialog.setView(promptsView, 20, 0, 20, 0);
-+-                                        alertDialog.show();
-+-                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...
-+-
-+-                                        // Get the alert dialog buttons reference
-+-                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);
-+-                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);
-+-
-+-                                        // Change the alert dialog buttons text and background color
-+-                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-
-+-                                        positiveButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                EditText text = promptsView.findViewById(R.id.licensekey);
-+-                                                EditText url = promptsView.findViewById(R.id.licenseurl);
-++//                    } else {
-++                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-++                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-++                    LayoutInflater li = LayoutInflater.from(this);
-++                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-++                    dialog.setTitle(getString(R.string.enter_license_key))
-++                            .setView(promptsView)
-++                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-+ 
-+-                                                url.setError(null);
-+-                                                text.setError(null);
-++                                    Dialog d = (Dialog) dialog;
-+ 
-+-                                                //If both are not entered...
-+-                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is empty...key is not empty...
-+-                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is not empty...key is empty...
-+-                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    text.requestFocus();
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-++                                    EditText etURL = d.findViewById(R.id.licenseurl);
-++                                    EditText etKey = d.findViewById(R.id.licensekey);
-++                                    String url = etURL.getText().toString().replace(" ", "");
-++                                    String key = etKey.getText().toString().trim();
-++
-++                                    if (url.isEmpty()) {
-++                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (url.contains(":")) {
-++                                        etURL.setError(getResources().getString(R.string.invalid_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (key.isEmpty()) {
-++                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-++                                        etKey.requestFocus();
-++                                        return;
-++                                    }
-+ 
-+-                                                //If Url has : in it...
-+-                                                if (url.getText().toString().trim().contains(":")) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.invalid_url));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If url entered is Invalid...
-+-                                                if (!url.getText().toString().trim().isEmpty()) {
-+-                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {
-+-                                                        String url_field = "https://" + url.getText().toString() + ":3004/";
-+-                                                        if (URLUtil.isValidUrl(url_field)) {
-+-                                                            key = text.getText().toString().trim();
-+-                                                            licenseUrl = url.getText().toString().trim();
-+-
-+-                                                            sessionManager.setMindMapServerUrl(licenseUrl);
-++                                    sessionManager.setMindMapServerUrl(url); //trim
-++                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-+ 
-+-                                                            if (keyVerified(key)) {
-+-                                                                getMindmapDownloadURL("https://" + licenseUrl + ":3004/",key);
-+-                                                                alertDialog.dismiss();
-+-                                                            }
-+-                                                        } else {
-+-                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();
-+-                                                        }
-++                                }
-++                            })
-++                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++                                    dialog.dismiss();
-++                                }
-++                            });
-++                    Dialog builderDialog = dialog.show();
-++                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+ 
-+-                                                    } else {
-+-                                                        //invalid url || invalid url and key.
-+-                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();
-+-                                                    }
-+-                                                } else {
-+-                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();
-+-                                                }
-+-                                            }
-+-                                        });
-+-
-+-                                        negativeButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                alertDialog.dismiss();
-+-                                            }
-+-                                        });
-+-
-+-                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
-+-
-+-                }}else {
-++                    // }
-++//
-++                }else {
-+                     Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();
-+                 }
-+ 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52_[Default_Changelist]/shelved.patch	(date 1621420899668)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_52_[Default_Changelist]/shelved.patch	(date 1621420899668)
-@@ -0,0 +1,219 @@
-+Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package org.intelehealth.ekalhelpline.activities.homeActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.WorkManager;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.ParsePosition;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.activities.activePatientsActivity.ActivePatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.loginActivity.LoginActivity;\r\nimport org.intelehealth.ekalhelpline.activities.searchPatientActivity.SearchPatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.settingsActivity.SettingsActivity;\r\nimport org.intelehealth.ekalhelpline.activities.todayPatientActivity.TodayPatientActivity;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.app.IntelehealthApplication;\r\nimport org.intelehealth.ekalhelpline.models.CheckAppUpdateRes;\r\nimport org.intelehealth.ekalhelpline.models.DownloadMindMapRes;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiClient;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiInterface;\r\nimport org.intelehealth.ekalhelpline.syncModule.SyncUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.DownloadMindMaps;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.Logger;\r\nimport org.intelehealth.ekalhelpline.utilities.NetworkConnection;\r\nimport org.intelehealth.ekalhelpline.utilities.OfflineLogin;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\nimport org.intelehealth.ekalhelpline.widget.materialprogressbar.CustomProgressDialog;\r\nimport io.reactivex.Observable;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.observers.DisposableObserver;\r\nimport io.reactivex.observers.DisposableSingleObserver;\r\nimport io.reactivex.schedulers.Schedulers;\r\n\r\n/**\r\n * Home Screen\r\n */\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = HomeActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private ProgressDialog mSyncProgressDialog;\r\n    CountDownTimer CDT;\r\n    private boolean hasLicense = false;\r\n    int i = 5;\r\n\r\n    TextView lastSyncTextView;\r\n    TextView lastSyncAgo;\r\n    Button manualSyncButton;\r\n    //IntentFilter filter;\r\n\r\n    SyncUtils syncUtils = new SyncUtils();\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n    private String key = null;\r\n    private String licenseUrl = null;\r\n\r\n    Context context;\r\n    CustomProgressDialog customProgressDialog;\r\n    private String mindmapURL = \"\";\r\n    private DownloadMindMaps mTask;\r\n    ProgressDialog mProgressDialog;\r\n\r\n    private int versionCode = 0;\r\n    private CompositeDisposable disposable = new CompositeDisposable();\r\n    TextView newPatient_textview, findPatients_textview, todaysVisits_textview,\r\n            activeVisits_textview, videoLibrary_textview, help_textview;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        sessionManager = new SessionManager(this);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n\r\n        String language = sessionManager.getAppLanguage();\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n\r\n        setTitle(R.string.title_activity_login);\r\n        context = HomeActivity.this;\r\n        customProgressDialog = new CustomProgressDialog(context);\r\n        /*syncBroadcastReceiver = new SyncBroadcastReceiver();\r\n        filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);*/\r\n\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        checkAppVer();  //auto-update feature.\r\n\r\n        Logger.logD(TAG, \"onCreate: \" + getFilesDir().toString());\r\n        lastSyncTextView = findViewById(R.id.lastsynctextview);\r\n        lastSyncAgo = findViewById(R.id.lastsyncago);\r\n        manualSyncButton = findViewById(R.id.manualsyncbutton);\r\n//        manualSyncButton.setPaintFlags(Paint.UNDERLINE_TEXT_FLAG);\r\n       // c1 = findViewById(R.id.cardview_newpat);\r\n        c2 = findViewById(R.id.cardview_find_patient);\r\n        c3 = findViewById(R.id.cardview_today_patient);\r\n        c4 = findViewById(R.id.cardview_active_patients);\r\n        c5 = findViewById(R.id.cardview_video_libraby);\r\n        c6 = findViewById(R.id.cardview_help_whatsapp);\r\n\r\n        //card textview referrenced to fix bug of localization not working in some cases...\r\n     /*   newPatient_textview = findViewById(R.id.newPatient_textview);\r\n        newPatient_textview.setText(R.string.new_patient);*/\r\n\r\n        findPatients_textview = findViewById(R.id.findPatients_textview);\r\n        findPatients_textview.setText(R.string.find_patient);\r\n\r\n        todaysVisits_textview = findViewById(R.id.todaysVisits_textview);\r\n        todaysVisits_textview.setText(R.string.today_visits);\r\n\r\n        activeVisits_textview = findViewById(R.id.activeVisits_textview);\r\n        activeVisits_textview.setText(R.string.active_visits);\r\n\r\n        videoLibrary_textview = findViewById(R.id.videoLibrary_textview);\r\n        videoLibrary_textview.setText(R.string.video_library);\r\n\r\n        help_textview = findViewById(R.id.help_textview);\r\n        help_textview.setText(R.string.Whatsapp_Help_Cardview);\r\n\r\n        // manualSyncButton.setText(R.string.sync_now);\r\n        manualSyncButton.setText(R.string.refresh);\r\n\r\n        //Help section of watsapp...\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String phoneNumberWithCountryCode = \"+917005308163\";\r\n                String message =\r\n                        getString(R.string.hello_my_name_is) + \" \" + sessionManager.getChwname() + \" \" +\r\n                                /*\" from \" + sessionManager.getState() + */getString(R.string.i_need_assistance);\r\n\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\r\n                                String.format(\"https://api.whatsapp.com/send?phone=%s&text=%s\",\r\n                                        phoneNumberWithCountryCode, message))));\r\n            }\r\n        });\r\n/*\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Loads the config file values and check for the boolean value of privacy key.\r\n                ConfigUtils configUtils = new ConfigUtils(HomeActivity.this);\r\n                if (configUtils.privacy_notice()) {\r\n                    Intent intent = new Intent(HomeActivity.this, PrivacyNotice_Activity.class);\r\n                    startActivity(intent);\r\n                } else {\r\n                    //Clear HouseHold UUID from Session for new registration\r\n                    sessionManager.setHouseholdUuid(\"\");\r\n\r\n                    Intent intent = new Intent(HomeActivity.this, IdentificationActivity.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n*/\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, SearchPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, TodayPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, ActivePatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                videoLibrary();\r\n            }\r\n        });\r\n\r\n\r\n        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n\r\n//        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n////            lastSyncAgo.setText(CalculateAgoTime());\r\n//        }\r\n\r\n        manualSyncButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, context);\r\n\r\n                if (isNetworkConnected()) {\r\n                    Toast.makeText(context, getString(R.string.syncInProgress), Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Toast.makeText(context, context.getString(R.string.failed_synced), Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                syncUtils.syncForeground(\"home\");\r\n//                if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                        && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n//                    lastSyncAgo.setText(sessionManager.getLastTimeAgo());\r\n//                }\r\n            }\r\n        });\r\n        if (sessionManager.isFirstTimeLaunched()) {\r\n            mSyncProgressDialog = new ProgressDialog(HomeActivity.this, R.style.AlertDialogStyle); //thats how to add a style!\r\n            mSyncProgressDialog.setTitle(R.string.syncInProgress);\r\n            mSyncProgressDialog.setCancelable(false);\r\n            mSyncProgressDialog.setProgress(i);\r\n\r\n            mSyncProgressDialog.show();\r\n\r\n            syncUtils.initialSync(\"home\");\r\n        } else {\r\n            // if initial setup done then we can directly set the periodic background sync job\r\n            WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n        }\r\n\r\n\r\n        showProgressbar();\r\n    }\r\n\r\n    //function for handling the video library feature...\r\n    private void videoLibrary() {\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            if (obj.has(\"video_library\")) {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                Uri uri = Uri.parse(obj.getString(\"video_library\"));\r\n                intent.setData(uri);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(context, \"No config attribute found\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void showProgressbar() {\r\n\r\n\r\n// instantiate it within the onCreate method\r\n        mProgressDialog = new ProgressDialog(HomeActivity.this);\r\n        mProgressDialog.setMessage(getString(R.string.download_protocols));\r\n        mProgressDialog.setIndeterminate(true);\r\n        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n        mProgressDialog.setCancelable(false);\r\n    }\r\n\r\n\r\n    private String CalculateAgoTime() {\r\n        String finalTime = \"\";\r\n\r\n        String syncTime = sessionManager.getLastSyncDateTime();\r\n\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMM yyyy HH:mm\", Locale.getDefault());\r\n        ParsePosition pos = new ParsePosition(0);\r\n        long then = formatter.parse(syncTime, pos).getTime();\r\n        long now = new Date().getTime();\r\n\r\n        long seconds = (now - then) / 1000;\r\n        long minutes = seconds / 60;\r\n        long hours = minutes / 60;\r\n        long days = hours / 24;\r\n\r\n        String time = \"\";\r\n        long num = 0;\r\n        if (days > 0) {\r\n            num = days;\r\n            time = days + \" \" + context.getString(R.string.day);\r\n        } else if (hours > 0) {\r\n            num = hours;\r\n            time = hours + \" \" + context.getString(R.string.hour);\r\n        } else if (minutes >= 0) {\r\n            num = minutes;\r\n            time = minutes + \" \" + context.getString(R.string.minute);\r\n        }\r\n//      <For Seconds>\r\n//      else {\r\n//            num = seconds;\r\n//            time = seconds + \" second\";\r\n//      }\r\n        if (num > 1) {\r\n            time += context.getString(R.string.s);\r\n        }\r\n        finalTime = time + \" \" + context.getString(R.string.ago);\r\n\r\n        sessionManager.setLastTimeAgo(finalTime);\r\n\r\n        return finalTime;\r\n    }\r\n\r\n    private boolean isNetworkConnected() {\r\n        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n\r\n        return cm.getActiveNetworkInfo() != null && cm.getActiveNetworkInfo().isConnected();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_home, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n//            case R.id.syncOption:\r\n//                refreshDatabases();\r\n//                return true;\r\n            case R.id.settingsOption:\r\n                settings();\r\n                return true;\r\n            case R.id.updateProtocolsOption: {\r\n\r\n\r\n                if (NetworkConnection.isOnline(this)) {\r\n\r\n                    if (!sessionManager.getLicenseKey().isEmpty()) {\r\n\r\n                        String licenseUrl = sessionManager.getMindMapServerUrl();\r\n                        String licenseKey = sessionManager.getLicenseKey();\r\n                        getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\", licenseKey);\r\n\r\n                    } else {\r\n//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);\r\n//                    LayoutInflater li = LayoutInflater.from(this);\r\n//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n//                    dialog.setTitle(getString(R.string.enter_license_key))\r\n//                            .setView(promptsView)\r\n//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//\r\n//                                    Dialog d = (Dialog) dialog;\r\n//\r\n//                                    EditText etURL = d.findViewById(R.id.licenseurl);\r\n//                                    EditText etKey = d.findViewById(R.id.licensekey);\r\n//                                    String url = etURL.getText().toString().replace(\" \", \"\");\r\n//                                    String key = etKey.getText().toString().trim();\r\n//\r\n//                                    if (url.isEmpty()) {\r\n//                                        etURL.setError(getResources().getString(R.string.enter_server_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (url.contains(\":\")) {\r\n//                                        etURL.setError(getResources().getString(R.string.invalid_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (key.isEmpty()) {\r\n//                                        etKey.setError(getResources().getString(R.string.enter_license_key));\r\n//                                        etKey.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//\r\n//                                    sessionManager.setMindMapServerUrl(url); //trim\r\n//                                    getMindmapDownloadURL(\"https://\" + url + \":3004/\", key);\r\n//\r\n//                                }\r\n//                            })\r\n//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//                                    dialog.dismiss();\r\n//                                }\r\n//                            });\r\n//                    Dialog builderDialog = dialog.show();\r\n//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);\r\n//\r\n//                    // }\r\n                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n                        LayoutInflater li = LayoutInflater.from(this);\r\n                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n\r\n                                        dialog.setTitle(getString(R.string.enter_license_key))\r\n                                                .setView(promptsView)\r\n                                                .setPositiveButton(getString(R.string.button_ok), null)\r\n                                                .setNegativeButton(getString(R.string.button_cancel), null);\r\n\r\n                                        AlertDialog alertDialog = dialog.create();\r\n                                        alertDialog.setView(promptsView, 20, 0, 20, 0);\r\n                                        alertDialog.show();\r\n                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...\r\n\r\n                                        // Get the alert dialog buttons reference\r\n                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);\r\n\r\n                                        // Change the alert dialog buttons text and background color\r\n                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n                                        positiveButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                EditText text = promptsView.findViewById(R.id.licensekey);\r\n                                                EditText url = promptsView.findViewById(R.id.licenseurl);\r\n\r\n                                                url.setError(null);\r\n                                                text.setError(null);\r\n\r\n                                                //If both are not entered...\r\n                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is empty...key is not empty...\r\n                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is not empty...key is empty...\r\n                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    text.requestFocus();\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url has : in it...\r\n                                                if (url.getText().toString().trim().contains(\":\")) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.invalid_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If url entered is Invalid...\r\n                                                if (!url.getText().toString().trim().isEmpty()) {\r\n                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {\r\n                                                        String url_field = \"https://\" + url.getText().toString() + \":3004/\";\r\n                                                        if (URLUtil.isValidUrl(url_field)) {\r\n                                                            key = text.getText().toString().trim();\r\n                                                            licenseUrl = url.getText().toString().trim();\r\n\r\n                                                            sessionManager.setMindMapServerUrl(licenseUrl);\r\n\r\n                                                            if (keyVerified(key)) {\r\n                                                                getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\",key);\r\n                                                                alertDialog.dismiss();\r\n                                                            }\r\n                                                        } else {\r\n                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        //invalid url || invalid url and key.\r\n                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();\r\n                                                    }\r\n                                                } else {\r\n                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        negativeButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                alertDialog.dismiss();\r\n                                            }\r\n                                        });\r\n\r\n                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                }}else {\r\n                    Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n         /*   case R.id.sync:\r\n//                pullDataDAO.pullData(this);\r\n//                pullDataDAO.pushDataApi();\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, this);\r\n                boolean isSynced = syncUtils.syncForeground();\r\n//                boolean i = imagesPushDAO.patientProfileImagesPush();\r\n//                boolean o = imagesPushDAO.obsImagesPush();\r\n//                if (isSynced)\r\n//                    AppConstants.notificationUtils.showNotifications_noProgress(getString(R.string.sync_not_available), getString(R.string.please_connect_to_internet), getApplicationContext());\r\n//                else\r\n//                    AppConstants.notificationUtils.showNotifications(getString(R.string.image_upload), getString(R.string.image_upload_failed), 4, this);\r\n                return true;\r\n                */\r\n//            case R.id.backupOption:\r\n//                manageBackup(true, false);  // to backup app data at any time of the day\r\n//                return true;\r\n//\r\n//            case R.id.restoreOption:\r\n//                manageBackup(false, false); // to restore app data if db is empty\r\n//                return true;\r\n\r\n            case R.id.logoutOption:\r\n//                manageBackup(true, false);\r\n\r\n                MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n                alertdialogBuilder.setMessage(R.string.sure_to_logout);\r\n                alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        logout();\r\n                    }\r\n                });\r\n                alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n                AlertDialog alertDialog = alertdialogBuilder.create();\r\n                alertDialog.show();\r\n                Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n                Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method starts intent to another activity to change settings\r\n     *\r\n     * @return void\r\n     */\r\n    public void settings() {\r\n        Intent intent = new Intent(this, SettingsActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Logs out the user. It removes user account using AccountManager.\r\n     *\r\n     * @return void\r\n     */\r\n    public void logout() {\r\n\r\n        OfflineLogin.getOfflineLogin().setOfflineLoginStatus(false);\r\n\r\n//        parseLogOut();\r\n\r\n       /* AccountManager manager = AccountManager.get(HomeActivity.this);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.GET_ACCOUNTS) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }*/\r\n     /*   Account[] accountList = manager.getAccountsByType(\"io.intelehealth.openmrs\");\r\n        if (accountList.length > 0) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                manager.removeAccount(accountList[0], HomeActivity.this, null, null);\r\n            } else {\r\n                manager.removeAccount(accountList[0], null, null); // Legacy implementation\r\n            }\r\n        }\r\n*/\r\n        Intent intent = new Intent(HomeActivity.this, LoginActivity.class);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n\r\n        SyncUtils syncUtils = new SyncUtils();\r\n        syncUtils.syncBackground();\r\n        sessionManager.setReturningUser(false);\r\n        sessionManager.setLogout(true);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        //IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        //registerReceiver(syncBroadcastReceiver, filter);\r\n        checkAppVer();  //auto-update feature.\r\n//        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n                && Locale.getDefault().toString().equals(\"en\")) {\r\n//            lastSyncAgo.setText(CalculateAgoTime());\r\n        }\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        registerReceiver(syncBroadcastReceiver, filter);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        try {\r\n            unregisterReceiver(syncBroadcastReceiver);\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private boolean keyVerified(String key) {\r\n        //TODO: Verify License Key\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        /*new AlertDialog.Builder(this)\r\n                .setMessage(\"Are you sure you want to EXIT ?\")\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        moveTaskToBack(true);\r\n                        finish();\r\n\r\n                    }\r\n\r\n                })\r\n                .setNegativeButton(\"No\", null)\r\n                .show();\r\n*/\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n\r\n        // AlertDialog.Builder alertdialogBuilder = new AlertDialog.Builder(this, R.style.AlertDialogStyle);\r\n        alertdialogBuilder.setMessage(R.string.sure_to_exit);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                moveTaskToBack(true);\r\n                // finish();\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n    }\r\n\r\n    private List<Integer> mTempSyncHelperList = new ArrayList<Integer>();\r\n    private BroadcastReceiver syncBroadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Logger.logD(\"syncBroadcastReceiver\", \"onReceive! \" + intent);\r\n\r\n            if (intent != null && intent.hasExtra(AppConstants.SYNC_INTENT_DATA_KEY)) {\r\n                int flagType = intent.getIntExtra(AppConstants.SYNC_INTENT_DATA_KEY, AppConstants.SYNC_FAILED);\r\n                if (sessionManager.isFirstTimeLaunched()) {\r\n                    if (flagType == AppConstants.SYNC_FAILED) {\r\n                        hideSyncProgressBar(false);\r\n                        /*Toast.makeText(context, R.string.failed_synced, Toast.LENGTH_SHORT).show();\r\n                        finish();*/\r\n                        new AlertDialog.Builder(HomeActivity.this)\r\n                                .setMessage(R.string.failed_initial_synced)\r\n                                .setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialog, int which) {\r\n                                        finish();\r\n                                    }\r\n\r\n                                }).setCancelable(false)\r\n\r\n                                .show();\r\n                    } else {\r\n                        mTempSyncHelperList.add(flagType);\r\n                        if (mTempSyncHelperList.contains(AppConstants.SYNC_PULL_DATA_DONE)\r\n//                                && mTempSyncHelperList.contains(AppConstants.SYNC_PUSH_DATA_DONE)\r\n                                /*&& mTempSyncHelperList.contains(AppConstants.SYNC_PATIENT_PROFILE_IMAGE_PUSH_DONE)\r\n                                && mTempSyncHelperList.contains(AppConstants.SYNC_OBS_IMAGE_PUSH_DONE)*/) {\r\n                            hideSyncProgressBar(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        }\r\n    };\r\n\r\n    private void hideSyncProgressBar(boolean isSuccess) {\r\n        if (mTempSyncHelperList != null) mTempSyncHelperList.clear();\r\n        if (mSyncProgressDialog != null && mSyncProgressDialog.isShowing()) {\r\n            mSyncProgressDialog.dismiss();\r\n            if (isSuccess) {\r\n\r\n                sessionManager.setFirstTimeLaunched(false);\r\n                sessionManager.setMigration(true);\r\n                // initial setup/sync done and now we can set the periodic background sync job\r\n                // given some delay after initial sync\r\n                new Handler().postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n                    }\r\n                }, 10000);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getMindmapDownloadURL(String url, String key) {\r\n        customProgressDialog.show();\r\n        ApiClient.changeApiBaseUrl(url); //trim\r\n        ApiInterface apiService = ApiClient.createService(ApiInterface.class);\r\n        try {\r\n            Observable<DownloadMindMapRes> resultsObservable = apiService.DOWNLOAD_MIND_MAP_RES_OBSERVABLE(key);\r\n            resultsObservable\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(new DisposableObserver<DownloadMindMapRes>() {\r\n                        @Override\r\n                        public void onNext(DownloadMindMapRes res) {\r\n                            customProgressDialog.dismiss();\r\n                            if (res.getMessage() != null && res.getMessage().equalsIgnoreCase(\"Success\")) {\r\n\r\n                                Log.e(\"MindMapURL\", \"Successfully get MindMap URL\");\r\n                                mTask = new DownloadMindMaps(context, mProgressDialog);\r\n                                mindmapURL = res.getMindmap().trim();\r\n                                sessionManager.setLicenseKey(key);\r\n                                checkExistingMindMaps();\r\n\r\n                            } else {\r\n                                Toast.makeText(context, getResources().getString(R.string.no_protocols_found), Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onError(Throwable e) {\r\n                            customProgressDialog.dismiss();\r\n                            Toast.makeText(context, getResources().getString(R.string.unable_to_get_proper_response), Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onComplete() {\r\n\r\n                        }\r\n                    });\r\n        } catch (IllegalArgumentException e) {\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getMessage());\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getStackTrace());\r\n        }\r\n    }\r\n\r\n    private void checkExistingMindMaps() {\r\n\r\n        //Check is there any existing mindmaps are present, if yes then delete.\r\n\r\n        File engines = new File(context.getFilesDir().getAbsolutePath(), \"/Engines\");\r\n        Log.e(TAG, \"Engines folder=\" + engines.exists());\r\n        if (engines.exists()) {\r\n            engines.delete();\r\n        }\r\n        File logo = new File(context.getFilesDir().getAbsolutePath(), \"/logo\");\r\n        Log.e(TAG, \"Logo folder=\" + logo.exists());\r\n        if (logo.exists()) {\r\n            logo.delete();\r\n        }\r\n        File physicalExam = new File(context.getFilesDir().getAbsolutePath() + \"/physExam.json\");\r\n        Log.e(TAG, \"physExam.json=\" + physicalExam.exists());\r\n        if (physicalExam.exists()) {\r\n            physicalExam.delete();\r\n        }\r\n        File familyHistory = new File(context.getFilesDir().getAbsolutePath() + \"/famHist.json\");\r\n        Log.e(TAG, \"famHist.json=\" + familyHistory.exists());\r\n        if (familyHistory.exists()) {\r\n            familyHistory.delete();\r\n        }\r\n        File pastMedicalHistory = new File(context.getFilesDir().getAbsolutePath() + \"/patHist.json\");\r\n        Log.e(TAG, \"patHist.json=\" + pastMedicalHistory.exists());\r\n        if (pastMedicalHistory.exists()) {\r\n            pastMedicalHistory.delete();\r\n        }\r\n        File config = new File(context.getFilesDir().getAbsolutePath() + \"/config.json\");\r\n        Log.e(TAG, \"config.json=\" + config.exists());\r\n        if (config.exists()) {\r\n            config.delete();\r\n        }\r\n\r\n        //Start downloading mindmaps\r\n        mTask.execute(mindmapURL, context.getFilesDir().getAbsolutePath() + \"/mindmaps.zip\");\r\n        Log.e(\"DOWNLOAD\", \"isSTARTED\");\r\n\r\n    }\r\n\r\n    private void checkAppVer() {\r\n\r\n        try {\r\n            PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            String version = pInfo.versionName;\r\n            versionCode = pInfo.versionCode;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        disposable.add((Disposable) AppConstants.apiInterface.checkAppUpdate()\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribeWith(new DisposableSingleObserver<CheckAppUpdateRes>() {\r\n                    @Override\r\n                    public void onSuccess(CheckAppUpdateRes res) {\r\n                        int latestVersionCode = 0;\r\n                        if (!res.getLatestVersionCode().isEmpty()) {\r\n                            latestVersionCode = Integer.parseInt(res.getLatestVersionCode());\r\n                        }\r\n\r\n                        if (latestVersionCode > versionCode) {\r\n                            android.app.AlertDialog.Builder builder;\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this, android.R.style.Theme_Material_Dialog_Alert);\r\n                            } else {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this);\r\n                            }\r\n\r\n\r\n                            builder.setTitle(getResources().getString(R.string.new_update_available))\r\n                                    .setCancelable(false)\r\n                                    .setMessage(getResources().getString(R.string.update_app_note))\r\n                                    .setPositiveButton(getResources().getString(R.string.update), new DialogInterface.OnClickListener() {\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n\r\n                                            final String appPackageName = getPackageName(); // getPackageName() from Context or Activity object\r\n                                            try {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + appPackageName)));\r\n                                            } catch (ActivityNotFoundException anfe) {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=\" + appPackageName)));\r\n                                            }\r\n\r\n                                        }\r\n                                    })\r\n\r\n                                    .setIcon(android.R.drawable.ic_dialog_alert)\r\n                                    .setCancelable(false);\r\n\r\n                            Dialog dialog = builder.show();\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                int textViewId = dialog.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null);\r\n                                TextView tv = (TextView) dialog.findViewById(textViewId);\r\n                                tv.setTextColor(getResources().getColor(R.color.white));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        Log.e(\"Error\", \"\" + e);\r\n                    }\r\n                })\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(revision 3dfc6cc3ab4d038979a3b922a72c02dc02e76966)
-++++ app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(date 1621419769256)
-+@@ -395,159 +395,63 @@
-+ 
-+                 if (NetworkConnection.isOnline(this)) {
-+ 
-+-                    if (!sessionManager.getLicenseKey().isEmpty()) {
-+-
-+-                        String licenseUrl = sessionManager.getMindMapServerUrl();
-+-                        String licenseKey = sessionManager.getLicenseKey();
-+-                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+-
-+-                    } else {
-+-//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-+-//                    LayoutInflater li = LayoutInflater.from(this);
-+-//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-//                    dialog.setTitle(getString(R.string.enter_license_key))
-+-//                            .setView(promptsView)
-+-//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//
-+-//                                    Dialog d = (Dialog) dialog;
-+-//
-+-//                                    EditText etURL = d.findViewById(R.id.licenseurl);
-+-//                                    EditText etKey = d.findViewById(R.id.licensekey);
-+-//                                    String url = etURL.getText().toString().replace(" ", "");
-+-//                                    String key = etKey.getText().toString().trim();
-+-//
-+-//                                    if (url.isEmpty()) {
-+-//                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (url.contains(":")) {
-+-//                                        etURL.setError(getResources().getString(R.string.invalid_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (key.isEmpty()) {
-+-//                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-+-//                                        etKey.requestFocus();
-+-//                                        return;
-+-//                                    }
-++//                    if (!sessionManager.getLicenseKey().isEmpty()) {
-+ //
-+-//                                    sessionManager.setMindMapServerUrl(url); //trim
-+-//                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-++//                        String licenseUrl = sessionManager.getMindMapServerUrl();
-++//                        String licenseKey = sessionManager.getLicenseKey();
-++//                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-+ //
-+-//                                }
-+-//                            })
-+-//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//                                    dialog.dismiss();
-+-//                                }
-+-//                            });
-+-//                    Dialog builderDialog = dialog.show();
-+-//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+-//
-+-//                    // }
-+-                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-                        LayoutInflater li = LayoutInflater.from(this);
-+-                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-
-+-                                        dialog.setTitle(getString(R.string.enter_license_key))
-+-                                                .setView(promptsView)
-+-                                                .setPositiveButton(getString(R.string.button_ok), null)
-+-                                                .setNegativeButton(getString(R.string.button_cancel), null);
-+-
-+-                                        AlertDialog alertDialog = dialog.create();
-+-                                        alertDialog.setView(promptsView, 20, 0, 20, 0);
-+-                                        alertDialog.show();
-+-                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...
-+-
-+-                                        // Get the alert dialog buttons reference
-+-                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);
-+-                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);
-+-
-+-                                        // Change the alert dialog buttons text and background color
-+-                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-
-+-                                        positiveButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                EditText text = promptsView.findViewById(R.id.licensekey);
-+-                                                EditText url = promptsView.findViewById(R.id.licenseurl);
-++//                    } else {
-++                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-++                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-++                    LayoutInflater li = LayoutInflater.from(this);
-++                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-++                    dialog.setTitle(getString(R.string.enter_license_key))
-++                            .setView(promptsView)
-++                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-+ 
-+-                                                url.setError(null);
-+-                                                text.setError(null);
-++                                    Dialog d = (Dialog) dialog;
-+ 
-+-                                                //If both are not entered...
-+-                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is empty...key is not empty...
-+-                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is not empty...key is empty...
-+-                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    text.requestFocus();
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-++                                    EditText etURL = d.findViewById(R.id.licenseurl);
-++                                    EditText etKey = d.findViewById(R.id.licensekey);
-++                                    String url = etURL.getText().toString().replace(" ", "");
-++                                    String key = etKey.getText().toString().trim();
-++
-++                                    if (url.isEmpty()) {
-++                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (url.contains(":")) {
-++                                        etURL.setError(getResources().getString(R.string.invalid_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (key.isEmpty()) {
-++                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-++                                        etKey.requestFocus();
-++                                        return;
-++                                    }
-+ 
-+-                                                //If Url has : in it...
-+-                                                if (url.getText().toString().trim().contains(":")) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.invalid_url));
-+-                                                    return;
-+-                                                }
-++                                    sessionManager.setMindMapServerUrl(url); //trim
-++                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-+ 
-+-                                                //If url entered is Invalid...
-+-                                                if (!url.getText().toString().trim().isEmpty()) {
-+-                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {
-+-                                                        String url_field = "https://" + url.getText().toString() + ":3004/";
-+-                                                        if (URLUtil.isValidUrl(url_field)) {
-+-                                                            key = text.getText().toString().trim();
-+-                                                            licenseUrl = url.getText().toString().trim();
-+-
-+-                                                            sessionManager.setMindMapServerUrl(licenseUrl);
-+-
-+-                                                            if (keyVerified(key)) {
-+-                                                                getMindmapDownloadURL("https://" + licenseUrl + ":3004/",key);
-+-                                                                alertDialog.dismiss();
-+-                                                            }
-+-                                                        } else {
-+-                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();
-+-                                                        }
-++                                }
-++                            })
-++                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++                                    dialog.dismiss();
-++                                }
-++                            });
-++                    Dialog builderDialog = dialog.show();
-++                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-+ 
-+-                                                    } else {
-+-                                                        //invalid url || invalid url and key.
-+-                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();
-+-                                                    }
-+-                                                } else {
-+-                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();
-+-                                                }
-+-                                            }
-+-                                        });
-+-
-+-                                        negativeButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                alertDialog.dismiss();
-+-                                            }
-+-                                        });
-+-
-+-                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
-+-
-+-                }}else {
-++                    // }
-++
-++                    }else {
-+                     Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();
-+                 }
-+ 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]/shelved.patch
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]/shelved.patch	(date 1621420899668)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]/shelved.patch	(date 1621420899668)
-@@ -0,0 +1,314 @@
-+Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java
-+IDEA additional info:
-+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-+<+>package org.intelehealth.ekalhelpline.activities.homeActivity;\r\n\r\nimport android.app.Dialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ActivityNotFoundException;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.util.Patterns;\r\nimport android.view.LayoutInflater;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.webkit.URLUtil;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.work.ExistingPeriodicWorkPolicy;\r\nimport androidx.work.WorkManager;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.ParsePosition;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.activities.activePatientsActivity.ActivePatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.loginActivity.LoginActivity;\r\nimport org.intelehealth.ekalhelpline.activities.searchPatientActivity.SearchPatientActivity;\r\nimport org.intelehealth.ekalhelpline.activities.settingsActivity.SettingsActivity;\r\nimport org.intelehealth.ekalhelpline.activities.todayPatientActivity.TodayPatientActivity;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.app.IntelehealthApplication;\r\nimport org.intelehealth.ekalhelpline.models.CheckAppUpdateRes;\r\nimport org.intelehealth.ekalhelpline.models.DownloadMindMapRes;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiClient;\r\nimport org.intelehealth.ekalhelpline.networkApiCalls.ApiInterface;\r\nimport org.intelehealth.ekalhelpline.syncModule.SyncUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.DownloadMindMaps;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.Logger;\r\nimport org.intelehealth.ekalhelpline.utilities.NetworkConnection;\r\nimport org.intelehealth.ekalhelpline.utilities.OfflineLogin;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\nimport org.intelehealth.ekalhelpline.widget.materialprogressbar.CustomProgressDialog;\r\nimport io.reactivex.Observable;\r\nimport io.reactivex.android.schedulers.AndroidSchedulers;\r\nimport io.reactivex.disposables.CompositeDisposable;\r\nimport io.reactivex.disposables.Disposable;\r\nimport io.reactivex.observers.DisposableObserver;\r\nimport io.reactivex.observers.DisposableSingleObserver;\r\nimport io.reactivex.schedulers.Schedulers;\r\n\r\n/**\r\n * Home Screen\r\n */\r\n\r\npublic class HomeActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = HomeActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private ProgressDialog mSyncProgressDialog;\r\n    CountDownTimer CDT;\r\n    private boolean hasLicense = false;\r\n    int i = 5;\r\n\r\n    TextView lastSyncTextView;\r\n    TextView lastSyncAgo;\r\n    Button manualSyncButton;\r\n    //IntentFilter filter;\r\n\r\n    SyncUtils syncUtils = new SyncUtils();\r\n    CardView c1, c2, c3, c4, c5, c6;\r\n    private String key = null;\r\n    private String licenseUrl = null;\r\n\r\n    Context context;\r\n    CustomProgressDialog customProgressDialog;\r\n    private String mindmapURL = \"\";\r\n    private DownloadMindMaps mTask;\r\n    ProgressDialog mProgressDialog;\r\n\r\n    private int versionCode = 0;\r\n    private CompositeDisposable disposable = new CompositeDisposable();\r\n    TextView newPatient_textview, findPatients_textview, todaysVisits_textview,\r\n            activeVisits_textview, videoLibrary_textview, help_textview;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        sessionManager = new SessionManager(this);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n\r\n        String language = sessionManager.getAppLanguage();\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n\r\n        setTitle(R.string.title_activity_login);\r\n        context = HomeActivity.this;\r\n        customProgressDialog = new CustomProgressDialog(context);\r\n        /*syncBroadcastReceiver = new SyncBroadcastReceiver();\r\n        filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);*/\r\n\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        checkAppVer();  //auto-update feature.\r\n\r\n        Logger.logD(TAG, \"onCreate: \" + getFilesDir().toString());\r\n        lastSyncTextView = findViewById(R.id.lastsynctextview);\r\n        lastSyncAgo = findViewById(R.id.lastsyncago);\r\n        manualSyncButton = findViewById(R.id.manualsyncbutton);\r\n//        manualSyncButton.setPaintFlags(Paint.UNDERLINE_TEXT_FLAG);\r\n       // c1 = findViewById(R.id.cardview_newpat);\r\n        c2 = findViewById(R.id.cardview_find_patient);\r\n        c3 = findViewById(R.id.cardview_today_patient);\r\n        c4 = findViewById(R.id.cardview_active_patients);\r\n        c5 = findViewById(R.id.cardview_video_libraby);\r\n        c6 = findViewById(R.id.cardview_help_whatsapp);\r\n\r\n        //card textview referrenced to fix bug of localization not working in some cases...\r\n     /*   newPatient_textview = findViewById(R.id.newPatient_textview);\r\n        newPatient_textview.setText(R.string.new_patient);*/\r\n\r\n        findPatients_textview = findViewById(R.id.findPatients_textview);\r\n        findPatients_textview.setText(R.string.find_patient);\r\n\r\n        todaysVisits_textview = findViewById(R.id.todaysVisits_textview);\r\n        todaysVisits_textview.setText(R.string.today_visits);\r\n\r\n        activeVisits_textview = findViewById(R.id.activeVisits_textview);\r\n        activeVisits_textview.setText(R.string.active_visits);\r\n\r\n        videoLibrary_textview = findViewById(R.id.videoLibrary_textview);\r\n        videoLibrary_textview.setText(R.string.video_library);\r\n\r\n        help_textview = findViewById(R.id.help_textview);\r\n        help_textview.setText(R.string.Whatsapp_Help_Cardview);\r\n\r\n        // manualSyncButton.setText(R.string.sync_now);\r\n        manualSyncButton.setText(R.string.refresh);\r\n\r\n        //Help section of watsapp...\r\n        c6.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                String phoneNumberWithCountryCode = \"+917005308163\";\r\n                String message =\r\n                        getString(R.string.hello_my_name_is) + \" \" + sessionManager.getChwname() + \" \" +\r\n                                /*\" from \" + sessionManager.getState() + */getString(R.string.i_need_assistance);\r\n\r\n                startActivity(new Intent(Intent.ACTION_VIEW,\r\n                        Uri.parse(\r\n                                String.format(\"https://api.whatsapp.com/send?phone=%s&text=%s\",\r\n                                        phoneNumberWithCountryCode, message))));\r\n            }\r\n        });\r\n/*\r\n        c1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //Loads the config file values and check for the boolean value of privacy key.\r\n                ConfigUtils configUtils = new ConfigUtils(HomeActivity.this);\r\n                if (configUtils.privacy_notice()) {\r\n                    Intent intent = new Intent(HomeActivity.this, PrivacyNotice_Activity.class);\r\n                    startActivity(intent);\r\n                } else {\r\n                    //Clear HouseHold UUID from Session for new registration\r\n                    sessionManager.setHouseholdUuid(\"\");\r\n\r\n                    Intent intent = new Intent(HomeActivity.this, IdentificationActivity.class);\r\n                    startActivity(intent);\r\n                }\r\n            }\r\n        });\r\n*/\r\n        c2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, SearchPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, TodayPatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(HomeActivity.this, ActivePatientActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        c5.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                videoLibrary();\r\n            }\r\n        });\r\n\r\n\r\n        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n\r\n//        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n////            lastSyncAgo.setText(CalculateAgoTime());\r\n//        }\r\n\r\n        manualSyncButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, context);\r\n\r\n                if (isNetworkConnected()) {\r\n                    Toast.makeText(context, getString(R.string.syncInProgress), Toast.LENGTH_LONG).show();\r\n                } else {\r\n                    Toast.makeText(context, context.getString(R.string.failed_synced), Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                syncUtils.syncForeground(\"home\");\r\n//                if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n//                        && Locale.getDefault().toString().equalsIgnoreCase(\"en\")) {\r\n//                    lastSyncAgo.setText(sessionManager.getLastTimeAgo());\r\n//                }\r\n            }\r\n        });\r\n        if (sessionManager.isFirstTimeLaunched()) {\r\n            mSyncProgressDialog = new ProgressDialog(HomeActivity.this, R.style.AlertDialogStyle); //thats how to add a style!\r\n            mSyncProgressDialog.setTitle(R.string.syncInProgress);\r\n            mSyncProgressDialog.setCancelable(false);\r\n            mSyncProgressDialog.setProgress(i);\r\n\r\n            mSyncProgressDialog.show();\r\n\r\n            syncUtils.initialSync(\"home\");\r\n        } else {\r\n            // if initial setup done then we can directly set the periodic background sync job\r\n            WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n        }\r\n\r\n\r\n        showProgressbar();\r\n    }\r\n\r\n    //function for handling the video library feature...\r\n    private void videoLibrary() {\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            if (obj.has(\"video_library\")) {\r\n                Intent intent = new Intent(Intent.ACTION_VIEW);\r\n                Uri uri = Uri.parse(obj.getString(\"video_library\"));\r\n                intent.setData(uri);\r\n                startActivity(intent);\r\n            } else {\r\n                Toast.makeText(context, \"No config attribute found\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    private void showProgressbar() {\r\n\r\n\r\n// instantiate it within the onCreate method\r\n        mProgressDialog = new ProgressDialog(HomeActivity.this);\r\n        mProgressDialog.setMessage(getString(R.string.download_protocols));\r\n        mProgressDialog.setIndeterminate(true);\r\n        mProgressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\r\n        mProgressDialog.setCancelable(false);\r\n    }\r\n\r\n\r\n    private String CalculateAgoTime() {\r\n        String finalTime = \"\";\r\n\r\n        String syncTime = sessionManager.getLastSyncDateTime();\r\n\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"dd MMM yyyy HH:mm\", Locale.getDefault());\r\n        ParsePosition pos = new ParsePosition(0);\r\n        long then = formatter.parse(syncTime, pos).getTime();\r\n        long now = new Date().getTime();\r\n\r\n        long seconds = (now - then) / 1000;\r\n        long minutes = seconds / 60;\r\n        long hours = minutes / 60;\r\n        long days = hours / 24;\r\n\r\n        String time = \"\";\r\n        long num = 0;\r\n        if (days > 0) {\r\n            num = days;\r\n            time = days + \" \" + context.getString(R.string.day);\r\n        } else if (hours > 0) {\r\n            num = hours;\r\n            time = hours + \" \" + context.getString(R.string.hour);\r\n        } else if (minutes >= 0) {\r\n            num = minutes;\r\n            time = minutes + \" \" + context.getString(R.string.minute);\r\n        }\r\n//      <For Seconds>\r\n//      else {\r\n//            num = seconds;\r\n//            time = seconds + \" second\";\r\n//      }\r\n        if (num > 1) {\r\n            time += context.getString(R.string.s);\r\n        }\r\n        finalTime = time + \" \" + context.getString(R.string.ago);\r\n\r\n        sessionManager.setLastTimeAgo(finalTime);\r\n\r\n        return finalTime;\r\n    }\r\n\r\n    private boolean isNetworkConnected() {\r\n        ConnectivityManager cm = (ConnectivityManager) getSystemService(Context.CONNECTIVITY_SERVICE);\r\n\r\n        return cm.getActiveNetworkInfo() != null && cm.getActiveNetworkInfo().isConnected();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu_home, menu);\r\n        return super.onCreateOptionsMenu(menu);\r\n\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n//            case R.id.syncOption:\r\n//                refreshDatabases();\r\n//                return true;\r\n            case R.id.settingsOption:\r\n                settings();\r\n                return true;\r\n            case R.id.updateProtocolsOption: {\r\n\r\n\r\n                if (NetworkConnection.isOnline(this)) {\r\n\r\n                    if (!sessionManager.getLicenseKey().isEmpty()) {\r\n\r\n                        String licenseUrl = sessionManager.getMindMapServerUrl();\r\n                        String licenseKey = sessionManager.getLicenseKey();\r\n                        getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\", licenseKey);\r\n\r\n                    } else {\r\n//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);\r\n//                    LayoutInflater li = LayoutInflater.from(this);\r\n//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n//                    dialog.setTitle(getString(R.string.enter_license_key))\r\n//                            .setView(promptsView)\r\n//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//\r\n//                                    Dialog d = (Dialog) dialog;\r\n//\r\n//                                    EditText etURL = d.findViewById(R.id.licenseurl);\r\n//                                    EditText etKey = d.findViewById(R.id.licensekey);\r\n//                                    String url = etURL.getText().toString().replace(\" \", \"\");\r\n//                                    String key = etKey.getText().toString().trim();\r\n//\r\n//                                    if (url.isEmpty()) {\r\n//                                        etURL.setError(getResources().getString(R.string.enter_server_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (url.contains(\":\")) {\r\n//                                        etURL.setError(getResources().getString(R.string.invalid_url));\r\n//                                        etURL.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//                                    if (key.isEmpty()) {\r\n//                                        etKey.setError(getResources().getString(R.string.enter_license_key));\r\n//                                        etKey.requestFocus();\r\n//                                        return;\r\n//                                    }\r\n//\r\n//                                    sessionManager.setMindMapServerUrl(url); //trim\r\n//                                    getMindmapDownloadURL(\"https://\" + url + \":3004/\", key);\r\n//\r\n//                                }\r\n//                            })\r\n//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {\r\n//                                @Override\r\n//                                public void onClick(DialogInterface dialog, int which) {\r\n//                                    dialog.dismiss();\r\n//                                }\r\n//                            });\r\n//                    Dialog builderDialog = dialog.show();\r\n//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);\r\n//\r\n//                    // }\r\n                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);\r\n                        LayoutInflater li = LayoutInflater.from(this);\r\n                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);\r\n\r\n                                        dialog.setTitle(getString(R.string.enter_license_key))\r\n                                                .setView(promptsView)\r\n                                                .setPositiveButton(getString(R.string.button_ok), null)\r\n                                                .setNegativeButton(getString(R.string.button_cancel), null);\r\n\r\n                                        AlertDialog alertDialog = dialog.create();\r\n                                        alertDialog.setView(promptsView, 20, 0, 20, 0);\r\n                                        alertDialog.show();\r\n                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...\r\n\r\n                                        // Get the alert dialog buttons reference\r\n                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);\r\n\r\n                                        // Change the alert dialog buttons text and background color\r\n                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n\r\n                                        positiveButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                EditText text = promptsView.findViewById(R.id.licensekey);\r\n                                                EditText url = promptsView.findViewById(R.id.licenseurl);\r\n\r\n                                                url.setError(null);\r\n                                                text.setError(null);\r\n\r\n                                                //If both are not entered...\r\n                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is empty...key is not empty...\r\n                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.enter_server_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url is not empty...key is empty...\r\n                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {\r\n                                                    text.requestFocus();\r\n                                                    text.setError(getResources().getString(R.string.enter_license_key));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If Url has : in it...\r\n                                                if (url.getText().toString().trim().contains(\":\")) {\r\n                                                    url.requestFocus();\r\n                                                    url.setError(getResources().getString(R.string.invalid_url));\r\n                                                    return;\r\n                                                }\r\n\r\n                                                //If url entered is Invalid...\r\n                                                if (!url.getText().toString().trim().isEmpty()) {\r\n                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {\r\n                                                        String url_field = \"https://\" + url.getText().toString() + \":3004/\";\r\n                                                        if (URLUtil.isValidUrl(url_field)) {\r\n                                                            key = text.getText().toString().trim();\r\n                                                            licenseUrl = url.getText().toString().trim();\r\n\r\n                                                            sessionManager.setMindMapServerUrl(licenseUrl);\r\n\r\n                                                            if (keyVerified(key)) {\r\n                                                                getMindmapDownloadURL(\"https://\" + licenseUrl + \":3004/\",key);\r\n                                                                alertDialog.dismiss();\r\n                                                            }\r\n                                                        } else {\r\n                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();\r\n                                                        }\r\n\r\n                                                    } else {\r\n                                                        //invalid url || invalid url and key.\r\n                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();\r\n                                                    }\r\n                                                } else {\r\n                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            }\r\n                                        });\r\n\r\n                                        negativeButton.setOnClickListener(new View.OnClickListener() {\r\n                                            @Override\r\n                                            public void onClick(View v) {\r\n                                                alertDialog.dismiss();\r\n                                            }\r\n                                        });\r\n\r\n                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                }}else {\r\n                    Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n         /*   case R.id.sync:\r\n//                pullDataDAO.pullData(this);\r\n//                pullDataDAO.pushDataApi();\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.sync), getString(R.string.syncInProgress), 1, this);\r\n                boolean isSynced = syncUtils.syncForeground();\r\n//                boolean i = imagesPushDAO.patientProfileImagesPush();\r\n//                boolean o = imagesPushDAO.obsImagesPush();\r\n//                if (isSynced)\r\n//                    AppConstants.notificationUtils.showNotifications_noProgress(getString(R.string.sync_not_available), getString(R.string.please_connect_to_internet), getApplicationContext());\r\n//                else\r\n//                    AppConstants.notificationUtils.showNotifications(getString(R.string.image_upload), getString(R.string.image_upload_failed), 4, this);\r\n                return true;\r\n                */\r\n//            case R.id.backupOption:\r\n//                manageBackup(true, false);  // to backup app data at any time of the day\r\n//                return true;\r\n//\r\n//            case R.id.restoreOption:\r\n//                manageBackup(false, false); // to restore app data if db is empty\r\n//                return true;\r\n\r\n            case R.id.logoutOption:\r\n//                manageBackup(true, false);\r\n\r\n                MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n                alertdialogBuilder.setMessage(R.string.sure_to_logout);\r\n                alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialogInterface, int i) {\r\n                        logout();\r\n                    }\r\n                });\r\n                alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n                AlertDialog alertDialog = alertdialogBuilder.create();\r\n                alertDialog.show();\r\n                Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n                Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * This method starts intent to another activity to change settings\r\n     *\r\n     * @return void\r\n     */\r\n    public void settings() {\r\n        Intent intent = new Intent(this, SettingsActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    /**\r\n     * Logs out the user. It removes user account using AccountManager.\r\n     *\r\n     * @return void\r\n     */\r\n    public void logout() {\r\n\r\n        OfflineLogin.getOfflineLogin().setOfflineLoginStatus(false);\r\n\r\n//        parseLogOut();\r\n\r\n       /* AccountManager manager = AccountManager.get(HomeActivity.this);\r\n        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.GET_ACCOUNTS) != PackageManager.PERMISSION_GRANTED) {\r\n            // TODO: Consider calling\r\n            //    ActivityCompat#requestPermissions\r\n            // here to request the missing permissions, and then overriding\r\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\r\n            //                                          int[] grantResults)\r\n            // to handle the case where the user grants the permission. See the documentation\r\n            // for ActivityCompat#requestPermissions for more details.\r\n            return;\r\n        }*/\r\n     /*   Account[] accountList = manager.getAccountsByType(\"io.intelehealth.openmrs\");\r\n        if (accountList.length > 0) {\r\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                manager.removeAccount(accountList[0], HomeActivity.this, null, null);\r\n            } else {\r\n                manager.removeAccount(accountList[0], null, null); // Legacy implementation\r\n            }\r\n        }\r\n*/\r\n        Intent intent = new Intent(HomeActivity.this, LoginActivity.class);\r\n        intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n        startActivity(intent);\r\n        finish();\r\n\r\n        SyncUtils syncUtils = new SyncUtils();\r\n        syncUtils.syncBackground();\r\n        sessionManager.setReturningUser(false);\r\n        sessionManager.setLogout(true);\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        //IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        //registerReceiver(syncBroadcastReceiver, filter);\r\n        checkAppVer();  //auto-update feature.\r\n//        lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        if (!sessionManager.getLastSyncDateTime().equalsIgnoreCase(\"- - - -\")\r\n                && Locale.getDefault().toString().equals(\"en\")) {\r\n//            lastSyncAgo.setText(CalculateAgoTime());\r\n        }\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        IntentFilter filter = new IntentFilter(AppConstants.SYNC_INTENT_ACTION);\r\n        registerReceiver(syncBroadcastReceiver, filter);\r\n    }\r\n\r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        try {\r\n            unregisterReceiver(syncBroadcastReceiver);\r\n        } catch (IllegalArgumentException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    private boolean keyVerified(String key) {\r\n        //TODO: Verify License Key\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        /*new AlertDialog.Builder(this)\r\n                .setMessage(\"Are you sure you want to EXIT ?\")\r\n                .setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        moveTaskToBack(true);\r\n                        finish();\r\n\r\n                    }\r\n\r\n                })\r\n                .setNegativeButton(\"No\", null)\r\n                .show();\r\n*/\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n\r\n        // AlertDialog.Builder alertdialogBuilder = new AlertDialog.Builder(this, R.style.AlertDialogStyle);\r\n        alertdialogBuilder.setMessage(R.string.sure_to_exit);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                moveTaskToBack(true);\r\n                // finish();\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n\r\n    }\r\n\r\n    private List<Integer> mTempSyncHelperList = new ArrayList<Integer>();\r\n    private BroadcastReceiver syncBroadcastReceiver = new BroadcastReceiver() {\r\n        @Override\r\n        public void onReceive(Context context, Intent intent) {\r\n            Logger.logD(\"syncBroadcastReceiver\", \"onReceive! \" + intent);\r\n\r\n            if (intent != null && intent.hasExtra(AppConstants.SYNC_INTENT_DATA_KEY)) {\r\n                int flagType = intent.getIntExtra(AppConstants.SYNC_INTENT_DATA_KEY, AppConstants.SYNC_FAILED);\r\n                if (sessionManager.isFirstTimeLaunched()) {\r\n                    if (flagType == AppConstants.SYNC_FAILED) {\r\n                        hideSyncProgressBar(false);\r\n                        /*Toast.makeText(context, R.string.failed_synced, Toast.LENGTH_SHORT).show();\r\n                        finish();*/\r\n                        new AlertDialog.Builder(HomeActivity.this)\r\n                                .setMessage(R.string.failed_initial_synced)\r\n                                .setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                                    @Override\r\n                                    public void onClick(DialogInterface dialog, int which) {\r\n                                        finish();\r\n                                    }\r\n\r\n                                }).setCancelable(false)\r\n\r\n                                .show();\r\n                    } else {\r\n                        mTempSyncHelperList.add(flagType);\r\n                        if (mTempSyncHelperList.contains(AppConstants.SYNC_PULL_DATA_DONE)\r\n//                                && mTempSyncHelperList.contains(AppConstants.SYNC_PUSH_DATA_DONE)\r\n                                /*&& mTempSyncHelperList.contains(AppConstants.SYNC_PATIENT_PROFILE_IMAGE_PUSH_DONE)\r\n                                && mTempSyncHelperList.contains(AppConstants.SYNC_OBS_IMAGE_PUSH_DONE)*/) {\r\n                            hideSyncProgressBar(true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lastSyncTextView.setText(getString(R.string.last_synced) + \" \\n\" + sessionManager.getLastSyncDateTime());\r\n        }\r\n    };\r\n\r\n    private void hideSyncProgressBar(boolean isSuccess) {\r\n        if (mTempSyncHelperList != null) mTempSyncHelperList.clear();\r\n        if (mSyncProgressDialog != null && mSyncProgressDialog.isShowing()) {\r\n            mSyncProgressDialog.dismiss();\r\n            if (isSuccess) {\r\n\r\n                sessionManager.setFirstTimeLaunched(false);\r\n                sessionManager.setMigration(true);\r\n                // initial setup/sync done and now we can set the periodic background sync job\r\n                // given some delay after initial sync\r\n                new Handler().postDelayed(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        WorkManager.getInstance().enqueueUniquePeriodicWork(AppConstants.UNIQUE_WORK_NAME, ExistingPeriodicWorkPolicy.KEEP, AppConstants.PERIODIC_WORK_REQUEST);\r\n                    }\r\n                }, 10000);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getMindmapDownloadURL(String url, String key) {\r\n        customProgressDialog.show();\r\n        ApiClient.changeApiBaseUrl(url); //trim\r\n        ApiInterface apiService = ApiClient.createService(ApiInterface.class);\r\n        try {\r\n            Observable<DownloadMindMapRes> resultsObservable = apiService.DOWNLOAD_MIND_MAP_RES_OBSERVABLE(key);\r\n            resultsObservable\r\n                    .subscribeOn(Schedulers.io())\r\n                    .observeOn(AndroidSchedulers.mainThread())\r\n                    .subscribe(new DisposableObserver<DownloadMindMapRes>() {\r\n                        @Override\r\n                        public void onNext(DownloadMindMapRes res) {\r\n                            customProgressDialog.dismiss();\r\n                            if (res.getMessage() != null && res.getMessage().equalsIgnoreCase(\"Success\")) {\r\n\r\n                                Log.e(\"MindMapURL\", \"Successfully get MindMap URL\");\r\n                                mTask = new DownloadMindMaps(context, mProgressDialog);\r\n                                mindmapURL = res.getMindmap().trim();\r\n                                sessionManager.setLicenseKey(key);\r\n                                checkExistingMindMaps();\r\n\r\n                            } else {\r\n                                Toast.makeText(context, getResources().getString(R.string.no_protocols_found), Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onError(Throwable e) {\r\n                            customProgressDialog.dismiss();\r\n                            Toast.makeText(context, getResources().getString(R.string.unable_to_get_proper_response), Toast.LENGTH_SHORT).show();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onComplete() {\r\n\r\n                        }\r\n                    });\r\n        } catch (IllegalArgumentException e) {\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getMessage());\r\n            Log.e(TAG, \"changeApiBaseUrl: \" + e.getStackTrace());\r\n        }\r\n    }\r\n\r\n    private void checkExistingMindMaps() {\r\n\r\n        //Check is there any existing mindmaps are present, if yes then delete.\r\n\r\n        File engines = new File(context.getFilesDir().getAbsolutePath(), \"/Engines\");\r\n        Log.e(TAG, \"Engines folder=\" + engines.exists());\r\n        if (engines.exists()) {\r\n            engines.delete();\r\n        }\r\n        File logo = new File(context.getFilesDir().getAbsolutePath(), \"/logo\");\r\n        Log.e(TAG, \"Logo folder=\" + logo.exists());\r\n        if (logo.exists()) {\r\n            logo.delete();\r\n        }\r\n        File physicalExam = new File(context.getFilesDir().getAbsolutePath() + \"/physExam.json\");\r\n        Log.e(TAG, \"physExam.json=\" + physicalExam.exists());\r\n        if (physicalExam.exists()) {\r\n            physicalExam.delete();\r\n        }\r\n        File familyHistory = new File(context.getFilesDir().getAbsolutePath() + \"/famHist.json\");\r\n        Log.e(TAG, \"famHist.json=\" + familyHistory.exists());\r\n        if (familyHistory.exists()) {\r\n            familyHistory.delete();\r\n        }\r\n        File pastMedicalHistory = new File(context.getFilesDir().getAbsolutePath() + \"/patHist.json\");\r\n        Log.e(TAG, \"patHist.json=\" + pastMedicalHistory.exists());\r\n        if (pastMedicalHistory.exists()) {\r\n            pastMedicalHistory.delete();\r\n        }\r\n        File config = new File(context.getFilesDir().getAbsolutePath() + \"/config.json\");\r\n        Log.e(TAG, \"config.json=\" + config.exists());\r\n        if (config.exists()) {\r\n            config.delete();\r\n        }\r\n\r\n        //Start downloading mindmaps\r\n        mTask.execute(mindmapURL, context.getFilesDir().getAbsolutePath() + \"/mindmaps.zip\");\r\n        Log.e(\"DOWNLOAD\", \"isSTARTED\");\r\n\r\n    }\r\n\r\n    private void checkAppVer() {\r\n\r\n        try {\r\n            PackageInfo pInfo = context.getPackageManager().getPackageInfo(getPackageName(), 0);\r\n            String version = pInfo.versionName;\r\n            versionCode = pInfo.versionCode;\r\n        } catch (PackageManager.NameNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n\r\n        disposable.add((Disposable) AppConstants.apiInterface.checkAppUpdate()\r\n                .subscribeOn(Schedulers.io())\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribeWith(new DisposableSingleObserver<CheckAppUpdateRes>() {\r\n                    @Override\r\n                    public void onSuccess(CheckAppUpdateRes res) {\r\n                        int latestVersionCode = 0;\r\n                        if (!res.getLatestVersionCode().isEmpty()) {\r\n                            latestVersionCode = Integer.parseInt(res.getLatestVersionCode());\r\n                        }\r\n\r\n                        if (latestVersionCode > versionCode) {\r\n                            android.app.AlertDialog.Builder builder;\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this, android.R.style.Theme_Material_Dialog_Alert);\r\n                            } else {\r\n                                builder = new android.app.AlertDialog.Builder(HomeActivity.this);\r\n                            }\r\n\r\n\r\n                            builder.setTitle(getResources().getString(R.string.new_update_available))\r\n                                    .setCancelable(false)\r\n                                    .setMessage(getResources().getString(R.string.update_app_note))\r\n                                    .setPositiveButton(getResources().getString(R.string.update), new DialogInterface.OnClickListener() {\r\n                                        public void onClick(DialogInterface dialog, int which) {\r\n\r\n                                            final String appPackageName = getPackageName(); // getPackageName() from Context or Activity object\r\n                                            try {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"market://details?id=\" + appPackageName)));\r\n                                            } catch (ActivityNotFoundException anfe) {\r\n                                                startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(\"https://play.google.com/store/apps/details?id=\" + appPackageName)));\r\n                                            }\r\n\r\n                                        }\r\n                                    })\r\n\r\n                                    .setIcon(android.R.drawable.ic_dialog_alert)\r\n                                    .setCancelable(false);\r\n\r\n                            Dialog dialog = builder.show();\r\n                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n                                int textViewId = dialog.getContext().getResources().getIdentifier(\"android:id/alertTitle\", null, null);\r\n                                TextView tv = (TextView) dialog.findViewById(textViewId);\r\n                                tv.setTextColor(getResources().getColor(R.color.white));\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        Log.e(\"Error\", \"\" + e);\r\n                    }\r\n                })\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n
-+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-+<+>UTF-8
-+===================================================================
-+--- app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(revision 3dfc6cc3ab4d038979a3b922a72c02dc02e76966)
-++++ app/src/main/java/org/intelehealth/ekalhelpline/activities/homeActivity/HomeActivity.java	(date 1621419913117)
-+@@ -395,159 +395,159 @@
-+ 
-+                 if (NetworkConnection.isOnline(this)) {
-+ 
-+-                    if (!sessionManager.getLicenseKey().isEmpty()) {
-++//                    if (!sessionManager.getLicenseKey().isEmpty()) {
-++//
-++//                        String licenseUrl = sessionManager.getMindMapServerUrl();
-++//                        String licenseKey = sessionManager.getLicenseKey();
-++//                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-++//
-++//                    } else {
-++                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-++                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-++                    LayoutInflater li = LayoutInflater.from(this);
-++                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-++                    dialog.setTitle(getString(R.string.enter_license_key))
-++                            .setView(promptsView)
-++                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++
-++                                    Dialog d = (Dialog) dialog;
-++
-++                                    EditText etURL = d.findViewById(R.id.licenseurl);
-++                                    EditText etKey = d.findViewById(R.id.licensekey);
-++                                    String url = etURL.getText().toString().replace(" ", "");
-++                                    String key = etKey.getText().toString().trim();
-++
-++                                    if (url.isEmpty()) {
-++                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (url.contains(":")) {
-++                                        etURL.setError(getResources().getString(R.string.invalid_url));
-++                                        etURL.requestFocus();
-++                                        return;
-++                                    }
-++                                    if (key.isEmpty()) {
-++                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-++                                        etKey.requestFocus();
-++                                        return;
-++                                    }
-+ 
-+-                        String licenseUrl = sessionManager.getMindMapServerUrl();
-+-                        String licenseKey = sessionManager.getLicenseKey();
-+-                        getMindmapDownloadURL("https://" + licenseUrl + ":3004/", licenseKey);
-++                                    sessionManager.setMindMapServerUrl(url); //trim
-++                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-+ 
-+-                    } else {
-+-//                    MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-//                    // AlertDialog.Builder dialog = new AlertDialog.Builder(this,R.style.AlertDialogStyle);
-+-//                    LayoutInflater li = LayoutInflater.from(this);
-+-//                    View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-//                    dialog.setTitle(getString(R.string.enter_license_key))
-+-//                            .setView(promptsView)
-+-//                            .setPositiveButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-++                                }
-++                            })
-++                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-++                                @Override
-++                                public void onClick(DialogInterface dialog, int which) {
-++                                    dialog.dismiss();
-++                                }
-++                            });
-++                    Dialog builderDialog = dialog.show();
-++                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-++
-++                    // }
-++//                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-++//                        LayoutInflater li = LayoutInflater.from(this);
-++//                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-++//
-++//                                        dialog.setTitle(getString(R.string.enter_license_key))
-++//                                                .setView(promptsView)
-++//                                                .setPositiveButton(getString(R.string.button_ok), null)
-++//                                                .setNegativeButton(getString(R.string.button_cancel), null);
-++//
-++//                                        AlertDialog alertDialog = dialog.create();
-++//                                        alertDialog.setView(promptsView, 20, 0, 20, 0);
-++//                                        alertDialog.show();
-++//                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...
-++//
-++//                                        // Get the alert dialog buttons reference
-++//                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);
-++//                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);
-++//
-++//                                        // Change the alert dialog buttons text and background color
-++//                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-++//                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-++//
-++//                                        positiveButton.setOnClickListener(new View.OnClickListener() {
-++//                                            @Override
-++//                                            public void onClick(View v) {
-++//                                                EditText text = promptsView.findViewById(R.id.licensekey);
-++//                                                EditText url = promptsView.findViewById(R.id.licenseurl);
-+ //
-+-//                                    Dialog d = (Dialog) dialog;
-++//                                                url.setError(null);
-++//                                                text.setError(null);
-+ //
-+-//                                    EditText etURL = d.findViewById(R.id.licenseurl);
-+-//                                    EditText etKey = d.findViewById(R.id.licensekey);
-+-//                                    String url = etURL.getText().toString().replace(" ", "");
-+-//                                    String key = etKey.getText().toString().trim();
-+-//
-+-//                                    if (url.isEmpty()) {
-+-//                                        etURL.setError(getResources().getString(R.string.enter_server_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (url.contains(":")) {
-+-//                                        etURL.setError(getResources().getString(R.string.invalid_url));
-+-//                                        etURL.requestFocus();
-+-//                                        return;
-+-//                                    }
-+-//                                    if (key.isEmpty()) {
-+-//                                        etKey.setError(getResources().getString(R.string.enter_license_key));
-+-//                                        etKey.requestFocus();
-+-//                                        return;
-+-//                                    }
-++//                                                //If both are not entered...
-++//                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-++//                                                    url.requestFocus();
-++//                                                    url.setError(getResources().getString(R.string.enter_server_url));
-++//                                                    text.setError(getResources().getString(R.string.enter_license_key));
-++//                                                    return;
-++//                                                }
-++//
-++//                                                //If Url is empty...key is not empty...
-++//                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {
-++//                                                    url.requestFocus();
-++//                                                    url.setError(getResources().getString(R.string.enter_server_url));
-++//                                                    return;
-++//                                                }
-++//
-++//                                                //If Url is not empty...key is empty...
-++//                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-++//                                                    text.requestFocus();
-++//                                                    text.setError(getResources().getString(R.string.enter_license_key));
-++//                                                    return;
-++//                                                }
-+ //
-+-//                                    sessionManager.setMindMapServerUrl(url); //trim
-+-//                                    getMindmapDownloadURL("https://" + url + ":3004/", key);
-++//                                                //If Url has : in it...
-++//                                                if (url.getText().toString().trim().contains(":")) {
-++//                                                    url.requestFocus();
-++//                                                    url.setError(getResources().getString(R.string.invalid_url));
-++//                                                    return;
-++//                                                }
-+ //
-+-//                                }
-+-//                            })
-+-//                            .setNegativeButton(getString(R.string.button_cancel), new DialogInterface.OnClickListener() {
-+-//                                @Override
-+-//                                public void onClick(DialogInterface dialog, int which) {
-+-//                                    dialog.dismiss();
-+-//                                }
-+-//                            });
-+-//                    Dialog builderDialog = dialog.show();
-+-//                    IntelehealthApplication.setAlertDialogCustomTheme(this, builderDialog);
-++//                                                //If url entered is Invalid...
-++//                                                if (!url.getText().toString().trim().isEmpty()) {
-++//                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {
-++//                                                        String url_field = "https://" + url.getText().toString() + ":3004/";
-++//                                                        if (URLUtil.isValidUrl(url_field)) {
-++//                                                            key = text.getText().toString().trim();
-++//                                                            licenseUrl = url.getText().toString().trim();
-++//
-++//                                                            sessionManager.setMindMapServerUrl(licenseUrl);
-++//
-++//                                                            if (keyVerified(key)) {
-++//                                                                getMindmapDownloadURL("https://" + licenseUrl + ":3004/",key);
-++//                                                                alertDialog.dismiss();
-++//                                                            }
-++//                                                        } else {
-++//                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();
-++//                                                        }
-++//
-++//                                                    } else {
-++//                                                        //invalid url || invalid url and key.
-++//                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();
-++//                                                    }
-++//                                                } else {
-++//                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();
-++//                                                }
-++//                                            }
-++//                                        });
-++//
-++//                                        negativeButton.setOnClickListener(new View.OnClickListener() {
-++//                                            @Override
-++//                                            public void onClick(View v) {
-++//                                                alertDialog.dismiss();
-++//                                            }
-++//                                        });
-+ //
-+-//                    // }
-+-                        MaterialAlertDialogBuilder dialog = new MaterialAlertDialogBuilder(this);
-+-                        LayoutInflater li = LayoutInflater.from(this);
-+-                        View promptsView = li.inflate(R.layout.dialog_mindmap_cred, null);
-+-
-+-                                        dialog.setTitle(getString(R.string.enter_license_key))
-+-                                                .setView(promptsView)
-+-                                                .setPositiveButton(getString(R.string.button_ok), null)
-+-                                                .setNegativeButton(getString(R.string.button_cancel), null);
-+-
-+-                                        AlertDialog alertDialog = dialog.create();
-+-                                        alertDialog.setView(promptsView, 20, 0, 20, 0);
-+-                                        alertDialog.show();
-+-                                        alertDialog.setCanceledOnTouchOutside(false); //dialog wont close when clicked outside...
-+-
-+-                                        // Get the alert dialog buttons reference
-+-                                        Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);
-+-                                        Button negativeButton = alertDialog.getButton(AlertDialog.BUTTON_NEGATIVE);
-+-
-+-                                        // Change the alert dialog buttons text and background color
-+-                                        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-                                        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));
-+-
-+-                                        positiveButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                EditText text = promptsView.findViewById(R.id.licensekey);
-+-                                                EditText url = promptsView.findViewById(R.id.licenseurl);
-+-
-+-                                                url.setError(null);
-+-                                                text.setError(null);
-+-
-+-                                                //If both are not entered...
-+-                                                if (url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is empty...key is not empty...
-+-                                                if (url.getText().toString().trim().isEmpty() && !text.getText().toString().trim().isEmpty()) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.enter_server_url));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url is not empty...key is empty...
-+-                                                if (!url.getText().toString().trim().isEmpty() && text.getText().toString().trim().isEmpty()) {
-+-                                                    text.requestFocus();
-+-                                                    text.setError(getResources().getString(R.string.enter_license_key));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If Url has : in it...
-+-                                                if (url.getText().toString().trim().contains(":")) {
-+-                                                    url.requestFocus();
-+-                                                    url.setError(getResources().getString(R.string.invalid_url));
-+-                                                    return;
-+-                                                }
-+-
-+-                                                //If url entered is Invalid...
-+-                                                if (!url.getText().toString().trim().isEmpty()) {
-+-                                                    if (Patterns.WEB_URL.matcher(url.getText().toString().trim()).matches()) {
-+-                                                        String url_field = "https://" + url.getText().toString() + ":3004/";
-+-                                                        if (URLUtil.isValidUrl(url_field)) {
-+-                                                            key = text.getText().toString().trim();
-+-                                                            licenseUrl = url.getText().toString().trim();
-+-
-+-                                                            sessionManager.setMindMapServerUrl(licenseUrl);
-+-
-+-                                                            if (keyVerified(key)) {
-+-                                                                getMindmapDownloadURL("https://" + licenseUrl + ":3004/",key);
-+-                                                                alertDialog.dismiss();
-+-                                                            }
-+-                                                        } else {
-+-                                                            Toast.makeText(HomeActivity.this, getString(R.string.url_invalid), Toast.LENGTH_SHORT).show();
-+-                                                        }
-++//                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
-+ 
-+-                                                    } else {
-+-                                                        //invalid url || invalid url and key.
-+-                                                        Toast.makeText(HomeActivity.this, R.string.invalid_url, Toast.LENGTH_SHORT).show();
-+-                                                    }
-+-                                                } else {
-+-                                                    Toast.makeText(HomeActivity.this, R.string.please_enter_url_and_key, Toast.LENGTH_SHORT).show();
-+-                                                }
-+-                                            }
-+-                                        });
-+-
-+-                                        negativeButton.setOnClickListener(new View.OnClickListener() {
-+-                                            @Override
-+-                                            public void onClick(View v) {
-+-                                                alertDialog.dismiss();
-+-                                            }
-+-                                        });
-+-
-+-                        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
-+-
-+-                }}else {
-++                }else {
-+                     Toast.makeText(context, getString(R.string.mindmap_internect_connection), Toast.LENGTH_SHORT).show();
-+                 }
-+ 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02__Default_Changelist_.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02__Default_Changelist_.xml	(date 1621420940006)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02__Default_Changelist_.xml	(date 1621420940006)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_19-05-2021_16_02_[Default_Changelist]" date="1621420338327" recycled="false" toDelete="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_02_[Default_Changelist]/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19-05-2021 16:02 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55__Default_Changelist_1.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55__Default_Changelist_1.xml	(date 1621420940084)
-+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55__Default_Changelist_1.xml	(date 1621420940084)
-@@ -0,0 +1,4 @@
-+<changelist name="Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]1" date="1621420001456" recycled="false" toDelete="true">
-+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_15_55_[Default_Changelist]1/shelved.patch" />
-+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19-05-2021 15:55 [Default Changelist]" />
-+</changelist>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_20-07-2021_10_45_[Default_Changelist]" date="1626758142036" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 20-07-2021 10:45 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_45_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,1429 +0,0 @@
-Index: webrtc/build/intermediates/packaged_res/debug/xml/preferences.xml
-===================================================================
---- webrtc/build/intermediates/packaged_res/debug/xml/preferences.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/packaged_res/debug/xml/preferences.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-@@ -1,236 +0,0 @@
--<?xml version="1.0" encoding="utf-8"?>
--<PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android">
--    <PreferenceCategory
--        android:key="@string/pref_videosettings_key"
--        android:title="@string/pref_videosettings_title">
--
--        <CheckBoxPreference
--            android:key="@string/pref_videocall_key"
--            android:title="@string/pref_videocall_title"
--            android:dialogTitle="@string/pref_videocall_dlg"
--            android:defaultValue="@string/pref_videocall_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_screencapture_key"
--            android:title="@string/pref_screencapture_title"
--            android:defaultValue="@string/pref_screencapture_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_camera2_key"
--            android:title="@string/pref_camera2_title"
--            android:defaultValue="@string/pref_camera2_default" />
--
--        <ListPreference
--            android:key="@string/pref_resolution_key"
--            android:title="@string/pref_resolution_title"
--            android:defaultValue="@string/pref_resolution_default"
--            android:dialogTitle="@string/pref_resolution_dlg"
--            android:entries="@array/videoResolutions"
--            android:entryValues="@array/videoResolutionsValues" />
--
--        <ListPreference
--            android:key="@string/pref_fps_key"
--            android:title="@string/pref_fps_title"
--            android:defaultValue="@string/pref_fps_default"
--            android:dialogTitle="@string/pref_fps_dlg"
--            android:entries="@array/cameraFps"
--            android:entryValues="@array/cameraFps" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_capturequalityslider_key"
--            android:title="@string/pref_capturequalityslider_title"
--            android:dialogTitle="@string/pref_capturequalityslider_dlg"
--            android:defaultValue="@string/pref_capturequalityslider_default" />
--
--        <ListPreference
--            android:key="@string/pref_maxvideobitrate_key"
--            android:title="@string/pref_maxvideobitrate_title"
--            android:defaultValue="@string/pref_maxvideobitrate_default"
--            android:dialogTitle="@string/pref_maxvideobitrate_dlg"
--            android:entries="@array/startBitrate"
--            android:entryValues="@array/startBitrate" />
--
--        <EditTextPreference
--            android:key="@string/pref_maxvideobitratevalue_key"
--            android:title="@string/pref_maxvideobitratevalue_title"
--            android:inputType="number"
--            android:defaultValue="@string/pref_maxvideobitratevalue_default"
--            android:dialogTitle="@string/pref_maxvideobitratevalue_dlg" />
--
--        <ListPreference
--            android:key="@string/pref_videocodec_key"
--            android:title="@string/pref_videocodec_title"
--            android:defaultValue="@string/pref_videocodec_default"
--            android:dialogTitle="@string/pref_videocodec_dlg"
--            android:entries="@array/videoCodecs"
--            android:entryValues="@array/videoCodecs" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_hwcodec_key"
--            android:title="@string/pref_hwcodec_title"
--            android:dialogTitle="@string/pref_hwcodec_dlg"
--            android:defaultValue="@string/pref_hwcodec_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_capturetotexture_key"
--            android:title="@string/pref_capturetotexture_title"
--            android:dialogTitle="@string/pref_capturetotexture_dlg"
--            android:defaultValue="@string/pref_capturetotexture_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_flexfec_key"
--            android:title="@string/pref_flexfec_title"
--            android:dialogTitle="@string/pref_flexfec_dlg"
--            android:defaultValue="@string/pref_flexfec_default" />
--    </PreferenceCategory>
--
--    <PreferenceCategory
--        android:key="@string/pref_audiosettings_key"
--        android:title="@string/pref_audiosettings_title">
--
--        <ListPreference
--            android:key="@string/pref_startaudiobitrate_key"
--            android:title="@string/pref_startaudiobitrate_title"
--            android:defaultValue="@string/pref_startaudiobitrate_default"
--            android:dialogTitle="@string/pref_startaudiobitrate_dlg"
--            android:entries="@array/startBitrate"
--            android:entryValues="@array/startBitrate" />
--
--        <EditTextPreference
--            android:key="@string/pref_startaudiobitratevalue_key"
--            android:title="@string/pref_startaudiobitratevalue_title"
--            android:inputType="number"
--            android:defaultValue="@string/pref_startaudiobitratevalue_default"
--            android:dialogTitle="@string/pref_startaudiobitratevalue_dlg" />
--
--        <ListPreference
--            android:key="@string/pref_audiocodec_key"
--            android:title="@string/pref_audiocodec_title"
--            android:defaultValue="@string/pref_audiocodec_default"
--            android:dialogTitle="@string/pref_audiocodec_dlg"
--            android:entries="@array/audioCodecs"
--            android:entryValues="@array/audioCodecs" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_noaudioprocessing_key"
--            android:title="@string/pref_noaudioprocessing_title"
--            android:dialogTitle="@string/pref_noaudioprocessing_dlg"
--            android:defaultValue="@string/pref_noaudioprocessing_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_aecdump_key"
--            android:title="@string/pref_aecdump_title"
--            android:dialogTitle="@string/pref_aecdump_dlg"
--            android:defaultValue="@string/pref_aecdump_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_opensles_key"
--            android:title="@string/pref_opensles_title"
--            android:dialogTitle="@string/pref_opensles_dlg"
--            android:defaultValue="@string/pref_opensles_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_disable_built_in_aec_key"
--            android:title="@string/pref_disable_built_in_aec_title"
--            android:dialogTitle="@string/pref_disable_built_in_aec_dlg"
--            android:defaultValue="@string/pref_disable_built_in_aec_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_disable_built_in_agc_key"
--            android:title="@string/pref_disable_built_in_agc_title"
--            android:dialogTitle="@string/pref_disable_built_in_agc_dlg"
--            android:defaultValue="@string/pref_disable_built_in_agc_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_disable_built_in_ns_key"
--            android:title="@string/pref_disable_built_in_ns_title"
--            android:dialogTitle="@string/pref_disable_built_in_ns_dlg"
--            android:defaultValue="@string/pref_disable_built_in_ns_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_enable_level_control_key"
--            android:title="@string/pref_enable_level_control_title"
--            android:defaultValue="@string/pref_enable_level_control_default" />
--
--        <ListPreference
--            android:key="@string/pref_speakerphone_key"
--            android:title="@string/pref_speakerphone_title"
--            android:defaultValue="@string/pref_speakerphone_default"
--            android:dialogTitle="@string/pref_speakerphone_dlg"
--            android:entries="@array/speakerphone"
--            android:entryValues="@array/speakerphoneValues" />
--    </PreferenceCategory>
--
--    <PreferenceCategory
--        android:key="@string/pref_datasettings_key"
--        android:title="@string/pref_datasettings_title">
--
--        <CheckBoxPreference
--            android:key="@string/pref_enable_datachannel_key"
--            android:title="@string/pref_enable_datachannel_title"
--            android:defaultValue="@string/pref_enable_datachannel_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_ordered_key"
--            android:title="@string/pref_ordered_title"
--            android:defaultValue="@string/pref_ordered_default" />
--
--        <EditTextPreference
--            android:key="@string/pref_data_protocol_key"
--            android:title="@string/pref_data_protocol_title"
--            android:inputType="text"
--            android:defaultValue="@string/pref_data_protocol_default"
--            android:dialogTitle="@string/pref_data_protocol_dlg" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_negotiated_key"
--            android:title="@string/pref_negotiated_title"
--            android:defaultValue="@string/pref_negotiated_default" />
--
--        <EditTextPreference
--            android:key="@string/pref_max_retransmit_time_ms_key"
--            android:title="@string/pref_max_retransmit_time_ms_title"
--            android:inputType="number"
--            android:defaultValue="@string/pref_max_retransmit_time_ms_default"
--            android:dialogTitle="@string/pref_max_retransmit_time_ms_dlg" />
--
--        <EditTextPreference
--            android:key="@string/pref_max_retransmits_key"
--            android:title="@string/pref_max_retransmits_title"
--            android:inputType="number"
--            android:defaultValue="@string/pref_max_retransmits_default"
--            android:dialogTitle="@string/pref_max_retransmits_dlg" />
--
--        <EditTextPreference
--            android:key="@string/pref_data_id_key"
--            android:title="@string/pref_data_id_title"
--            android:inputType="number"
--            android:defaultValue="@string/pref_data_id_default"
--            android:dialogTitle="@string/pref_data_id_dlg" />
--    </PreferenceCategory>
--
--    <PreferenceCategory
--        android:key="@string/pref_miscsettings_key"
--        android:title="@string/pref_miscsettings_title">
--
--        <EditTextPreference
--            android:key="@string/pref_room_server_url_key"
--            android:title="@string/pref_room_server_url_title"
--            android:inputType="text"
--            android:defaultValue="@string/pref_room_server_url_default"
--            android:dialogTitle="@string/pref_room_server_url_dlg" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_displayhud_key"
--            android:title="@string/pref_displayhud_title"
--            android:dialogTitle="@string/pref_displayhud_dlg"
--           android:defaultValue="@string/pref_displayhud_default" />
--
--        <CheckBoxPreference
--            android:key="@string/pref_tracing_key"
--            android:title="@string/pref_tracing_title"
--            android:dialogTitle="@string/pref_tracing_dlg"
--           android:defaultValue="@string/pref_tracing_default" />
--    </PreferenceCategory>
--
--</PreferenceScreen>
-Index: webrtc/build/intermediates/packaged_res/debug/drawable/ic_launcher_foreground.xml
-===================================================================
---- webrtc/build/intermediates/packaged_res/debug/drawable/ic_launcher_foreground.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/packaged_res/debug/drawable/ic_launcher_foreground.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-@@ -1,15 +0,0 @@
--<vector xmlns:android="http://schemas.android.com/apk/res/android"
--    android:width="108dp"
--    android:height="108dp"
--    android:viewportWidth="108"
--    android:viewportHeight="108"
--    android:tint="#FFFFFF">
--  <group android:scaleX="2.1141"
--      android:scaleY="2.1141"
--      android:translateX="28.6308"
--      android:translateY="28.6308">
--    <path
--        android:fillColor="@android:color/white"
--        android:pathData="M17,10.5V7c0,-0.55 -0.45,-1 -1,-1H4c-0.55,0 -1,0.45 -1,1v10c0,0.55 0.45,1 1,1h12c0.55,0 1,-0.45 1,-1v-3.5l4,4v-11l-4,4zM14,13h-3v3H9v-3H6v-2h3V8h2v3h3v2z"/>
--  </group>
--</vector>
-Index: webrtc/build/intermediates/packaged_res/debug/drawable/disconnect.xml
-===================================================================
---- webrtc/build/intermediates/packaged_res/debug/drawable/disconnect.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/packaged_res/debug/drawable/disconnect.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-@@ -1,9 +0,0 @@
--<vector xmlns:android="http://schemas.android.com/apk/res/android"
--        android:width="24dp"
--        android:height="24dp"
--        android:viewportWidth="24.0"
--        android:viewportHeight="24.0">
--    <path
--        android:fillColor="#d50000"
--        android:pathData="M12,9c-1.6,0 -3.15,0.25 -4.6,0.72v3.1c0,0.39 -0.23,0.74 -0.56,0.9 -0.98,0.49 -1.87,1.12 -2.66,1.85 -0.18,0.18 -0.43,0.28 -0.7,0.28 -0.28,0 -0.53,-0.11 -0.71,-0.29L0.29,13.08c-0.18,-0.17 -0.29,-0.42 -0.29,-0.7 0,-0.28 0.11,-0.53 0.29,-0.71C3.34,8.78 7.46,7 12,7s8.66,1.78 11.71,4.67c0.18,0.18 0.29,0.43 0.29,0.71 0,0.28 -0.11,0.53 -0.29,0.71l-2.48,2.48c-0.18,0.18 -0.43,0.29 -0.71,0.29 -0.27,0 -0.52,-0.11 -0.7,-0.28 -0.79,-0.74 -1.69,-1.36 -2.67,-1.85 -0.33,-0.16 -0.56,-0.5 -0.56,-0.9v-3.1C15.15,9.25 13.6,9 12,9z"/>
--</vector>
-Index: webrtc/build/intermediates/packaged_res/debug/drawable/ic_baseline_collections_24.xml
-===================================================================
---- webrtc/build/intermediates/packaged_res/debug/drawable/ic_baseline_collections_24.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/packaged_res/debug/drawable/ic_baseline_collections_24.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-@@ -1,5 +0,0 @@
--<vector android:height="24dp" android:tint="#FFFFFF"
--    android:viewportHeight="24" android:viewportWidth="24"
--    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
--    <path android:fillColor="@android:color/white" android:pathData="M22,16L22,4c0,-1.1 -0.9,-2 -2,-2L8,2c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h12c1.1,0 2,-0.9 2,-2zM11,12l2.03,2.71L16,11l4,5L8,16l3,-4zM2,6v14c0,1.1 0.9,2 2,2h14v-2L4,20L4,6L2,6z"/>
--</vector>
-Index: webrtc/build/intermediates/packaged_res/debug/drawable/call.xml
-===================================================================
---- webrtc/build/intermediates/packaged_res/debug/drawable/call.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/packaged_res/debug/drawable/call.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-@@ -1,9 +0,0 @@
--<vector xmlns:android="http://schemas.android.com/apk/res/android"
--        android:width="24dp"
--        android:height="24dp"
--        android:viewportWidth="24.0"
--        android:viewportHeight="24.0">
--    <path
--        android:fillColor="#3F51B5"
--        android:pathData="M6.62,10.79c1.44,2.83 3.76,5.14 6.59,6.59l2.2,-2.2c0.27,-0.27 0.67,-0.36 1.02,-0.24 1.12,0.37 2.33,0.57 3.57,0.57 0.55,0 1,0.45 1,1V20c0,0.55 -0.45,1 -1,1 -9.39,0 -17,-7.61 -17,-17 0,-0.55 0.45,-1 1,-1h3.5c0.55,0 1,0.45 1,1 0,1.25 0.2,2.45 0.57,3.57 0.11,0.35 0.03,0.74 -0.25,1.02l-2.2,2.2z"/>
--</vector>
-Index: webrtc/build/outputs/logs/manifest-merger-debug-report.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>-- Merging decision tree log ---\r\nmanifest\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\n\tpackage\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:4:5-38\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\tandroid:versionName\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\txmlns:tools\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:3:5-51\r\n\tandroid:versionCode\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:1-64:12\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\txmlns:android\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:2:11-69\r\nuses-feature#android.hardware.camera\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:6:5-60\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:6:19-57\r\nuses-feature#android.hardware.camera.autofocus\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:7:5-70\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:7:19-67\r\nuses-feature#0x00020000\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:8:5-10:35\r\n\tandroid:glEsVersion\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:9:9-41\r\n\tandroid:required\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:10:9-32\r\nuses-permission#android.permission.CAMERA\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:12:5-65\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:12:22-62\r\nuses-permission#android.permission.CHANGE_NETWORK_STATE\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:13:5-79\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:13:22-76\r\nuses-permission#android.permission.MODIFY_AUDIO_SETTINGS\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:14:5-80\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:14:22-77\r\nuses-permission#android.permission.RECORD_AUDIO\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:15:5-71\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:15:22-68\r\nuses-permission#android.permission.INTERNET\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:16:5-67\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:16:22-64\r\nuses-permission#android.permission.WRITE_EXTERNAL_STORAGE\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:17:5-81\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:17:22-78\r\nuses-permission#android.permission.ACCESS_NETWORK_STATE\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:18:5-79\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:18:22-76\r\nuses-permission#android.permission.BLUETOOTH\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:19:5-68\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:19:22-65\r\napplication\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:21:5-62:19\r\n\tandroid:supportsRtl\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:26:9-35\r\n\tandroid:label\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:24:9-41\r\n\ttools:ignore\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:28:9-49\r\n\tandroid:roundIcon\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:25:9-54\r\n\tandroid:icon\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:23:9-43\r\n\tandroid:allowBackup\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:22:9-35\r\n\tandroid:theme\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:27:9-40\r\nactivity#org.intelehealth.apprtc.ChatActivity\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:30:9-33:63\r\n\tandroid:screenOrientation\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:32:13-49\r\n\tandroid:windowSoftInputMode\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:33:13-60\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:31:13-64\r\nactivity#org.intelehealth.apprtc.CompleteActivity\r\nADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:57:9-61:59\r\n\tandroid:screenOrientation\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:60:13-49\r\n\tandroid:label\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:59:13-60\r\n\tandroid:theme\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:61:13-56\r\n\tandroid:name\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:58:13-68\r\nuses-sdk\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml reason: use-sdk injection requested\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\nINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\tandroid:targetSdkVersion\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\tandroid:minSdkVersion\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tADDED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n\t\tINJECTED from D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/outputs/logs/manifest-merger-debug-report.txt	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/outputs/logs/manifest-merger-debug-report.txt	(date 1626758057932)
-@@ -1,119 +1,117 @@
- -- Merging decision tree log ---
- manifest
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
- 	package
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:4:5-38
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:4:5-38
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 	android:versionName
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 	xmlns:tools
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:3:5-51
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:3:5-51
- 	android:versionCode
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-64:12
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:1-62:12
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 	xmlns:android
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:11-69
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:2:11-69
- uses-feature#android.hardware.camera
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:5-60
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:5-60
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:19-57
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:19-57
- uses-feature#android.hardware.camera.autofocus
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:5-70
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:5-70
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:19-67
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:19-67
- uses-feature#0x00020000
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:8:5-10:35
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:8:5-10:35
- 	android:glEsVersion
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:9:9-41
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:9:9-41
- 	android:required
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:10:9-32
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:10:9-32
- uses-permission#android.permission.CAMERA
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:5-65
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:5-65
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:22-62
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:22-62
- uses-permission#android.permission.CHANGE_NETWORK_STATE
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:5-79
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:5-79
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:22-76
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:22-76
- uses-permission#android.permission.MODIFY_AUDIO_SETTINGS
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:5-80
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:5-80
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:22-77
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:22-77
- uses-permission#android.permission.RECORD_AUDIO
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:5-71
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:5-71
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:22-68
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:22-68
- uses-permission#android.permission.INTERNET
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:5-67
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:5-67
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:22-64
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:22-64
- uses-permission#android.permission.WRITE_EXTERNAL_STORAGE
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:5-81
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:5-81
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:22-78
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:22-78
- uses-permission#android.permission.ACCESS_NETWORK_STATE
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:5-79
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:5-79
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:22-76
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:22-76
- uses-permission#android.permission.BLUETOOTH
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:5-68
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:5-68
-+	android:name
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:22-65
-+uses-permission#android.permission.READ_PHONE_STATE
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:20:5-75
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:22-65
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:20:22-72
- application
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:21:5-62:19
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:22:5-60:19
- 	android:supportsRtl
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:26:9-35
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:25:9-35
- 	android:label
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:24:9-41
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:24:9-41
- 	tools:ignore
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:28:9-49
--	android:roundIcon
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:25:9-54
--	android:icon
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:23:9-43
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:27:9-49
- 	android:allowBackup
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:22:9-35
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:23:9-35
- 	android:theme
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:27:9-40
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:26:9-40
- activity#org.intelehealth.apprtc.ChatActivity
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:30:9-33:63
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:29:9-32:63
- 	android:screenOrientation
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:32:13-49
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:31:13-49
- 	android:windowSoftInputMode
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:33:13-60
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:32:13-60
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:31:13-64
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:30:13-64
- activity#org.intelehealth.apprtc.CompleteActivity
--ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:57:9-61:59
-+ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:56:9-59:59
- 	android:screenOrientation
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:60:13-49
--	android:label
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:59:13-60
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:58:13-49
- 	android:theme
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:61:13-56
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:59:13-56
- 	android:name
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:58:13-68
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:57:13-68
- uses-sdk
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml reason: use-sdk injection requested
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml reason: use-sdk injection requested
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 	android:targetSdkVersion
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 	android:minSdkVersion
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		ADDED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
--		INJECTED from D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		ADDED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+		INJECTED from C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-Index: webrtc/build/intermediates/local_only_symbol_list/debug/R-def.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>R_DEF: Internal format may change without notice\r\nlocal\r\narray audioCodecs\r\narray cameraFps\r\narray roomListContextMenu\r\narray speakerphone\r\narray speakerphoneValues\r\narray startBitrate\r\narray videoCodecs\r\narray videoResolutions\r\narray videoResolutionsValues\r\ncolor black_overlay\r\ncolor blue_1\r\ncolor c1\r\ncolor c11\r\ncolor c1_dark\r\ncolor c1_transaprent\r\ncolor c1_transaprent_1\r\ncolor c2\r\ncolor c3\r\ncolor c4\r\ncolor c5\r\ncolor c6\r\ncolor c7\r\ncolor center_color\r\ncolor center_color_1\r\ncolor cmnBgColor\r\ncolor cmnBgColor_1\r\ncolor colorAccent\r\ncolor colorAccent_1\r\ncolor colorBlackTransparent\r\ncolor colorBlackTransparent_0\r\ncolor colorBlackTransparent_0_0\r\ncolor colorBlackTransparent_0_0_0\r\ncolor colorBlackTransparent_1\r\ncolor colorBlackTransparent_1_1\r\ncolor colorBlackTransparent_2\r\ncolor colorCardBg\r\ncolor colorCardBg_1\r\ncolor colorGreen\r\ncolor colorGreenTrans\r\ncolor colorGreen_1\r\ncolor colorGreen_2\r\ncolor colorPrimary\r\ncolor colorPrimaryDark\r\ncolor colorWhiteTransparent\r\ncolor colorYellow\r\ncolor colorYellowTrans\r\ncolor colorYellow_1\r\ncolor colorYellow_2\r\ncolor colorYellow_2_trans\r\ncolor darkYellow0\r\ncolor darkYellow1\r\ncolor darkYellow2\r\ncolor darkYellow3\r\ncolor darkYellow3_trans\r\ncolor dark_bg_end\r\ncolor dark_bg_start\r\ncolor deepBlue0\r\ncolor deepBlue1\r\ncolor deepBlue2\r\ncolor deepBlue3\r\ncolor end_color\r\ncolor end_color_1\r\ncolor end_color_11\r\ncolor gray_0\r\ncolor gray_0_0\r\ncolor gray_0_trans\r\ncolor gray_1\r\ncolor gray_2\r\ncolor gray_3\r\ncolor gray_3_trans\r\ncolor gray_4\r\ncolor gray_4_1\r\ncolor gray_4_trans\r\ncolor gray_5\r\ncolor gray_5_trans\r\ncolor gray_6\r\ncolor gray_6_trans\r\ncolor gray_7\r\ncolor gray_center_trans\r\ncolor gray_end_trans\r\ncolor gray_start_trans\r\ncolor green0\r\ncolor green1\r\ncolor green2\r\ncolor green3\r\ncolor green_vectr\r\ncolor ic_launcher_background\r\ncolor ios_bg\r\ncolor lightGreen0\r\ncolor lightGreen1\r\ncolor lightGreen2\r\ncolor lightGreen3\r\ncolor orange0\r\ncolor orange1\r\ncolor orange2\r\ncolor orange3\r\ncolor pink0\r\ncolor pink1\r\ncolor pink2\r\ncolor pink3\r\ncolor red\r\ncolor red0\r\ncolor red1\r\ncolor red2\r\ncolor red3\r\ncolor red3_transa\r\ncolor red_1\r\ncolor s0\r\ncolor s00\r\ncolor s1\r\ncolor s2\r\ncolor s3\r\ncolor start_color\r\ncolor start_color_1\r\ncolor v2_green\r\ncolor violet0\r\ncolor violet1\r\ncolor violet2\r\ncolor violet3\r\ncolor white\r\ncolor yellow\r\ndimen fab_margin\r\ndrawable call\r\ndrawable chat_left_bg\r\ndrawable chat_right_bg\r\ndrawable disconnect\r\ndrawable ic_baseline_call_24\r\ndrawable ic_baseline_call_24_white\r\ndrawable ic_baseline_chat_bubble_outline_24\r\ndrawable ic_baseline_collections_24\r\ndrawable ic_baseline_flip_camera_ios_24\r\ndrawable ic_baseline_lens_24_gray\r\ndrawable ic_baseline_lens_24_green\r\ndrawable ic_baseline_lens_24_red\r\ndrawable ic_baseline_lens_24_white\r\ndrawable ic_baseline_mic_24\r\ndrawable ic_baseline_mic_none_24_blue\r\ndrawable ic_baseline_mic_off_24\r\ndrawable ic_baseline_photo_camera_24_blue\r\ndrawable ic_baseline_send_24_white\r\ndrawable ic_baseline_videocam_24\r\ndrawable ic_baseline_videocam_off_24\r\ndrawable ic_launcher_foreground\r\ndrawable message_icon\r\ndrawable round_corner_16_blue_light\r\ndrawable round_corner_16_gray_light\r\ndrawable rounded_bg\r\nid audio_imv\r\nid audio_rec_imv\r\nid call_end_imv\r\nid caller_name_tv\r\nid calling_hints_tv\r\nid calling_layout\r\nid camera_imv\r\nid centerImage\r\nid chats_rcv\r\nid empty_tv\r\nid empty_view\r\nid flip_imv\r\nid footer_layout\r\nid in_call_accept_imv\r\nid in_call_reject_imv\r\nid incoming_surface_view\r\nid incoming_surface_view_frame\r\nid loading_layout\r\nid name_tv\r\nid progressBar\r\nid ripple_background_content\r\nid room_id_etc\r\nid self_surface_view\r\nid self_surface_view_frame\r\nid send_imv\r\nid status_tv\r\nid text_etv\r\nid text_tv\r\nid time_tv\r\nid video_call_menu\r\nid video_imv\r\nlayout activity_chat\r\nlayout activity_launch\r\nlayout activity_sample_peer_connection\r\nlayout left_chat_layout\r\nlayout right_chat_layout\r\nmenu chat_menu\r\nstring action_loopback\r\nstring action_settings\r\nstring add_favorite_description\r\nstring app_name\r\nstring audio_off_lbl\r\nstring audio_on_lbl\r\nstring audio_on_off_button\r\nstring call_end_aler_txt\r\nstring call_end_button\r\nstring call_end_lbl\r\nstring camera2_texture_only_error\r\nstring capture_format_change_text\r\nstring channel_error_title\r\nstring connect_description\r\nstring connecting\r\nstring connecting_to\r\nstring disconnect_call\r\nstring dummy_text\r\nstring dummy_text_1\r\nstring empty_message_txt\r\nstring favorites\r\nstring format_description\r\nstring invalid_url_text\r\nstring invalid_url_title\r\nstring loading\r\nstring missing_url\r\nstring muted\r\nstring no\r\nstring no_favorites\r\nstring ok\r\nstring please_wait_for_doctor\r\nstring pref_aecdump_default\r\nstring pref_aecdump_dlg\r\nstring pref_aecdump_key\r\nstring pref_aecdump_title\r\nstring pref_audiocodec_default\r\nstring pref_audiocodec_dlg\r\nstring pref_audiocodec_key\r\nstring pref_audiocodec_title\r\nstring pref_audiosettings_key\r\nstring pref_audiosettings_title\r\nstring pref_built_in_aec_not_available\r\nstring pref_built_in_agc_not_available\r\nstring pref_built_in_ns_not_available\r\nstring pref_camera2_default\r\nstring pref_camera2_key\r\nstring pref_camera2_not_supported\r\nstring pref_camera2_title\r\nstring pref_capturequalityslider_default\r\nstring pref_capturequalityslider_dlg\r\nstring pref_capturequalityslider_key\r\nstring pref_capturequalityslider_title\r\nstring pref_capturetotexture_default\r\nstring pref_capturetotexture_dlg\r\nstring pref_capturetotexture_key\r\nstring pref_capturetotexture_title\r\nstring pref_data_id_default\r\nstring pref_data_id_dlg\r\nstring pref_data_id_key\r\nstring pref_data_id_title\r\nstring pref_data_protocol_default\r\nstring pref_data_protocol_dlg\r\nstring pref_data_protocol_key\r\nstring pref_data_protocol_title\r\nstring pref_datasettings_key\r\nstring pref_datasettings_title\r\nstring pref_disable_built_in_aec_default\r\nstring pref_disable_built_in_aec_dlg\r\nstring pref_disable_built_in_aec_key\r\nstring pref_disable_built_in_aec_title\r\nstring pref_disable_built_in_agc_default\r\nstring pref_disable_built_in_agc_dlg\r\nstring pref_disable_built_in_agc_key\r\nstring pref_disable_built_in_agc_title\r\nstring pref_disable_built_in_ns_default\r\nstring pref_disable_built_in_ns_dlg\r\nstring pref_disable_built_in_ns_key\r\nstring pref_disable_built_in_ns_title\r\nstring pref_displayhud_default\r\nstring pref_displayhud_dlg\r\nstring pref_displayhud_key\r\nstring pref_displayhud_title\r\nstring pref_enable_datachannel_default\r\nstring pref_enable_datachannel_dlg\r\nstring pref_enable_datachannel_key\r\nstring pref_enable_datachannel_title\r\nstring pref_enable_level_control_default\r\nstring pref_enable_level_control_key\r\nstring pref_enable_level_control_title\r\nstring pref_flexfec_default\r\nstring pref_flexfec_dlg\r\nstring pref_flexfec_key\r\nstring pref_flexfec_title\r\nstring pref_fps_default\r\nstring pref_fps_dlg\r\nstring pref_fps_key\r\nstring pref_fps_title\r\nstring pref_hwcodec_default\r\nstring pref_hwcodec_dlg\r\nstring pref_hwcodec_key\r\nstring pref_hwcodec_title\r\nstring pref_max_retransmit_time_ms_default\r\nstring pref_max_retransmit_time_ms_dlg\r\nstring pref_max_retransmit_time_ms_key\r\nstring pref_max_retransmit_time_ms_title\r\nstring pref_max_retransmits_default\r\nstring pref_max_retransmits_dlg\r\nstring pref_max_retransmits_key\r\nstring pref_max_retransmits_title\r\nstring pref_maxvideobitrate_default\r\nstring pref_maxvideobitrate_dlg\r\nstring pref_maxvideobitrate_key\r\nstring pref_maxvideobitrate_title\r\nstring pref_maxvideobitratevalue_default\r\nstring pref_maxvideobitratevalue_dlg\r\nstring pref_maxvideobitratevalue_key\r\nstring pref_maxvideobitratevalue_title\r\nstring pref_miscsettings_key\r\nstring pref_miscsettings_title\r\nstring pref_negotiated_default\r\nstring pref_negotiated_dlg\r\nstring pref_negotiated_key\r\nstring pref_negotiated_title\r\nstring pref_noaudioprocessing_default\r\nstring pref_noaudioprocessing_dlg\r\nstring pref_noaudioprocessing_key\r\nstring pref_noaudioprocessing_title\r\nstring pref_opensles_default\r\nstring pref_opensles_dlg\r\nstring pref_opensles_key\r\nstring pref_opensles_title\r\nstring pref_ordered_default\r\nstring pref_ordered_dlg\r\nstring pref_ordered_key\r\nstring pref_ordered_title\r\nstring pref_resolution_default\r\nstring pref_resolution_dlg\r\nstring pref_resolution_key\r\nstring pref_resolution_title\r\nstring pref_room_key\r\nstring pref_room_list_key\r\nstring pref_room_server_url_default\r\nstring pref_room_server_url_dlg\r\nstring pref_room_server_url_key\r\nstring pref_room_server_url_title\r\nstring pref_screencapture_default\r\nstring pref_screencapture_key\r\nstring pref_screencapture_title\r\nstring pref_speakerphone_default\r\nstring pref_speakerphone_dlg\r\nstring pref_speakerphone_key\r\nstring pref_speakerphone_title\r\nstring pref_startaudiobitrate_default\r\nstring pref_startaudiobitrate_dlg\r\nstring pref_startaudiobitrate_key\r\nstring pref_startaudiobitrate_title\r\nstring pref_startaudiobitratevalue_default\r\nstring pref_startaudiobitratevalue_dlg\r\nstring pref_startaudiobitratevalue_key\r\nstring pref_startaudiobitratevalue_title\r\nstring pref_tracing_default\r\nstring pref_tracing_dlg\r\nstring pref_tracing_key\r\nstring pref_tracing_title\r\nstring pref_value_disabled\r\nstring pref_value_enabled\r\nstring pref_videocall_default\r\nstring pref_videocall_dlg\r\nstring pref_videocall_key\r\nstring pref_videocall_title\r\nstring pref_videocodec_default\r\nstring pref_videocodec_dlg\r\nstring pref_videocodec_key\r\nstring pref_videocodec_title\r\nstring pref_videosettings_key\r\nstring pref_videosettings_title\r\nstring room_description\r\nstring settings_name\r\nstring start_call_now\r\nstring start_txt_chat_now\r\nstring switch_camera\r\nstring title_activity_complete\r\nstring title_activity_launch\r\nstring title_activity_sample\r\nstring title_activity_sample_data_channel\r\nstring title_activity_sample_peer_connection\r\nstring title_activity_socket_io\r\nstring toggle_debug\r\nstring toggle_mic\r\nstring video_call\r\nstring video_off_lbl\r\nstring video_on_lbl\r\nstring video_on_off_button\r\nstring yes\r\nstring you\r\nstring you_have_no_messages_start_sending_messages_now\r\nstyle AppTheme\r\nstyle AppTheme.AppBarOverlay\r\nstyle AppTheme.Call\r\nstyle AppTheme.NoActionBar\r\nstyle AppTheme.PopupOverlay\r\nxml preferences\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/local_only_symbol_list/debug/R-def.txt	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/local_only_symbol_list/debug/R-def.txt	(date 1626758057463)
-@@ -122,14 +122,11 @@
- color white
- color yellow
- dimen fab_margin
--drawable call
- drawable chat_left_bg
- drawable chat_right_bg
--drawable disconnect
- drawable ic_baseline_call_24
- drawable ic_baseline_call_24_white
- drawable ic_baseline_chat_bubble_outline_24
--drawable ic_baseline_collections_24
- drawable ic_baseline_flip_camera_ios_24
- drawable ic_baseline_lens_24_gray
- drawable ic_baseline_lens_24_green
-@@ -142,7 +139,6 @@
- drawable ic_baseline_send_24_white
- drawable ic_baseline_videocam_24
- drawable ic_baseline_videocam_off_24
--drawable ic_launcher_foreground
- drawable message_icon
- drawable round_corner_16_blue_light
- drawable round_corner_16_gray_light
-@@ -215,162 +211,11 @@
- string no_favorites
- string ok
- string please_wait_for_doctor
--string pref_aecdump_default
--string pref_aecdump_dlg
--string pref_aecdump_key
--string pref_aecdump_title
--string pref_audiocodec_default
--string pref_audiocodec_dlg
--string pref_audiocodec_key
--string pref_audiocodec_title
--string pref_audiosettings_key
--string pref_audiosettings_title
--string pref_built_in_aec_not_available
--string pref_built_in_agc_not_available
--string pref_built_in_ns_not_available
--string pref_camera2_default
--string pref_camera2_key
--string pref_camera2_not_supported
--string pref_camera2_title
--string pref_capturequalityslider_default
--string pref_capturequalityslider_dlg
--string pref_capturequalityslider_key
--string pref_capturequalityslider_title
--string pref_capturetotexture_default
--string pref_capturetotexture_dlg
--string pref_capturetotexture_key
--string pref_capturetotexture_title
--string pref_data_id_default
--string pref_data_id_dlg
--string pref_data_id_key
--string pref_data_id_title
--string pref_data_protocol_default
--string pref_data_protocol_dlg
--string pref_data_protocol_key
--string pref_data_protocol_title
--string pref_datasettings_key
--string pref_datasettings_title
--string pref_disable_built_in_aec_default
--string pref_disable_built_in_aec_dlg
--string pref_disable_built_in_aec_key
--string pref_disable_built_in_aec_title
--string pref_disable_built_in_agc_default
--string pref_disable_built_in_agc_dlg
--string pref_disable_built_in_agc_key
--string pref_disable_built_in_agc_title
--string pref_disable_built_in_ns_default
--string pref_disable_built_in_ns_dlg
--string pref_disable_built_in_ns_key
--string pref_disable_built_in_ns_title
--string pref_displayhud_default
--string pref_displayhud_dlg
--string pref_displayhud_key
--string pref_displayhud_title
--string pref_enable_datachannel_default
--string pref_enable_datachannel_dlg
--string pref_enable_datachannel_key
--string pref_enable_datachannel_title
--string pref_enable_level_control_default
--string pref_enable_level_control_key
--string pref_enable_level_control_title
--string pref_flexfec_default
--string pref_flexfec_dlg
--string pref_flexfec_key
--string pref_flexfec_title
--string pref_fps_default
--string pref_fps_dlg
--string pref_fps_key
--string pref_fps_title
--string pref_hwcodec_default
--string pref_hwcodec_dlg
--string pref_hwcodec_key
--string pref_hwcodec_title
--string pref_max_retransmit_time_ms_default
--string pref_max_retransmit_time_ms_dlg
--string pref_max_retransmit_time_ms_key
--string pref_max_retransmit_time_ms_title
--string pref_max_retransmits_default
--string pref_max_retransmits_dlg
--string pref_max_retransmits_key
--string pref_max_retransmits_title
--string pref_maxvideobitrate_default
--string pref_maxvideobitrate_dlg
--string pref_maxvideobitrate_key
--string pref_maxvideobitrate_title
--string pref_maxvideobitratevalue_default
--string pref_maxvideobitratevalue_dlg
--string pref_maxvideobitratevalue_key
--string pref_maxvideobitratevalue_title
--string pref_miscsettings_key
--string pref_miscsettings_title
--string pref_negotiated_default
--string pref_negotiated_dlg
--string pref_negotiated_key
--string pref_negotiated_title
--string pref_noaudioprocessing_default
--string pref_noaudioprocessing_dlg
--string pref_noaudioprocessing_key
--string pref_noaudioprocessing_title
--string pref_opensles_default
--string pref_opensles_dlg
--string pref_opensles_key
--string pref_opensles_title
--string pref_ordered_default
--string pref_ordered_dlg
--string pref_ordered_key
--string pref_ordered_title
--string pref_resolution_default
--string pref_resolution_dlg
--string pref_resolution_key
--string pref_resolution_title
--string pref_room_key
--string pref_room_list_key
--string pref_room_server_url_default
--string pref_room_server_url_dlg
--string pref_room_server_url_key
--string pref_room_server_url_title
--string pref_screencapture_default
--string pref_screencapture_key
--string pref_screencapture_title
--string pref_speakerphone_default
--string pref_speakerphone_dlg
--string pref_speakerphone_key
--string pref_speakerphone_title
--string pref_startaudiobitrate_default
--string pref_startaudiobitrate_dlg
--string pref_startaudiobitrate_key
--string pref_startaudiobitrate_title
--string pref_startaudiobitratevalue_default
--string pref_startaudiobitratevalue_dlg
--string pref_startaudiobitratevalue_key
--string pref_startaudiobitratevalue_title
--string pref_tracing_default
--string pref_tracing_dlg
--string pref_tracing_key
--string pref_tracing_title
--string pref_value_disabled
--string pref_value_enabled
--string pref_videocall_default
--string pref_videocall_dlg
--string pref_videocall_key
--string pref_videocall_title
--string pref_videocodec_default
--string pref_videocodec_dlg
--string pref_videocodec_key
--string pref_videocodec_title
--string pref_videosettings_key
--string pref_videosettings_title
- string room_description
- string settings_name
- string start_call_now
- string start_txt_chat_now
- string switch_camera
--string title_activity_complete
--string title_activity_launch
--string title_activity_sample
--string title_activity_sample_data_channel
--string title_activity_sample_peer_connection
--string title_activity_socket_io
- string toggle_debug
- string toggle_mic
- string video_call
-@@ -385,4 +230,3 @@
- style AppTheme.Call
- style AppTheme.NoActionBar
- style AppTheme.PopupOverlay
--xml preferences
-Index: webrtc/build/intermediates/packaged_res/debug/values/values.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string-array name=\"audioCodecs\">\r\n        <item>OPUS</item>\r\n        <item>ISAC</item>\r\n    </string-array>\r\n    <string-array name=\"cameraFps\">\r\n        <item>Default</item>\r\n        <item>30 fps</item>\r\n        <item>15 fps</item>\r\n    </string-array>\r\n    <string-array name=\"roomListContextMenu\">\r\n        <item>Remove favorite</item>\r\n    </string-array>\r\n    <string-array name=\"speakerphone\">\r\n        <item>Auto (proximity sensor)</item>\r\n        <item>Enabled</item>\r\n        <item>Disabled</item>\r\n    </string-array>\r\n    <string-array name=\"speakerphoneValues\">\r\n        <item>auto</item>\r\n        <item>true</item>\r\n        <item>false</item>\r\n    </string-array>\r\n    <string-array name=\"startBitrate\">\r\n        <item>Default</item>\r\n        <item>Manual</item>\r\n    </string-array>\r\n    <string-array name=\"videoCodecs\">\r\n        <item>VP8</item>\r\n        <item>VP9</item>\r\n        <item>H264</item>\r\n    </string-array>\r\n    <string-array name=\"videoResolutions\">\r\n        <item>Default</item>\r\n        <item>4K (3840 x 2160)</item>\r\n        <item>Full HD (1920 x 1080)</item>\r\n        <item>HD (1280 x 720)</item>\r\n        <item>VGA (640 x 480)</item>\r\n        <item>QVGA (320 x 240)</item>\r\n    </string-array>\r\n    <string-array name=\"videoResolutionsValues\">\r\n        <item>Default</item>\r\n        <item>3840 x 2160</item>\r\n        <item>1920 x 1080</item>\r\n        <item>1280 x 720</item>\r\n        <item>640 x 480</item>\r\n        <item>320 x 240</item>\r\n    </string-array>\r\n    <color name=\"black_overlay\">#66000000</color>\r\n    <color name=\"blue_1\">#06c1fa</color>\r\n    <color name=\"c1\">#091029</color>\r\n    <color name=\"c11\">#192a66</color>\r\n    <color name=\"c1_dark\">#050916</color>\r\n    <color name=\"c1_transaprent\">#88091029</color>\r\n    <color name=\"c1_transaprent_1\">#EE091029</color>\r\n    <color name=\"c2\">#24206C</color>\r\n    <color name=\"c3\">#3C1F5B</color>\r\n    <color name=\"c4\">#581B49</color>\r\n    <color name=\"c5\">#56568E</color>\r\n    <color name=\"c6\">#6A4F7A</color>\r\n    <color name=\"c7\">#78516D</color>\r\n    <color name=\"center_color\">#43215F</color>\r\n    <color name=\"center_color_1\">#AA43215F</color>\r\n    <color name=\"cmnBgColor\">#edefef</color>\r\n    <color name=\"cmnBgColor_1\">#44edefef</color>\r\n    <color name=\"colorAccent\">#FF4081</color>\r\n    <color name=\"colorAccent_1\">#34a7e1</color>\r\n    <color name=\"colorBlackTransparent\">#AA000000</color>\r\n    <color name=\"colorBlackTransparent_0\">#00000000</color>\r\n    <color name=\"colorBlackTransparent_0_0\">#55000000</color>\r\n    <color name=\"colorBlackTransparent_0_0_0\">#33000000</color>\r\n    <color name=\"colorBlackTransparent_1\">#cc000000</color>\r\n    <color name=\"colorBlackTransparent_1_1\">#DD000000</color>\r\n    <color name=\"colorBlackTransparent_2\">#C8000000</color>\r\n    <color name=\"colorCardBg\">#88FFFFFF</color>\r\n    <color name=\"colorCardBg_1\">#44FFFFFF</color>\r\n    <color name=\"colorGreen\">#4CAF50</color>\r\n    <color name=\"colorGreenTrans\">#AA4CAF50</color>\r\n    <color name=\"colorGreen_1\">#45be89</color>\r\n    <color name=\"colorGreen_2\">#0dbc6f</color>\r\n    <color name=\"colorPrimary\">#3F51B5</color>\r\n    <color name=\"colorPrimaryDark\">#303F9F</color>\r\n    <color name=\"colorWhiteTransparent\">#AAFFFFFF</color>\r\n    <color name=\"colorYellow\">#FF9800</color>\r\n    <color name=\"colorYellowTrans\">#AAFF9800</color>\r\n    <color name=\"colorYellow_1\">#efa04b</color>\r\n    <color name=\"colorYellow_2\">#f2aa00</color>\r\n    <color name=\"colorYellow_2_trans\">#EEf2aa00</color>\r\n    <color name=\"darkYellow0\">#ffe4c0</color>\r\n    <color name=\"darkYellow1\">#ffca81</color>\r\n    <color name=\"darkYellow2\">#ffb043</color>\r\n    <color name=\"darkYellow3\">#ff9504</color>\r\n    <color name=\"darkYellow3_trans\">#EEff9504</color>\r\n    <color name=\"dark_bg_end\">#000304</color>\r\n    <color name=\"dark_bg_start\">#00202A</color>\r\n    <color name=\"deepBlue0\">#bfc3e8</color>\r\n    <color name=\"deepBlue1\">#8088d1</color>\r\n    <color name=\"deepBlue2\">#414dbb</color>\r\n    <color name=\"deepBlue3\">#0111a4</color>\r\n    <color name=\"end_color\">#562343</color>\r\n    <color name=\"end_color_1\">#AA562343</color>\r\n    <color name=\"end_color_11\">#a63e7f</color>\r\n    <color name=\"gray_0\">#F1F1F1</color>\r\n    <color name=\"gray_0_0\">#F3F3F3</color>\r\n    <color name=\"gray_0_trans\">#55F1F1F1</color>\r\n    <color name=\"gray_1\">#e4e2e2</color>\r\n    <color name=\"gray_2\">#cecdcd</color>\r\n    <color name=\"gray_3\">#a7a7a7</color>\r\n    <color name=\"gray_3_trans\">#55a7a7a7</color>\r\n    <color name=\"gray_4\">#767272</color>\r\n    <color name=\"gray_4_1\">#adb7c0</color>\r\n    <color name=\"gray_4_trans\">#55767272</color>\r\n    <color name=\"gray_5\">#403d3d</color>\r\n    <color name=\"gray_5_trans\">#551a1919</color>\r\n    <color name=\"gray_6\">#1a1919</color>\r\n    <color name=\"gray_6_trans\">#991a1919</color>\r\n    <color name=\"gray_7\">#080808</color>\r\n    <color name=\"gray_center_trans\">#22000000</color>\r\n    <color name=\"gray_end_trans\">#DD000000</color>\r\n    <color name=\"gray_start_trans\">#00FFFFFF</color>\r\n    <color name=\"green0\">#c4eabf</color>\r\n    <color name=\"green1\">#89d47f</color>\r\n    <color name=\"green2\">#4fbf40</color>\r\n    <color name=\"green3\">#14aa00</color>\r\n    <color name=\"green_vectr\">#FF00aa00</color>\r\n    <color name=\"ic_launcher_background\">#1C8BFF</color>\r\n    <color name=\"ios_bg\">#80444444</color>\r\n    <color name=\"lightGreen0\">#eaf6c7</color>\r\n    <color name=\"lightGreen1\">#d6ed90</color>\r\n    <color name=\"lightGreen2\">#c2e459</color>\r\n    <color name=\"lightGreen3\">#addb21</color>\r\n    <color name=\"orange0\">#ffd9bf</color>\r\n    <color name=\"orange1\">#ffb27f</color>\r\n    <color name=\"orange2\">#ff8c40</color>\r\n    <color name=\"orange3\">#ff6600</color>\r\n    <color name=\"pink0\">#f4c0df</color>\r\n    <color name=\"pink1\">#e980be</color>\r\n    <color name=\"pink2\">#de419e</color>\r\n    <color name=\"pink3\">#d3027e</color>\r\n    <color name=\"red\">#FF0000</color>\r\n    <color name=\"red0\">#febfbf</color>\r\n    <color name=\"red1\">#fd7f7f</color>\r\n    <color name=\"red2\">#fc4040</color>\r\n    <color name=\"red3\">#fb0000</color>\r\n    <color name=\"red3_transa\">#EEfb0000</color>\r\n    <color name=\"red_1\">#f1676a</color>\r\n    <color name=\"s0\">#c1e5fe</color>\r\n    <color name=\"s00\">#d9f0ff</color>\r\n    <color name=\"s1\">#83ccfd</color>\r\n    <color name=\"s2\">#46b3fd</color>\r\n    <color name=\"s3\">#0899fc</color>\r\n    <color name=\"start_color\">#292178</color>\r\n    <color name=\"start_color_1\">#AA292178</color>\r\n    <color name=\"v2_green\">#7ebe4e</color>\r\n    <color name=\"violet0\">#d3bfe7</color>\r\n    <color name=\"violet1\">#a77fcf</color>\r\n    <color name=\"violet2\">#7c40b7</color>\r\n    <color name=\"violet3\">#50009f</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"yellow\">#FAF39B</color>\r\n    <dimen name=\"fab_margin\">16dp</dimen>\r\n    <string name=\"action_loopback\">Loopback connection</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n    <string name=\"add_favorite_description\">Add favorite</string>\r\n    <string name=\"app_name\" translatable=\"false\">Int-Health V-Call</string>\r\n    <string name=\"audio_off_lbl\">Audio Off!</string>\r\n    <string name=\"audio_on_lbl\">Audio On!</string>\r\n    <string name=\"audio_on_off_button\">audio on/off button</string>\r\n    <string name=\"call_end_aler_txt\">Do you want to end the video call ?</string>\r\n    <string name=\"call_end_button\">Call end button</string>\r\n    <string name=\"call_end_lbl\">Call End!</string>\r\n    <string name=\"camera2_texture_only_error\">Camera2 only supports capturing to texture. Either disable Camera2 or enable capturing to texture in the options.</string>\r\n    <string name=\"capture_format_change_text\">Slide to change capture format</string>\r\n    <string name=\"channel_error_title\">Connection error</string>\r\n    <string name=\"connect_description\">Connect to the room</string>\r\n    <string name=\"connecting\">Connecting...</string>\r\n    <string name=\"connecting_to\">Connecting to: %1$s</string>\r\n    <string name=\"disconnect_call\">Disconnect Call</string>\r\n    <string name=\"dummy_text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string>\r\n    <string name=\"dummy_text_1\">Lorem ipsum dolor sit amet</string>\r\n    <string name=\"empty_message_txt\">Please write your message!</string>\r\n    <string name=\"favorites\">Favorites</string>\r\n    <string name=\"format_description\">%1$dx%2$d @ %3$d fps</string>\r\n    <string name=\"invalid_url_text\">The URL or room name you entered resulted in an invalid URL: %1$s\r\n    </string>\r\n    <string name=\"invalid_url_title\">Invalid URL</string>\r\n    <string name=\"loading\">Loading...</string>\r\n    <string name=\"missing_url\">FATAL ERROR: Missing URL to connect to.</string>\r\n    <string name=\"muted\">Muted</string>\r\n    <string name=\"no\">No</string>\r\n    <string name=\"no_favorites\">No favorites</string>\r\n    <string name=\"ok\">OK</string>\r\n    <string name=\"please_wait_for_doctor\">Please wait for doctor avaialble.</string>\r\n    <string name=\"pref_aecdump_default\">false</string>\r\n    <string name=\"pref_aecdump_dlg\">Enable diagnostic audio recordings.</string>\r\n    <string name=\"pref_aecdump_key\">aecdump_preference</string>\r\n    <string name=\"pref_aecdump_title\">Create aecdump.</string>\r\n    <string name=\"pref_audiocodec_default\">OPUS</string>\r\n    <string name=\"pref_audiocodec_dlg\">Select default audio codec.</string>\r\n    <string name=\"pref_audiocodec_key\">audiocodec_preference</string>\r\n    <string name=\"pref_audiocodec_title\">Default audio codec.</string>\r\n    <string name=\"pref_audiosettings_key\">audio_settings_key</string>\r\n    <string name=\"pref_audiosettings_title\">WebRTC audio settings.</string>\r\n    <string name=\"pref_built_in_aec_not_available\">Hardware AEC is not available</string>\r\n    <string name=\"pref_built_in_agc_not_available\">Hardware AGC is not available</string>\r\n    <string name=\"pref_built_in_ns_not_available\">Hardware NS is not available</string>\r\n    <string name=\"pref_camera2_default\">true</string>\r\n    <string name=\"pref_camera2_key\">camera2_preference</string>\r\n    <string name=\"pref_camera2_not_supported\">Not supported on this device.</string>\r\n    <string name=\"pref_camera2_title\">Use Camera2.</string>\r\n    <string name=\"pref_capturequalityslider_default\">false</string>\r\n    <string name=\"pref_capturequalityslider_dlg\">Enable slider for changing capture quality.</string>\r\n    <string name=\"pref_capturequalityslider_key\">capturequalityslider_preference</string>\r\n    <string name=\"pref_capturequalityslider_title\">Capture quality slider.</string>\r\n    <string name=\"pref_capturetotexture_default\">true</string>\r\n    <string name=\"pref_capturetotexture_dlg\">Capture video to textures (if available).</string>\r\n    <string name=\"pref_capturetotexture_key\">capturetotexture_preference</string>\r\n    <string name=\"pref_capturetotexture_title\">Video capture to surface texture.</string>\r\n    <string name=\"pref_data_id_default\" translatable=\"false\">-1</string>\r\n    <string name=\"pref_data_id_dlg\">Enter data channel id.</string>\r\n    <string name=\"pref_data_id_key\">data_id_preference</string>\r\n    <string name=\"pref_data_id_title\">Data id.</string>\r\n    <string name=\"pref_data_protocol_default\" translatable=\"false\"/>\r\n    <string name=\"pref_data_protocol_dlg\">Enter subprotocol.</string>\r\n    <string name=\"pref_data_protocol_key\">Subprotocol</string>\r\n    <string name=\"pref_data_protocol_title\">Subprotocol.</string>\r\n    <string name=\"pref_datasettings_key\">data_settings_key</string>\r\n    <string name=\"pref_datasettings_title\">WebRTC data channel settings.</string>\r\n    <string name=\"pref_disable_built_in_aec_default\">false</string>\r\n    <string name=\"pref_disable_built_in_aec_dlg\">Disable hardware AEC.</string>\r\n    <string name=\"pref_disable_built_in_aec_key\">disable_built_in_aec_preference</string>\r\n    <string name=\"pref_disable_built_in_aec_title\">Disable hardware AEC.</string>\r\n    <string name=\"pref_disable_built_in_agc_default\">false</string>\r\n    <string name=\"pref_disable_built_in_agc_dlg\">Disable hardware AGC.</string>\r\n    <string name=\"pref_disable_built_in_agc_key\">disable_built_in_agc_preference</string>\r\n    <string name=\"pref_disable_built_in_agc_title\">Disable hardware AGC.</string>\r\n    <string name=\"pref_disable_built_in_ns_default\">false</string>\r\n    <string name=\"pref_disable_built_in_ns_dlg\">Disable hardware NS.</string>\r\n    <string name=\"pref_disable_built_in_ns_key\">disable_built_in_ns_preference</string>\r\n    <string name=\"pref_disable_built_in_ns_title\">Disable hardware NS.</string>\r\n    <string name=\"pref_displayhud_default\" translatable=\"false\">false</string>\r\n    <string name=\"pref_displayhud_dlg\">Display call statistics.</string>\r\n    <string name=\"pref_displayhud_key\">displayhud_preference</string>\r\n    <string name=\"pref_displayhud_title\">Display call statistics.</string>\r\n    <string name=\"pref_enable_datachannel_default\" translatable=\"false\">true</string>\r\n    <string name=\"pref_enable_datachannel_dlg\">Enable datachannel.</string>\r\n    <string name=\"pref_enable_datachannel_key\">enable_datachannel_preference</string>\r\n    <string name=\"pref_enable_datachannel_title\">Enable datachannel.</string>\r\n    <string name=\"pref_enable_level_control_default\">false</string>\r\n    <string name=\"pref_enable_level_control_key\">enable_level_control_preference</string>\r\n    <string name=\"pref_enable_level_control_title\">Enable level control.</string>\r\n    <string name=\"pref_flexfec_default\">false</string>\r\n    <string name=\"pref_flexfec_dlg\">Enable FlexFEC.</string>\r\n    <string name=\"pref_flexfec_key\">flexfec_preference</string>\r\n    <string name=\"pref_flexfec_title\">Codec-agnostic Flexible FEC.</string>\r\n    <string name=\"pref_fps_default\">Default</string>\r\n    <string name=\"pref_fps_dlg\">Enter local camera fps.</string>\r\n    <string name=\"pref_fps_key\">fps_preference</string>\r\n    <string name=\"pref_fps_title\">Camera fps.</string>\r\n    <string name=\"pref_hwcodec_default\">true</string>\r\n    <string name=\"pref_hwcodec_dlg\">Use hardware accelerated video codec (if available).</string>\r\n    <string name=\"pref_hwcodec_key\">hwcodec_preference</string>\r\n    <string name=\"pref_hwcodec_title\">Video codec hardware acceleration.</string>\r\n    <string name=\"pref_max_retransmit_time_ms_default\" translatable=\"false\">-1</string>\r\n    <string name=\"pref_max_retransmit_time_ms_dlg\">Enter max delay to retransmit (in ms).</string>\r\n    <string name=\"pref_max_retransmit_time_ms_key\">max_retransmit_time_ms_preference</string>\r\n    <string name=\"pref_max_retransmit_time_ms_title\">Max delay to retransmit.</string>\r\n    <string name=\"pref_max_retransmits_default\" translatable=\"false\">-1</string>\r\n    <string name=\"pref_max_retransmits_dlg\">Enter max attempts to retransmit.</string>\r\n    <string name=\"pref_max_retransmits_key\">max_retransmits_preference</string>\r\n    <string name=\"pref_max_retransmits_title\">Max attempts to retransmit.</string>\r\n    <string name=\"pref_maxvideobitrate_default\">Default</string>\r\n    <string name=\"pref_maxvideobitrate_dlg\">Maximum video bitrate setting.</string>\r\n    <string name=\"pref_maxvideobitrate_key\">maxvideobitrate_preference</string>\r\n    <string name=\"pref_maxvideobitrate_title\">Maximum video bitrate setting.</string>\r\n    <string name=\"pref_maxvideobitratevalue_default\">1700</string>\r\n    <string name=\"pref_maxvideobitratevalue_dlg\">Enter video encoder maximum bitrate in kbps.</string>\r\n    <string name=\"pref_maxvideobitratevalue_key\">maxvideobitratevalue_preference</string>\r\n    <string name=\"pref_maxvideobitratevalue_title\">Video encoder maximum bitrate.</string>\r\n    <string name=\"pref_miscsettings_key\">misc_settings_key</string>\r\n    <string name=\"pref_miscsettings_title\">Miscellaneous settings.</string>\r\n    <string name=\"pref_negotiated_default\" translatable=\"false\">false</string>\r\n    <string name=\"pref_negotiated_dlg\">Negotiated.</string>\r\n    <string name=\"pref_negotiated_key\">negotiated_preference</string>\r\n    <string name=\"pref_negotiated_title\">Negotiated.</string>\r\n    <string name=\"pref_noaudioprocessing_default\">false</string>\r\n    <string name=\"pref_noaudioprocessing_dlg\">Disable audio processing pipeline.</string>\r\n    <string name=\"pref_noaudioprocessing_key\">audioprocessing_preference</string>\r\n    <string name=\"pref_noaudioprocessing_title\">Disable audio processing.</string>\r\n    <string name=\"pref_opensles_default\">false</string>\r\n    <string name=\"pref_opensles_dlg\">Use OpenSL ES for audio playback.</string>\r\n    <string name=\"pref_opensles_key\">opensles_preference</string>\r\n    <string name=\"pref_opensles_title\">Use OpenSL ES for audio playback.</string>\r\n    <string name=\"pref_ordered_default\" translatable=\"false\">true</string>\r\n    <string name=\"pref_ordered_dlg\">Order messages.</string>\r\n    <string name=\"pref_ordered_key\">ordered_preference</string>\r\n    <string name=\"pref_ordered_title\">Order messages.</string>\r\n    <string name=\"pref_resolution_default\">Default</string>\r\n    <string name=\"pref_resolution_dlg\">Enter AppRTC local video resolution.</string>\r\n    <string name=\"pref_resolution_key\">resolution_preference</string>\r\n    <string name=\"pref_resolution_title\">Video resolution.</string>\r\n    <string name=\"pref_room_key\">room_preference</string>\r\n    <string name=\"pref_room_list_key\">room_list_preference</string>\r\n    <string name=\"pref_room_server_url_default\" translatable=\"false\">https://appr.tc</string>\r\n    <string name=\"pref_room_server_url_dlg\">Enter a room server URL.</string>\r\n    <string name=\"pref_room_server_url_key\">room_server_url_preference</string>\r\n    <string name=\"pref_room_server_url_title\">Room server URL.</string>\r\n    <string name=\"pref_screencapture_default\">false</string>\r\n    <string name=\"pref_screencapture_key\">screencapture_preference</string>\r\n    <string name=\"pref_screencapture_title\">Use screencapture.</string>\r\n    <string name=\"pref_speakerphone_default\">auto</string>\r\n    <string name=\"pref_speakerphone_dlg\">Speakerphone.</string>\r\n    <string name=\"pref_speakerphone_key\">speakerphone_preference</string>\r\n    <string name=\"pref_speakerphone_title\">Speakerphone.</string>\r\n    <string name=\"pref_startaudiobitrate_default\">Default</string>\r\n    <string name=\"pref_startaudiobitrate_dlg\">Audio bitrate setting.</string>\r\n    <string name=\"pref_startaudiobitrate_key\">startaudiobitrate_preference</string>\r\n    <string name=\"pref_startaudiobitrate_title\">Audio bitrate setting.</string>\r\n    <string name=\"pref_startaudiobitratevalue_default\">32</string>\r\n    <string name=\"pref_startaudiobitratevalue_dlg\">Enter audio codec bitrate in kbps.</string>\r\n    <string name=\"pref_startaudiobitratevalue_key\">startaudiobitratevalue_preference</string>\r\n    <string name=\"pref_startaudiobitratevalue_title\">Audio codec bitrate.</string>\r\n    <string name=\"pref_tracing_default\" translatable=\"false\">false</string>\r\n    <string name=\"pref_tracing_dlg\">Debug performance tracing.</string>\r\n    <string name=\"pref_tracing_key\">tracing_preference</string>\r\n    <string name=\"pref_tracing_title\">Debug performance tracing.</string>\r\n    <string name=\"pref_value_disabled\">Disabled</string>\r\n    <string name=\"pref_value_enabled\">Enabled</string>\r\n    <string name=\"pref_videocall_default\">true</string>\r\n    <string name=\"pref_videocall_dlg\">Enable video in a call.</string>\r\n    <string name=\"pref_videocall_key\">videocall_preference</string>\r\n    <string name=\"pref_videocall_title\">Video call.</string>\r\n    <string name=\"pref_videocodec_default\">VP8</string>\r\n    <string name=\"pref_videocodec_dlg\">Select default video codec.</string>\r\n    <string name=\"pref_videocodec_key\">videocodec_preference</string>\r\n    <string name=\"pref_videocodec_title\">Default video codec.</string>\r\n    <string name=\"pref_videosettings_key\">video_settings_key</string>\r\n    <string name=\"pref_videosettings_title\">WebRTC video settings.</string>\r\n    <string name=\"room_description\">\r\n        Please enter a room name. Room names are shared with everyone, so think\r\n        of something unique and send it to a friend.\r\n    </string>\r\n    <string name=\"settings_name\" translatable=\"false\">AppRTC Settings</string>\r\n    <string name=\"start_call_now\">Start Call Now</string>\r\n    <string name=\"start_txt_chat_now\">Start Text Chat Now</string>\r\n    <string name=\"switch_camera\">Switch front/back camera</string>\r\n    <string name=\"title_activity_complete\">CompleteActivity</string>\r\n    <string name=\"title_activity_launch\">LaunchActivity</string>\r\n    <string name=\"title_activity_sample\">SampleActivity</string>\r\n    <string name=\"title_activity_sample_data_channel\">SampleDataChannelActivity</string>\r\n    <string name=\"title_activity_sample_peer_connection\">SamplePeerConnectionActivity</string>\r\n    <string name=\"title_activity_socket_io\">SocketIOActivity</string>\r\n    <string name=\"toggle_debug\">Toggle debug view</string>\r\n    <string name=\"toggle_mic\">Toggle microphone on/off</string>\r\n    <string name=\"video_call\">Video Call</string>\r\n    <string name=\"video_off_lbl\">Video Off!</string>\r\n    <string name=\"video_on_lbl\">Video On!</string>\r\n    <string name=\"video_on_off_button\">Video On/off button</string>\r\n    <string name=\"yes\">Yes</string>\r\n    <string name=\"you\">You</string>\r\n    <string name=\"you_have_no_messages_start_sending_messages_now\">You have no messages! Start sending messages now.</string>\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n    <style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\"/>\r\n    <style name=\"AppTheme.Call\" parent=\"AppTheme\">\r\n        <item name=\"windowNoTitle\">true</item>\r\n        <item name=\"android:windowFullscreen\">true</item>\r\n    </style>\r\n    <style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n    </style>\r\n    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\"/>\r\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/packaged_res/debug/values/values.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/packaged_res/debug/values/values.xml	(date 1626758056271)
-@@ -191,152 +191,7 @@
-     <string name="no">No</string>
-     <string name="no_favorites">No favorites</string>
-     <string name="ok">OK</string>
--    <string name="please_wait_for_doctor">Please wait for doctor avaialble.</string>
--    <string name="pref_aecdump_default">false</string>
--    <string name="pref_aecdump_dlg">Enable diagnostic audio recordings.</string>
--    <string name="pref_aecdump_key">aecdump_preference</string>
--    <string name="pref_aecdump_title">Create aecdump.</string>
--    <string name="pref_audiocodec_default">OPUS</string>
--    <string name="pref_audiocodec_dlg">Select default audio codec.</string>
--    <string name="pref_audiocodec_key">audiocodec_preference</string>
--    <string name="pref_audiocodec_title">Default audio codec.</string>
--    <string name="pref_audiosettings_key">audio_settings_key</string>
--    <string name="pref_audiosettings_title">WebRTC audio settings.</string>
--    <string name="pref_built_in_aec_not_available">Hardware AEC is not available</string>
--    <string name="pref_built_in_agc_not_available">Hardware AGC is not available</string>
--    <string name="pref_built_in_ns_not_available">Hardware NS is not available</string>
--    <string name="pref_camera2_default">true</string>
--    <string name="pref_camera2_key">camera2_preference</string>
--    <string name="pref_camera2_not_supported">Not supported on this device.</string>
--    <string name="pref_camera2_title">Use Camera2.</string>
--    <string name="pref_capturequalityslider_default">false</string>
--    <string name="pref_capturequalityslider_dlg">Enable slider for changing capture quality.</string>
--    <string name="pref_capturequalityslider_key">capturequalityslider_preference</string>
--    <string name="pref_capturequalityslider_title">Capture quality slider.</string>
--    <string name="pref_capturetotexture_default">true</string>
--    <string name="pref_capturetotexture_dlg">Capture video to textures (if available).</string>
--    <string name="pref_capturetotexture_key">capturetotexture_preference</string>
--    <string name="pref_capturetotexture_title">Video capture to surface texture.</string>
--    <string name="pref_data_id_default" translatable="false">-1</string>
--    <string name="pref_data_id_dlg">Enter data channel id.</string>
--    <string name="pref_data_id_key">data_id_preference</string>
--    <string name="pref_data_id_title">Data id.</string>
--    <string name="pref_data_protocol_default" translatable="false"/>
--    <string name="pref_data_protocol_dlg">Enter subprotocol.</string>
--    <string name="pref_data_protocol_key">Subprotocol</string>
--    <string name="pref_data_protocol_title">Subprotocol.</string>
--    <string name="pref_datasettings_key">data_settings_key</string>
--    <string name="pref_datasettings_title">WebRTC data channel settings.</string>
--    <string name="pref_disable_built_in_aec_default">false</string>
--    <string name="pref_disable_built_in_aec_dlg">Disable hardware AEC.</string>
--    <string name="pref_disable_built_in_aec_key">disable_built_in_aec_preference</string>
--    <string name="pref_disable_built_in_aec_title">Disable hardware AEC.</string>
--    <string name="pref_disable_built_in_agc_default">false</string>
--    <string name="pref_disable_built_in_agc_dlg">Disable hardware AGC.</string>
--    <string name="pref_disable_built_in_agc_key">disable_built_in_agc_preference</string>
--    <string name="pref_disable_built_in_agc_title">Disable hardware AGC.</string>
--    <string name="pref_disable_built_in_ns_default">false</string>
--    <string name="pref_disable_built_in_ns_dlg">Disable hardware NS.</string>
--    <string name="pref_disable_built_in_ns_key">disable_built_in_ns_preference</string>
--    <string name="pref_disable_built_in_ns_title">Disable hardware NS.</string>
--    <string name="pref_displayhud_default" translatable="false">false</string>
--    <string name="pref_displayhud_dlg">Display call statistics.</string>
--    <string name="pref_displayhud_key">displayhud_preference</string>
--    <string name="pref_displayhud_title">Display call statistics.</string>
--    <string name="pref_enable_datachannel_default" translatable="false">true</string>
--    <string name="pref_enable_datachannel_dlg">Enable datachannel.</string>
--    <string name="pref_enable_datachannel_key">enable_datachannel_preference</string>
--    <string name="pref_enable_datachannel_title">Enable datachannel.</string>
--    <string name="pref_enable_level_control_default">false</string>
--    <string name="pref_enable_level_control_key">enable_level_control_preference</string>
--    <string name="pref_enable_level_control_title">Enable level control.</string>
--    <string name="pref_flexfec_default">false</string>
--    <string name="pref_flexfec_dlg">Enable FlexFEC.</string>
--    <string name="pref_flexfec_key">flexfec_preference</string>
--    <string name="pref_flexfec_title">Codec-agnostic Flexible FEC.</string>
--    <string name="pref_fps_default">Default</string>
--    <string name="pref_fps_dlg">Enter local camera fps.</string>
--    <string name="pref_fps_key">fps_preference</string>
--    <string name="pref_fps_title">Camera fps.</string>
--    <string name="pref_hwcodec_default">true</string>
--    <string name="pref_hwcodec_dlg">Use hardware accelerated video codec (if available).</string>
--    <string name="pref_hwcodec_key">hwcodec_preference</string>
--    <string name="pref_hwcodec_title">Video codec hardware acceleration.</string>
--    <string name="pref_max_retransmit_time_ms_default" translatable="false">-1</string>
--    <string name="pref_max_retransmit_time_ms_dlg">Enter max delay to retransmit (in ms).</string>
--    <string name="pref_max_retransmit_time_ms_key">max_retransmit_time_ms_preference</string>
--    <string name="pref_max_retransmit_time_ms_title">Max delay to retransmit.</string>
--    <string name="pref_max_retransmits_default" translatable="false">-1</string>
--    <string name="pref_max_retransmits_dlg">Enter max attempts to retransmit.</string>
--    <string name="pref_max_retransmits_key">max_retransmits_preference</string>
--    <string name="pref_max_retransmits_title">Max attempts to retransmit.</string>
--    <string name="pref_maxvideobitrate_default">Default</string>
--    <string name="pref_maxvideobitrate_dlg">Maximum video bitrate setting.</string>
--    <string name="pref_maxvideobitrate_key">maxvideobitrate_preference</string>
--    <string name="pref_maxvideobitrate_title">Maximum video bitrate setting.</string>
--    <string name="pref_maxvideobitratevalue_default">1700</string>
--    <string name="pref_maxvideobitratevalue_dlg">Enter video encoder maximum bitrate in kbps.</string>
--    <string name="pref_maxvideobitratevalue_key">maxvideobitratevalue_preference</string>
--    <string name="pref_maxvideobitratevalue_title">Video encoder maximum bitrate.</string>
--    <string name="pref_miscsettings_key">misc_settings_key</string>
--    <string name="pref_miscsettings_title">Miscellaneous settings.</string>
--    <string name="pref_negotiated_default" translatable="false">false</string>
--    <string name="pref_negotiated_dlg">Negotiated.</string>
--    <string name="pref_negotiated_key">negotiated_preference</string>
--    <string name="pref_negotiated_title">Negotiated.</string>
--    <string name="pref_noaudioprocessing_default">false</string>
--    <string name="pref_noaudioprocessing_dlg">Disable audio processing pipeline.</string>
--    <string name="pref_noaudioprocessing_key">audioprocessing_preference</string>
--    <string name="pref_noaudioprocessing_title">Disable audio processing.</string>
--    <string name="pref_opensles_default">false</string>
--    <string name="pref_opensles_dlg">Use OpenSL ES for audio playback.</string>
--    <string name="pref_opensles_key">opensles_preference</string>
--    <string name="pref_opensles_title">Use OpenSL ES for audio playback.</string>
--    <string name="pref_ordered_default" translatable="false">true</string>
--    <string name="pref_ordered_dlg">Order messages.</string>
--    <string name="pref_ordered_key">ordered_preference</string>
--    <string name="pref_ordered_title">Order messages.</string>
--    <string name="pref_resolution_default">Default</string>
--    <string name="pref_resolution_dlg">Enter AppRTC local video resolution.</string>
--    <string name="pref_resolution_key">resolution_preference</string>
--    <string name="pref_resolution_title">Video resolution.</string>
--    <string name="pref_room_key">room_preference</string>
--    <string name="pref_room_list_key">room_list_preference</string>
--    <string name="pref_room_server_url_default" translatable="false">https://appr.tc</string>
--    <string name="pref_room_server_url_dlg">Enter a room server URL.</string>
--    <string name="pref_room_server_url_key">room_server_url_preference</string>
--    <string name="pref_room_server_url_title">Room server URL.</string>
--    <string name="pref_screencapture_default">false</string>
--    <string name="pref_screencapture_key">screencapture_preference</string>
--    <string name="pref_screencapture_title">Use screencapture.</string>
--    <string name="pref_speakerphone_default">auto</string>
--    <string name="pref_speakerphone_dlg">Speakerphone.</string>
--    <string name="pref_speakerphone_key">speakerphone_preference</string>
--    <string name="pref_speakerphone_title">Speakerphone.</string>
--    <string name="pref_startaudiobitrate_default">Default</string>
--    <string name="pref_startaudiobitrate_dlg">Audio bitrate setting.</string>
--    <string name="pref_startaudiobitrate_key">startaudiobitrate_preference</string>
--    <string name="pref_startaudiobitrate_title">Audio bitrate setting.</string>
--    <string name="pref_startaudiobitratevalue_default">32</string>
--    <string name="pref_startaudiobitratevalue_dlg">Enter audio codec bitrate in kbps.</string>
--    <string name="pref_startaudiobitratevalue_key">startaudiobitratevalue_preference</string>
--    <string name="pref_startaudiobitratevalue_title">Audio codec bitrate.</string>
--    <string name="pref_tracing_default" translatable="false">false</string>
--    <string name="pref_tracing_dlg">Debug performance tracing.</string>
--    <string name="pref_tracing_key">tracing_preference</string>
--    <string name="pref_tracing_title">Debug performance tracing.</string>
--    <string name="pref_value_disabled">Disabled</string>
--    <string name="pref_value_enabled">Enabled</string>
--    <string name="pref_videocall_default">true</string>
--    <string name="pref_videocall_dlg">Enable video in a call.</string>
--    <string name="pref_videocall_key">videocall_preference</string>
--    <string name="pref_videocall_title">Video call.</string>
--    <string name="pref_videocodec_default">VP8</string>
--    <string name="pref_videocodec_dlg">Select default video codec.</string>
--    <string name="pref_videocodec_key">videocodec_preference</string>
--    <string name="pref_videocodec_title">Default video codec.</string>
--    <string name="pref_videosettings_key">video_settings_key</string>
--    <string name="pref_videosettings_title">WebRTC video settings.</string>
-+    <string name="please_wait_for_doctor">Please wait for the doctor\'s availability.</string>
-     <string name="room_description">
-         Please enter a room name. Room names are shared with everyone, so think
-         of something unique and send it to a friend.
-@@ -345,12 +200,6 @@
-     <string name="start_call_now">Start Call Now</string>
-     <string name="start_txt_chat_now">Start Text Chat Now</string>
-     <string name="switch_camera">Switch front/back camera</string>
--    <string name="title_activity_complete">CompleteActivity</string>
--    <string name="title_activity_launch">LaunchActivity</string>
--    <string name="title_activity_sample">SampleActivity</string>
--    <string name="title_activity_sample_data_channel">SampleDataChannelActivity</string>
--    <string name="title_activity_sample_peer_connection">SamplePeerConnectionActivity</string>
--    <string name="title_activity_socket_io">SocketIOActivity</string>
-     <string name="toggle_debug">Toggle debug view</string>
-     <string name="toggle_mic">Toggle microphone on/off</string>
-     <string name="video_call">Video Call</string>
-Index: webrtc/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"org.intelehealth.apprtc\"\r\n    android:versionCode=\"1\"\r\n    android:versionName=\"1.0\" >\r\n\r\n    <uses-sdk\r\n        android:minSdkVersion=\"19\"\r\n        android:targetSdkVersion=\"30\" />\r\n\r\n    <uses-feature android:name=\"android.hardware.camera\" />\r\n    <uses-feature android:name=\"android.hardware.camera.autofocus\" />\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        tools:ignore=\"LockedOrientationActivity\" >\r\n        <activity\r\n            android:name=\"org.intelehealth.apprtc.ChatActivity\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:windowSoftInputMode=\"stateAlwaysHidden\" />\r\n        <!--\r\n          <activity\r\n              android:name=\"com.shivam.androidwebrtc.app_rtc_sample.main.AppRTCMainActivity\"\r\n              android:label=\"@string/app_name\"\r\n              android:windowSoftInputMode=\"adjustPan\" />\r\n          <activity\r\n              android:name=\"com.shivam.androidwebrtc.app_rtc_sample.call.CallActivity\"\r\n              android:configChanges=\"orientation|screenSize\"\r\n              android:label=\"@string/app_name\"\r\n              android:screenOrientation=\"fullUser\"\r\n              android:theme=\"@style/AppTheme.Call\" />\r\n        -->\r\n        <!--\r\n<activity\r\n            android:name=\"com.shivam.androidwebrtc.LauncherActivity\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        -->\r\n        <activity\r\n            android:name=\"org.intelehealth.apprtc.CompleteActivity\"\r\n            android:label=\"@string/title_activity_complete\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/aapt_friendly_merged_manifests/debug/aapt/AndroidManifest.xml	(date 1626758057932)
-@@ -23,12 +23,11 @@
-     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-     <uses-permission android:name="android.permission.BLUETOOTH" />
-+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
- 
-     <application
-         android:allowBackup="true"
--        android:icon="@mipmap/ic_launcher"
-         android:label="@string/app_name"
--        android:roundIcon="@mipmap/ic_launcher_round"
-         android:supportsRtl="true"
-         android:theme="@style/AppTheme"
-         tools:ignore="LockedOrientationActivity" >
-@@ -61,7 +60,6 @@
-         -->
-         <activity
-             android:name="org.intelehealth.apprtc.CompleteActivity"
--            android:label="@string/title_activity_complete"
-             android:screenOrientation="portrait"
-             android:theme="@style/AppTheme.NoActionBar" />
-     </application>
-Index: webrtc/build/intermediates/incremental/packageDebugResources/compile-file-map.properties
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>#Sun May 16 12:43:36 IST 2021\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_lens_24_gray.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_lens_24_gray.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_mic_off_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_mic_off_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_flip_camera_ios_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_flip_camera_ios_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_lens_24_white.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_lens_24_white.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\message_icon.jpg=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\message_icon.jpg\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\round_corner_16_gray_light.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\round_corner_16_gray_light.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\chat_left_bg.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\chat_left_bg.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\round_corner_16_blue_light.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\round_corner_16_blue_light.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_chat_bubble_outline_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_chat_bubble_outline_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_lens_24_green.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_lens_24_green.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_call_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_call_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\rounded_bg.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\rounded_bg.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_videocam_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_videocam_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_mic_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_mic_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\layout\\\\right_chat_layout.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\layout\\\\right_chat_layout.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\disconnect.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\disconnect.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\menu\\\\chat_menu.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\menu\\\\chat_menu.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_mic_none_24_blue.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_mic_none_24_blue.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\call.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\call.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_call_24_white.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_call_24_white.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\layout\\\\activity_chat.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\layout\\\\activity_chat.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\chat_right_bg.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\chat_right_bg.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\xml\\\\preferences.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\xml\\\\preferences.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_collections_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_collections_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_lens_24_red.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_lens_24_red.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\layout\\\\left_chat_layout.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\layout\\\\left_chat_layout.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_videocam_off_24.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_videocam_off_24.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\incremental\\\\packageDebugResources\\\\stripped.dir\\\\layout\\\\activity_sample_peer_connection.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\layout\\\\activity_sample_peer_connection.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_photo_camera_24_blue.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_photo_camera_24_blue.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\layout\\\\activity_launch.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\layout\\\\activity_launch.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_launcher_foreground.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_launcher_foreground.xml\r\nD\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\src\\\\main\\\\res\\\\drawable\\\\ic_baseline_send_24_white.xml=D\\:\\\\Intelehealth\\\\Android-Mobile-Client\\\\webrtc\\\\build\\\\intermediates\\\\packaged_res\\\\debug\\\\drawable\\\\ic_baseline_send_24_white.xml\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>windows-1252
-===================================================================
---- webrtc/build/intermediates/incremental/packageDebugResources/compile-file-map.properties	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/incremental/packageDebugResources/compile-file-map.properties	(date 1626758056804)
-@@ -1,33 +1,28 @@
--#Sun May 16 12:43:36 IST 2021
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_gray.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_gray.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_off_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_mic_off_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_flip_camera_ios_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_flip_camera_ios_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_white.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_white.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\message_icon.jpg=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\message_icon.jpg
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\round_corner_16_gray_light.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\round_corner_16_gray_light.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\chat_left_bg.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\chat_left_bg.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\round_corner_16_blue_light.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\round_corner_16_blue_light.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_chat_bubble_outline_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_chat_bubble_outline_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_green.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_green.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_call_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_call_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\rounded_bg.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\rounded_bg.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_videocam_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_videocam_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_mic_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\right_chat_layout.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\right_chat_layout.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\disconnect.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\disconnect.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\menu\\chat_menu.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\menu\\chat_menu.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_none_24_blue.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_mic_none_24_blue.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\call.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\call.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_call_24_white.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_call_24_white.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_chat.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\activity_chat.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\chat_right_bg.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\chat_right_bg.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\xml\\preferences.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\xml\\preferences.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_collections_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_collections_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_red.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_red.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\left_chat_layout.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\left_chat_layout.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_videocam_off_24.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_videocam_off_24.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\incremental\\packageDebugResources\\stripped.dir\\layout\\activity_sample_peer_connection.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\activity_sample_peer_connection.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_photo_camera_24_blue.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_photo_camera_24_blue.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_launch.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\activity_launch.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_launcher_foreground.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_launcher_foreground.xml
--D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_send_24_white.xml=D\:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_send_24_white.xml
-+#Tue Jul 20 10:44:16 IST 2021
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_gray.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_gray.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_launch.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\activity_launch.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_white.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_white.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\right_chat_layout.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\right_chat_layout.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_chat_bubble_outline_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_chat_bubble_outline_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_call_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_call_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_none_24_blue.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_mic_none_24_blue.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_green.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_green.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_mic_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\message_icon.jpg=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\message_icon.jpg
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\round_corner_16_blue_light.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\round_corner_16_blue_light.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_flip_camera_ios_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_flip_camera_ios_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_chat.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\activity_chat.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_off_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_mic_off_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_videocam_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_videocam_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\left_chat_layout.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\left_chat_layout.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\menu\\chat_menu.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\menu\\chat_menu.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\rounded_bg.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\rounded_bg.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_videocam_off_24.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_videocam_off_24.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_call_24_white.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_call_24_white.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_red.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_lens_24_red.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\round_corner_16_gray_light.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\round_corner_16_gray_light.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_photo_camera_24_blue.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_photo_camera_24_blue.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\chat_left_bg.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\chat_left_bg.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_send_24_white.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\ic_baseline_send_24_white.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\chat_right_bg.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\drawable\\chat_right_bg.xml
-+C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\incremental\\packageDebugResources\\stripped.dir\\layout\\activity_sample_peer_connection.xml=C\:\\Users\\Shubham\\Desktop\\AndroidStudio\\Android-Mobile-Client\\webrtc\\build\\intermediates\\packaged_res\\debug\\layout\\activity_sample_peer_connection.xml
-Index: webrtc/build/intermediates/library_manifest/debug/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"org.intelehealth.apprtc\"\r\n    android:versionCode=\"1\"\r\n    android:versionName=\"1.0\" >\r\n\r\n    <uses-sdk\r\n        android:minSdkVersion=\"19\"\r\n        android:targetSdkVersion=\"30\" />\r\n\r\n    <uses-feature android:name=\"android.hardware.camera\" />\r\n    <uses-feature android:name=\"android.hardware.camera.autofocus\" />\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        tools:ignore=\"LockedOrientationActivity\" >\r\n        <activity\r\n            android:name=\"org.intelehealth.apprtc.ChatActivity\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:windowSoftInputMode=\"stateAlwaysHidden\" />\r\n        <!--\r\n          <activity\r\n              android:name=\"com.shivam.androidwebrtc.app_rtc_sample.main.AppRTCMainActivity\"\r\n              android:label=\"@string/app_name\"\r\n              android:windowSoftInputMode=\"adjustPan\" />\r\n          <activity\r\n              android:name=\"com.shivam.androidwebrtc.app_rtc_sample.call.CallActivity\"\r\n              android:configChanges=\"orientation|screenSize\"\r\n              android:label=\"@string/app_name\"\r\n              android:screenOrientation=\"fullUser\"\r\n              android:theme=\"@style/AppTheme.Call\" />\r\n        -->\r\n        <!--\r\n<activity\r\n            android:name=\"com.shivam.androidwebrtc.LauncherActivity\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        -->\r\n        <activity\r\n            android:name=\"org.intelehealth.apprtc.CompleteActivity\"\r\n            android:label=\"@string/title_activity_complete\"\r\n            android:screenOrientation=\"portrait\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/library_manifest/debug/AndroidManifest.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/library_manifest/debug/AndroidManifest.xml	(date 1626758057932)
-@@ -23,12 +23,11 @@
-     <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-     <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
-     <uses-permission android:name="android.permission.BLUETOOTH" />
-+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
- 
-     <application
-         android:allowBackup="true"
--        android:icon="@mipmap/ic_launcher"
-         android:label="@string/app_name"
--        android:roundIcon="@mipmap/ic_launcher_round"
-         android:supportsRtl="true"
-         android:theme="@style/AppTheme"
-         tools:ignore="LockedOrientationActivity" >
-@@ -61,7 +60,6 @@
-         -->
-         <activity
-             android:name="org.intelehealth.apprtc.CompleteActivity"
--            android:label="@string/title_activity_complete"
-             android:screenOrientation="portrait"
-             android:theme="@style/AppTheme.NoActionBar" />
-     </application>
-Index: webrtc/build/intermediates/incremental/packageDebugResources/merged.dir/values/values.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <string-array name=\"audioCodecs\">\r\n        <item>OPUS</item>\r\n        <item>ISAC</item>\r\n    </string-array>\r\n    <string-array name=\"cameraFps\">\r\n        <item>Default</item>\r\n        <item>30 fps</item>\r\n        <item>15 fps</item>\r\n    </string-array>\r\n    <string-array name=\"roomListContextMenu\">\r\n        <item>Remove favorite</item>\r\n    </string-array>\r\n    <string-array name=\"speakerphone\">\r\n        <item>Auto (proximity sensor)</item>\r\n        <item>Enabled</item>\r\n        <item>Disabled</item>\r\n    </string-array>\r\n    <string-array name=\"speakerphoneValues\">\r\n        <item>auto</item>\r\n        <item>true</item>\r\n        <item>false</item>\r\n    </string-array>\r\n    <string-array name=\"startBitrate\">\r\n        <item>Default</item>\r\n        <item>Manual</item>\r\n    </string-array>\r\n    <string-array name=\"videoCodecs\">\r\n        <item>VP8</item>\r\n        <item>VP9</item>\r\n        <item>H264</item>\r\n    </string-array>\r\n    <string-array name=\"videoResolutions\">\r\n        <item>Default</item>\r\n        <item>4K (3840 x 2160)</item>\r\n        <item>Full HD (1920 x 1080)</item>\r\n        <item>HD (1280 x 720)</item>\r\n        <item>VGA (640 x 480)</item>\r\n        <item>QVGA (320 x 240)</item>\r\n    </string-array>\r\n    <string-array name=\"videoResolutionsValues\">\r\n        <item>Default</item>\r\n        <item>3840 x 2160</item>\r\n        <item>1920 x 1080</item>\r\n        <item>1280 x 720</item>\r\n        <item>640 x 480</item>\r\n        <item>320 x 240</item>\r\n    </string-array>\r\n    <color name=\"black_overlay\">#66000000</color>\r\n    <color name=\"blue_1\">#06c1fa</color>\r\n    <color name=\"c1\">#091029</color>\r\n    <color name=\"c11\">#192a66</color>\r\n    <color name=\"c1_dark\">#050916</color>\r\n    <color name=\"c1_transaprent\">#88091029</color>\r\n    <color name=\"c1_transaprent_1\">#EE091029</color>\r\n    <color name=\"c2\">#24206C</color>\r\n    <color name=\"c3\">#3C1F5B</color>\r\n    <color name=\"c4\">#581B49</color>\r\n    <color name=\"c5\">#56568E</color>\r\n    <color name=\"c6\">#6A4F7A</color>\r\n    <color name=\"c7\">#78516D</color>\r\n    <color name=\"center_color\">#43215F</color>\r\n    <color name=\"center_color_1\">#AA43215F</color>\r\n    <color name=\"cmnBgColor\">#edefef</color>\r\n    <color name=\"cmnBgColor_1\">#44edefef</color>\r\n    <color name=\"colorAccent\">#FF4081</color>\r\n    <color name=\"colorAccent_1\">#34a7e1</color>\r\n    <color name=\"colorBlackTransparent\">#AA000000</color>\r\n    <color name=\"colorBlackTransparent_0\">#00000000</color>\r\n    <color name=\"colorBlackTransparent_0_0\">#55000000</color>\r\n    <color name=\"colorBlackTransparent_0_0_0\">#33000000</color>\r\n    <color name=\"colorBlackTransparent_1\">#cc000000</color>\r\n    <color name=\"colorBlackTransparent_1_1\">#DD000000</color>\r\n    <color name=\"colorBlackTransparent_2\">#C8000000</color>\r\n    <color name=\"colorCardBg\">#88FFFFFF</color>\r\n    <color name=\"colorCardBg_1\">#44FFFFFF</color>\r\n    <color name=\"colorGreen\">#4CAF50</color>\r\n    <color name=\"colorGreenTrans\">#AA4CAF50</color>\r\n    <color name=\"colorGreen_1\">#45be89</color>\r\n    <color name=\"colorGreen_2\">#0dbc6f</color>\r\n    <color name=\"colorPrimary\">#3F51B5</color>\r\n    <color name=\"colorPrimaryDark\">#303F9F</color>\r\n    <color name=\"colorWhiteTransparent\">#AAFFFFFF</color>\r\n    <color name=\"colorYellow\">#FF9800</color>\r\n    <color name=\"colorYellowTrans\">#AAFF9800</color>\r\n    <color name=\"colorYellow_1\">#efa04b</color>\r\n    <color name=\"colorYellow_2\">#f2aa00</color>\r\n    <color name=\"colorYellow_2_trans\">#EEf2aa00</color>\r\n    <color name=\"darkYellow0\">#ffe4c0</color>\r\n    <color name=\"darkYellow1\">#ffca81</color>\r\n    <color name=\"darkYellow2\">#ffb043</color>\r\n    <color name=\"darkYellow3\">#ff9504</color>\r\n    <color name=\"darkYellow3_trans\">#EEff9504</color>\r\n    <color name=\"dark_bg_end\">#000304</color>\r\n    <color name=\"dark_bg_start\">#00202A</color>\r\n    <color name=\"deepBlue0\">#bfc3e8</color>\r\n    <color name=\"deepBlue1\">#8088d1</color>\r\n    <color name=\"deepBlue2\">#414dbb</color>\r\n    <color name=\"deepBlue3\">#0111a4</color>\r\n    <color name=\"end_color\">#562343</color>\r\n    <color name=\"end_color_1\">#AA562343</color>\r\n    <color name=\"end_color_11\">#a63e7f</color>\r\n    <color name=\"gray_0\">#F1F1F1</color>\r\n    <color name=\"gray_0_0\">#F3F3F3</color>\r\n    <color name=\"gray_0_trans\">#55F1F1F1</color>\r\n    <color name=\"gray_1\">#e4e2e2</color>\r\n    <color name=\"gray_2\">#cecdcd</color>\r\n    <color name=\"gray_3\">#a7a7a7</color>\r\n    <color name=\"gray_3_trans\">#55a7a7a7</color>\r\n    <color name=\"gray_4\">#767272</color>\r\n    <color name=\"gray_4_1\">#adb7c0</color>\r\n    <color name=\"gray_4_trans\">#55767272</color>\r\n    <color name=\"gray_5\">#403d3d</color>\r\n    <color name=\"gray_5_trans\">#551a1919</color>\r\n    <color name=\"gray_6\">#1a1919</color>\r\n    <color name=\"gray_6_trans\">#991a1919</color>\r\n    <color name=\"gray_7\">#080808</color>\r\n    <color name=\"gray_center_trans\">#22000000</color>\r\n    <color name=\"gray_end_trans\">#DD000000</color>\r\n    <color name=\"gray_start_trans\">#00FFFFFF</color>\r\n    <color name=\"green0\">#c4eabf</color>\r\n    <color name=\"green1\">#89d47f</color>\r\n    <color name=\"green2\">#4fbf40</color>\r\n    <color name=\"green3\">#14aa00</color>\r\n    <color name=\"green_vectr\">#FF00aa00</color>\r\n    <color name=\"ic_launcher_background\">#1C8BFF</color>\r\n    <color name=\"ios_bg\">#80444444</color>\r\n    <color name=\"lightGreen0\">#eaf6c7</color>\r\n    <color name=\"lightGreen1\">#d6ed90</color>\r\n    <color name=\"lightGreen2\">#c2e459</color>\r\n    <color name=\"lightGreen3\">#addb21</color>\r\n    <color name=\"orange0\">#ffd9bf</color>\r\n    <color name=\"orange1\">#ffb27f</color>\r\n    <color name=\"orange2\">#ff8c40</color>\r\n    <color name=\"orange3\">#ff6600</color>\r\n    <color name=\"pink0\">#f4c0df</color>\r\n    <color name=\"pink1\">#e980be</color>\r\n    <color name=\"pink2\">#de419e</color>\r\n    <color name=\"pink3\">#d3027e</color>\r\n    <color name=\"red\">#FF0000</color>\r\n    <color name=\"red0\">#febfbf</color>\r\n    <color name=\"red1\">#fd7f7f</color>\r\n    <color name=\"red2\">#fc4040</color>\r\n    <color name=\"red3\">#fb0000</color>\r\n    <color name=\"red3_transa\">#EEfb0000</color>\r\n    <color name=\"red_1\">#f1676a</color>\r\n    <color name=\"s0\">#c1e5fe</color>\r\n    <color name=\"s00\">#d9f0ff</color>\r\n    <color name=\"s1\">#83ccfd</color>\r\n    <color name=\"s2\">#46b3fd</color>\r\n    <color name=\"s3\">#0899fc</color>\r\n    <color name=\"start_color\">#292178</color>\r\n    <color name=\"start_color_1\">#AA292178</color>\r\n    <color name=\"v2_green\">#7ebe4e</color>\r\n    <color name=\"violet0\">#d3bfe7</color>\r\n    <color name=\"violet1\">#a77fcf</color>\r\n    <color name=\"violet2\">#7c40b7</color>\r\n    <color name=\"violet3\">#50009f</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n    <color name=\"yellow\">#FAF39B</color>\r\n    <dimen name=\"fab_margin\">16dp</dimen>\r\n    <string name=\"action_loopback\">Loopback connection</string>\r\n    <string name=\"action_settings\">Settings</string>\r\n    <string name=\"add_favorite_description\">Add favorite</string>\r\n    <string name=\"app_name\" translatable=\"false\">Int-Health V-Call</string>\r\n    <string name=\"audio_off_lbl\">Audio Off!</string>\r\n    <string name=\"audio_on_lbl\">Audio On!</string>\r\n    <string name=\"audio_on_off_button\">audio on/off button</string>\r\n    <string name=\"call_end_aler_txt\">Do you want to end the video call ?</string>\r\n    <string name=\"call_end_button\">Call end button</string>\r\n    <string name=\"call_end_lbl\">Call End!</string>\r\n    <string name=\"camera2_texture_only_error\">Camera2 only supports capturing to texture. Either disable Camera2 or enable capturing to texture in the options.</string>\r\n    <string name=\"capture_format_change_text\">Slide to change capture format</string>\r\n    <string name=\"channel_error_title\">Connection error</string>\r\n    <string name=\"connect_description\">Connect to the room</string>\r\n    <string name=\"connecting\">Connecting...</string>\r\n    <string name=\"connecting_to\">Connecting to: %1$s</string>\r\n    <string name=\"disconnect_call\">Disconnect Call</string>\r\n    <string name=\"dummy_text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string>\r\n    <string name=\"dummy_text_1\">Lorem ipsum dolor sit amet</string>\r\n    <string name=\"empty_message_txt\">Please write your message!</string>\r\n    <string name=\"favorites\">Favorites</string>\r\n    <string name=\"format_description\">%1$dx%2$d @ %3$d fps</string>\r\n    <string name=\"invalid_url_text\">The URL or room name you entered resulted in an invalid URL: %1$s\r\n    </string>\r\n    <string name=\"invalid_url_title\">Invalid URL</string>\r\n    <string name=\"loading\">Loading...</string>\r\n    <string name=\"missing_url\">FATAL ERROR: Missing URL to connect to.</string>\r\n    <string name=\"muted\">Muted</string>\r\n    <string name=\"no\">No</string>\r\n    <string name=\"no_favorites\">No favorites</string>\r\n    <string name=\"ok\">OK</string>\r\n    <string name=\"please_wait_for_doctor\">Please wait for doctor avaialble.</string>\r\n    <string name=\"pref_aecdump_default\">false</string>\r\n    <string name=\"pref_aecdump_dlg\">Enable diagnostic audio recordings.</string>\r\n    <string name=\"pref_aecdump_key\">aecdump_preference</string>\r\n    <string name=\"pref_aecdump_title\">Create aecdump.</string>\r\n    <string name=\"pref_audiocodec_default\">OPUS</string>\r\n    <string name=\"pref_audiocodec_dlg\">Select default audio codec.</string>\r\n    <string name=\"pref_audiocodec_key\">audiocodec_preference</string>\r\n    <string name=\"pref_audiocodec_title\">Default audio codec.</string>\r\n    <string name=\"pref_audiosettings_key\">audio_settings_key</string>\r\n    <string name=\"pref_audiosettings_title\">WebRTC audio settings.</string>\r\n    <string name=\"pref_built_in_aec_not_available\">Hardware AEC is not available</string>\r\n    <string name=\"pref_built_in_agc_not_available\">Hardware AGC is not available</string>\r\n    <string name=\"pref_built_in_ns_not_available\">Hardware NS is not available</string>\r\n    <string name=\"pref_camera2_default\">true</string>\r\n    <string name=\"pref_camera2_key\">camera2_preference</string>\r\n    <string name=\"pref_camera2_not_supported\">Not supported on this device.</string>\r\n    <string name=\"pref_camera2_title\">Use Camera2.</string>\r\n    <string name=\"pref_capturequalityslider_default\">false</string>\r\n    <string name=\"pref_capturequalityslider_dlg\">Enable slider for changing capture quality.</string>\r\n    <string name=\"pref_capturequalityslider_key\">capturequalityslider_preference</string>\r\n    <string name=\"pref_capturequalityslider_title\">Capture quality slider.</string>\r\n    <string name=\"pref_capturetotexture_default\">true</string>\r\n    <string name=\"pref_capturetotexture_dlg\">Capture video to textures (if available).</string>\r\n    <string name=\"pref_capturetotexture_key\">capturetotexture_preference</string>\r\n    <string name=\"pref_capturetotexture_title\">Video capture to surface texture.</string>\r\n    <string name=\"pref_data_id_default\" translatable=\"false\">-1</string>\r\n    <string name=\"pref_data_id_dlg\">Enter data channel id.</string>\r\n    <string name=\"pref_data_id_key\">data_id_preference</string>\r\n    <string name=\"pref_data_id_title\">Data id.</string>\r\n    <string name=\"pref_data_protocol_default\" translatable=\"false\"/>\r\n    <string name=\"pref_data_protocol_dlg\">Enter subprotocol.</string>\r\n    <string name=\"pref_data_protocol_key\">Subprotocol</string>\r\n    <string name=\"pref_data_protocol_title\">Subprotocol.</string>\r\n    <string name=\"pref_datasettings_key\">data_settings_key</string>\r\n    <string name=\"pref_datasettings_title\">WebRTC data channel settings.</string>\r\n    <string name=\"pref_disable_built_in_aec_default\">false</string>\r\n    <string name=\"pref_disable_built_in_aec_dlg\">Disable hardware AEC.</string>\r\n    <string name=\"pref_disable_built_in_aec_key\">disable_built_in_aec_preference</string>\r\n    <string name=\"pref_disable_built_in_aec_title\">Disable hardware AEC.</string>\r\n    <string name=\"pref_disable_built_in_agc_default\">false</string>\r\n    <string name=\"pref_disable_built_in_agc_dlg\">Disable hardware AGC.</string>\r\n    <string name=\"pref_disable_built_in_agc_key\">disable_built_in_agc_preference</string>\r\n    <string name=\"pref_disable_built_in_agc_title\">Disable hardware AGC.</string>\r\n    <string name=\"pref_disable_built_in_ns_default\">false</string>\r\n    <string name=\"pref_disable_built_in_ns_dlg\">Disable hardware NS.</string>\r\n    <string name=\"pref_disable_built_in_ns_key\">disable_built_in_ns_preference</string>\r\n    <string name=\"pref_disable_built_in_ns_title\">Disable hardware NS.</string>\r\n    <string name=\"pref_displayhud_default\" translatable=\"false\">false</string>\r\n    <string name=\"pref_displayhud_dlg\">Display call statistics.</string>\r\n    <string name=\"pref_displayhud_key\">displayhud_preference</string>\r\n    <string name=\"pref_displayhud_title\">Display call statistics.</string>\r\n    <string name=\"pref_enable_datachannel_default\" translatable=\"false\">true</string>\r\n    <string name=\"pref_enable_datachannel_dlg\">Enable datachannel.</string>\r\n    <string name=\"pref_enable_datachannel_key\">enable_datachannel_preference</string>\r\n    <string name=\"pref_enable_datachannel_title\">Enable datachannel.</string>\r\n    <string name=\"pref_enable_level_control_default\">false</string>\r\n    <string name=\"pref_enable_level_control_key\">enable_level_control_preference</string>\r\n    <string name=\"pref_enable_level_control_title\">Enable level control.</string>\r\n    <string name=\"pref_flexfec_default\">false</string>\r\n    <string name=\"pref_flexfec_dlg\">Enable FlexFEC.</string>\r\n    <string name=\"pref_flexfec_key\">flexfec_preference</string>\r\n    <string name=\"pref_flexfec_title\">Codec-agnostic Flexible FEC.</string>\r\n    <string name=\"pref_fps_default\">Default</string>\r\n    <string name=\"pref_fps_dlg\">Enter local camera fps.</string>\r\n    <string name=\"pref_fps_key\">fps_preference</string>\r\n    <string name=\"pref_fps_title\">Camera fps.</string>\r\n    <string name=\"pref_hwcodec_default\">true</string>\r\n    <string name=\"pref_hwcodec_dlg\">Use hardware accelerated video codec (if available).</string>\r\n    <string name=\"pref_hwcodec_key\">hwcodec_preference</string>\r\n    <string name=\"pref_hwcodec_title\">Video codec hardware acceleration.</string>\r\n    <string name=\"pref_max_retransmit_time_ms_default\" translatable=\"false\">-1</string>\r\n    <string name=\"pref_max_retransmit_time_ms_dlg\">Enter max delay to retransmit (in ms).</string>\r\n    <string name=\"pref_max_retransmit_time_ms_key\">max_retransmit_time_ms_preference</string>\r\n    <string name=\"pref_max_retransmit_time_ms_title\">Max delay to retransmit.</string>\r\n    <string name=\"pref_max_retransmits_default\" translatable=\"false\">-1</string>\r\n    <string name=\"pref_max_retransmits_dlg\">Enter max attempts to retransmit.</string>\r\n    <string name=\"pref_max_retransmits_key\">max_retransmits_preference</string>\r\n    <string name=\"pref_max_retransmits_title\">Max attempts to retransmit.</string>\r\n    <string name=\"pref_maxvideobitrate_default\">Default</string>\r\n    <string name=\"pref_maxvideobitrate_dlg\">Maximum video bitrate setting.</string>\r\n    <string name=\"pref_maxvideobitrate_key\">maxvideobitrate_preference</string>\r\n    <string name=\"pref_maxvideobitrate_title\">Maximum video bitrate setting.</string>\r\n    <string name=\"pref_maxvideobitratevalue_default\">1700</string>\r\n    <string name=\"pref_maxvideobitratevalue_dlg\">Enter video encoder maximum bitrate in kbps.</string>\r\n    <string name=\"pref_maxvideobitratevalue_key\">maxvideobitratevalue_preference</string>\r\n    <string name=\"pref_maxvideobitratevalue_title\">Video encoder maximum bitrate.</string>\r\n    <string name=\"pref_miscsettings_key\">misc_settings_key</string>\r\n    <string name=\"pref_miscsettings_title\">Miscellaneous settings.</string>\r\n    <string name=\"pref_negotiated_default\" translatable=\"false\">false</string>\r\n    <string name=\"pref_negotiated_dlg\">Negotiated.</string>\r\n    <string name=\"pref_negotiated_key\">negotiated_preference</string>\r\n    <string name=\"pref_negotiated_title\">Negotiated.</string>\r\n    <string name=\"pref_noaudioprocessing_default\">false</string>\r\n    <string name=\"pref_noaudioprocessing_dlg\">Disable audio processing pipeline.</string>\r\n    <string name=\"pref_noaudioprocessing_key\">audioprocessing_preference</string>\r\n    <string name=\"pref_noaudioprocessing_title\">Disable audio processing.</string>\r\n    <string name=\"pref_opensles_default\">false</string>\r\n    <string name=\"pref_opensles_dlg\">Use OpenSL ES for audio playback.</string>\r\n    <string name=\"pref_opensles_key\">opensles_preference</string>\r\n    <string name=\"pref_opensles_title\">Use OpenSL ES for audio playback.</string>\r\n    <string name=\"pref_ordered_default\" translatable=\"false\">true</string>\r\n    <string name=\"pref_ordered_dlg\">Order messages.</string>\r\n    <string name=\"pref_ordered_key\">ordered_preference</string>\r\n    <string name=\"pref_ordered_title\">Order messages.</string>\r\n    <string name=\"pref_resolution_default\">Default</string>\r\n    <string name=\"pref_resolution_dlg\">Enter AppRTC local video resolution.</string>\r\n    <string name=\"pref_resolution_key\">resolution_preference</string>\r\n    <string name=\"pref_resolution_title\">Video resolution.</string>\r\n    <string name=\"pref_room_key\">room_preference</string>\r\n    <string name=\"pref_room_list_key\">room_list_preference</string>\r\n    <string name=\"pref_room_server_url_default\" translatable=\"false\">https://appr.tc</string>\r\n    <string name=\"pref_room_server_url_dlg\">Enter a room server URL.</string>\r\n    <string name=\"pref_room_server_url_key\">room_server_url_preference</string>\r\n    <string name=\"pref_room_server_url_title\">Room server URL.</string>\r\n    <string name=\"pref_screencapture_default\">false</string>\r\n    <string name=\"pref_screencapture_key\">screencapture_preference</string>\r\n    <string name=\"pref_screencapture_title\">Use screencapture.</string>\r\n    <string name=\"pref_speakerphone_default\">auto</string>\r\n    <string name=\"pref_speakerphone_dlg\">Speakerphone.</string>\r\n    <string name=\"pref_speakerphone_key\">speakerphone_preference</string>\r\n    <string name=\"pref_speakerphone_title\">Speakerphone.</string>\r\n    <string name=\"pref_startaudiobitrate_default\">Default</string>\r\n    <string name=\"pref_startaudiobitrate_dlg\">Audio bitrate setting.</string>\r\n    <string name=\"pref_startaudiobitrate_key\">startaudiobitrate_preference</string>\r\n    <string name=\"pref_startaudiobitrate_title\">Audio bitrate setting.</string>\r\n    <string name=\"pref_startaudiobitratevalue_default\">32</string>\r\n    <string name=\"pref_startaudiobitratevalue_dlg\">Enter audio codec bitrate in kbps.</string>\r\n    <string name=\"pref_startaudiobitratevalue_key\">startaudiobitratevalue_preference</string>\r\n    <string name=\"pref_startaudiobitratevalue_title\">Audio codec bitrate.</string>\r\n    <string name=\"pref_tracing_default\" translatable=\"false\">false</string>\r\n    <string name=\"pref_tracing_dlg\">Debug performance tracing.</string>\r\n    <string name=\"pref_tracing_key\">tracing_preference</string>\r\n    <string name=\"pref_tracing_title\">Debug performance tracing.</string>\r\n    <string name=\"pref_value_disabled\">Disabled</string>\r\n    <string name=\"pref_value_enabled\">Enabled</string>\r\n    <string name=\"pref_videocall_default\">true</string>\r\n    <string name=\"pref_videocall_dlg\">Enable video in a call.</string>\r\n    <string name=\"pref_videocall_key\">videocall_preference</string>\r\n    <string name=\"pref_videocall_title\">Video call.</string>\r\n    <string name=\"pref_videocodec_default\">VP8</string>\r\n    <string name=\"pref_videocodec_dlg\">Select default video codec.</string>\r\n    <string name=\"pref_videocodec_key\">videocodec_preference</string>\r\n    <string name=\"pref_videocodec_title\">Default video codec.</string>\r\n    <string name=\"pref_videosettings_key\">video_settings_key</string>\r\n    <string name=\"pref_videosettings_title\">WebRTC video settings.</string>\r\n    <string name=\"room_description\">\r\n        Please enter a room name. Room names are shared with everyone, so think\r\n        of something unique and send it to a friend.\r\n    </string>\r\n    <string name=\"settings_name\" translatable=\"false\">AppRTC Settings</string>\r\n    <string name=\"start_call_now\">Start Call Now</string>\r\n    <string name=\"start_txt_chat_now\">Start Text Chat Now</string>\r\n    <string name=\"switch_camera\">Switch front/back camera</string>\r\n    <string name=\"title_activity_complete\">CompleteActivity</string>\r\n    <string name=\"title_activity_launch\">LaunchActivity</string>\r\n    <string name=\"title_activity_sample\">SampleActivity</string>\r\n    <string name=\"title_activity_sample_data_channel\">SampleDataChannelActivity</string>\r\n    <string name=\"title_activity_sample_peer_connection\">SamplePeerConnectionActivity</string>\r\n    <string name=\"title_activity_socket_io\">SocketIOActivity</string>\r\n    <string name=\"toggle_debug\">Toggle debug view</string>\r\n    <string name=\"toggle_mic\">Toggle microphone on/off</string>\r\n    <string name=\"video_call\">Video Call</string>\r\n    <string name=\"video_off_lbl\">Video Off!</string>\r\n    <string name=\"video_on_lbl\">Video On!</string>\r\n    <string name=\"video_on_off_button\">Video On/off button</string>\r\n    <string name=\"yes\">Yes</string>\r\n    <string name=\"you\">You</string>\r\n    <string name=\"you_have_no_messages_start_sending_messages_now\">You have no messages! Start sending messages now.</string>\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n    <style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\"/>\r\n    <style name=\"AppTheme.Call\" parent=\"AppTheme\">\r\n        <item name=\"windowNoTitle\">true</item>\r\n        <item name=\"android:windowFullscreen\">true</item>\r\n    </style>\r\n    <style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n    </style>\r\n    <style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\"/>\r\n</resources>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/incremental/packageDebugResources/merged.dir/values/values.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/incremental/packageDebugResources/merged.dir/values/values.xml	(date 1626758056271)
-@@ -191,152 +191,7 @@
-     <string name="no">No</string>
-     <string name="no_favorites">No favorites</string>
-     <string name="ok">OK</string>
--    <string name="please_wait_for_doctor">Please wait for doctor avaialble.</string>
--    <string name="pref_aecdump_default">false</string>
--    <string name="pref_aecdump_dlg">Enable diagnostic audio recordings.</string>
--    <string name="pref_aecdump_key">aecdump_preference</string>
--    <string name="pref_aecdump_title">Create aecdump.</string>
--    <string name="pref_audiocodec_default">OPUS</string>
--    <string name="pref_audiocodec_dlg">Select default audio codec.</string>
--    <string name="pref_audiocodec_key">audiocodec_preference</string>
--    <string name="pref_audiocodec_title">Default audio codec.</string>
--    <string name="pref_audiosettings_key">audio_settings_key</string>
--    <string name="pref_audiosettings_title">WebRTC audio settings.</string>
--    <string name="pref_built_in_aec_not_available">Hardware AEC is not available</string>
--    <string name="pref_built_in_agc_not_available">Hardware AGC is not available</string>
--    <string name="pref_built_in_ns_not_available">Hardware NS is not available</string>
--    <string name="pref_camera2_default">true</string>
--    <string name="pref_camera2_key">camera2_preference</string>
--    <string name="pref_camera2_not_supported">Not supported on this device.</string>
--    <string name="pref_camera2_title">Use Camera2.</string>
--    <string name="pref_capturequalityslider_default">false</string>
--    <string name="pref_capturequalityslider_dlg">Enable slider for changing capture quality.</string>
--    <string name="pref_capturequalityslider_key">capturequalityslider_preference</string>
--    <string name="pref_capturequalityslider_title">Capture quality slider.</string>
--    <string name="pref_capturetotexture_default">true</string>
--    <string name="pref_capturetotexture_dlg">Capture video to textures (if available).</string>
--    <string name="pref_capturetotexture_key">capturetotexture_preference</string>
--    <string name="pref_capturetotexture_title">Video capture to surface texture.</string>
--    <string name="pref_data_id_default" translatable="false">-1</string>
--    <string name="pref_data_id_dlg">Enter data channel id.</string>
--    <string name="pref_data_id_key">data_id_preference</string>
--    <string name="pref_data_id_title">Data id.</string>
--    <string name="pref_data_protocol_default" translatable="false"/>
--    <string name="pref_data_protocol_dlg">Enter subprotocol.</string>
--    <string name="pref_data_protocol_key">Subprotocol</string>
--    <string name="pref_data_protocol_title">Subprotocol.</string>
--    <string name="pref_datasettings_key">data_settings_key</string>
--    <string name="pref_datasettings_title">WebRTC data channel settings.</string>
--    <string name="pref_disable_built_in_aec_default">false</string>
--    <string name="pref_disable_built_in_aec_dlg">Disable hardware AEC.</string>
--    <string name="pref_disable_built_in_aec_key">disable_built_in_aec_preference</string>
--    <string name="pref_disable_built_in_aec_title">Disable hardware AEC.</string>
--    <string name="pref_disable_built_in_agc_default">false</string>
--    <string name="pref_disable_built_in_agc_dlg">Disable hardware AGC.</string>
--    <string name="pref_disable_built_in_agc_key">disable_built_in_agc_preference</string>
--    <string name="pref_disable_built_in_agc_title">Disable hardware AGC.</string>
--    <string name="pref_disable_built_in_ns_default">false</string>
--    <string name="pref_disable_built_in_ns_dlg">Disable hardware NS.</string>
--    <string name="pref_disable_built_in_ns_key">disable_built_in_ns_preference</string>
--    <string name="pref_disable_built_in_ns_title">Disable hardware NS.</string>
--    <string name="pref_displayhud_default" translatable="false">false</string>
--    <string name="pref_displayhud_dlg">Display call statistics.</string>
--    <string name="pref_displayhud_key">displayhud_preference</string>
--    <string name="pref_displayhud_title">Display call statistics.</string>
--    <string name="pref_enable_datachannel_default" translatable="false">true</string>
--    <string name="pref_enable_datachannel_dlg">Enable datachannel.</string>
--    <string name="pref_enable_datachannel_key">enable_datachannel_preference</string>
--    <string name="pref_enable_datachannel_title">Enable datachannel.</string>
--    <string name="pref_enable_level_control_default">false</string>
--    <string name="pref_enable_level_control_key">enable_level_control_preference</string>
--    <string name="pref_enable_level_control_title">Enable level control.</string>
--    <string name="pref_flexfec_default">false</string>
--    <string name="pref_flexfec_dlg">Enable FlexFEC.</string>
--    <string name="pref_flexfec_key">flexfec_preference</string>
--    <string name="pref_flexfec_title">Codec-agnostic Flexible FEC.</string>
--    <string name="pref_fps_default">Default</string>
--    <string name="pref_fps_dlg">Enter local camera fps.</string>
--    <string name="pref_fps_key">fps_preference</string>
--    <string name="pref_fps_title">Camera fps.</string>
--    <string name="pref_hwcodec_default">true</string>
--    <string name="pref_hwcodec_dlg">Use hardware accelerated video codec (if available).</string>
--    <string name="pref_hwcodec_key">hwcodec_preference</string>
--    <string name="pref_hwcodec_title">Video codec hardware acceleration.</string>
--    <string name="pref_max_retransmit_time_ms_default" translatable="false">-1</string>
--    <string name="pref_max_retransmit_time_ms_dlg">Enter max delay to retransmit (in ms).</string>
--    <string name="pref_max_retransmit_time_ms_key">max_retransmit_time_ms_preference</string>
--    <string name="pref_max_retransmit_time_ms_title">Max delay to retransmit.</string>
--    <string name="pref_max_retransmits_default" translatable="false">-1</string>
--    <string name="pref_max_retransmits_dlg">Enter max attempts to retransmit.</string>
--    <string name="pref_max_retransmits_key">max_retransmits_preference</string>
--    <string name="pref_max_retransmits_title">Max attempts to retransmit.</string>
--    <string name="pref_maxvideobitrate_default">Default</string>
--    <string name="pref_maxvideobitrate_dlg">Maximum video bitrate setting.</string>
--    <string name="pref_maxvideobitrate_key">maxvideobitrate_preference</string>
--    <string name="pref_maxvideobitrate_title">Maximum video bitrate setting.</string>
--    <string name="pref_maxvideobitratevalue_default">1700</string>
--    <string name="pref_maxvideobitratevalue_dlg">Enter video encoder maximum bitrate in kbps.</string>
--    <string name="pref_maxvideobitratevalue_key">maxvideobitratevalue_preference</string>
--    <string name="pref_maxvideobitratevalue_title">Video encoder maximum bitrate.</string>
--    <string name="pref_miscsettings_key">misc_settings_key</string>
--    <string name="pref_miscsettings_title">Miscellaneous settings.</string>
--    <string name="pref_negotiated_default" translatable="false">false</string>
--    <string name="pref_negotiated_dlg">Negotiated.</string>
--    <string name="pref_negotiated_key">negotiated_preference</string>
--    <string name="pref_negotiated_title">Negotiated.</string>
--    <string name="pref_noaudioprocessing_default">false</string>
--    <string name="pref_noaudioprocessing_dlg">Disable audio processing pipeline.</string>
--    <string name="pref_noaudioprocessing_key">audioprocessing_preference</string>
--    <string name="pref_noaudioprocessing_title">Disable audio processing.</string>
--    <string name="pref_opensles_default">false</string>
--    <string name="pref_opensles_dlg">Use OpenSL ES for audio playback.</string>
--    <string name="pref_opensles_key">opensles_preference</string>
--    <string name="pref_opensles_title">Use OpenSL ES for audio playback.</string>
--    <string name="pref_ordered_default" translatable="false">true</string>
--    <string name="pref_ordered_dlg">Order messages.</string>
--    <string name="pref_ordered_key">ordered_preference</string>
--    <string name="pref_ordered_title">Order messages.</string>
--    <string name="pref_resolution_default">Default</string>
--    <string name="pref_resolution_dlg">Enter AppRTC local video resolution.</string>
--    <string name="pref_resolution_key">resolution_preference</string>
--    <string name="pref_resolution_title">Video resolution.</string>
--    <string name="pref_room_key">room_preference</string>
--    <string name="pref_room_list_key">room_list_preference</string>
--    <string name="pref_room_server_url_default" translatable="false">https://appr.tc</string>
--    <string name="pref_room_server_url_dlg">Enter a room server URL.</string>
--    <string name="pref_room_server_url_key">room_server_url_preference</string>
--    <string name="pref_room_server_url_title">Room server URL.</string>
--    <string name="pref_screencapture_default">false</string>
--    <string name="pref_screencapture_key">screencapture_preference</string>
--    <string name="pref_screencapture_title">Use screencapture.</string>
--    <string name="pref_speakerphone_default">auto</string>
--    <string name="pref_speakerphone_dlg">Speakerphone.</string>
--    <string name="pref_speakerphone_key">speakerphone_preference</string>
--    <string name="pref_speakerphone_title">Speakerphone.</string>
--    <string name="pref_startaudiobitrate_default">Default</string>
--    <string name="pref_startaudiobitrate_dlg">Audio bitrate setting.</string>
--    <string name="pref_startaudiobitrate_key">startaudiobitrate_preference</string>
--    <string name="pref_startaudiobitrate_title">Audio bitrate setting.</string>
--    <string name="pref_startaudiobitratevalue_default">32</string>
--    <string name="pref_startaudiobitratevalue_dlg">Enter audio codec bitrate in kbps.</string>
--    <string name="pref_startaudiobitratevalue_key">startaudiobitratevalue_preference</string>
--    <string name="pref_startaudiobitratevalue_title">Audio codec bitrate.</string>
--    <string name="pref_tracing_default" translatable="false">false</string>
--    <string name="pref_tracing_dlg">Debug performance tracing.</string>
--    <string name="pref_tracing_key">tracing_preference</string>
--    <string name="pref_tracing_title">Debug performance tracing.</string>
--    <string name="pref_value_disabled">Disabled</string>
--    <string name="pref_value_enabled">Enabled</string>
--    <string name="pref_videocall_default">true</string>
--    <string name="pref_videocall_dlg">Enable video in a call.</string>
--    <string name="pref_videocall_key">videocall_preference</string>
--    <string name="pref_videocall_title">Video call.</string>
--    <string name="pref_videocodec_default">VP8</string>
--    <string name="pref_videocodec_dlg">Select default video codec.</string>
--    <string name="pref_videocodec_key">videocodec_preference</string>
--    <string name="pref_videocodec_title">Default video codec.</string>
--    <string name="pref_videosettings_key">video_settings_key</string>
--    <string name="pref_videosettings_title">WebRTC video settings.</string>
-+    <string name="please_wait_for_doctor">Please wait for the doctor\'s availability.</string>
-     <string name="room_description">
-         Please enter a room name. Room names are shared with everyone, so think
-         of something unique and send it to a friend.
-@@ -345,12 +200,6 @@
-     <string name="start_call_now">Start Call Now</string>
-     <string name="start_txt_chat_now">Start Text Chat Now</string>
-     <string name="switch_camera">Switch front/back camera</string>
--    <string name="title_activity_complete">CompleteActivity</string>
--    <string name="title_activity_launch">LaunchActivity</string>
--    <string name="title_activity_sample">SampleActivity</string>
--    <string name="title_activity_sample_data_channel">SampleDataChannelActivity</string>
--    <string name="title_activity_sample_peer_connection">SamplePeerConnectionActivity</string>
--    <string name="title_activity_socket_io">SocketIOActivity</string>
-     <string name="toggle_debug">Toggle debug view</string>
-     <string name="toggle_mic">Toggle microphone on/off</string>
-     <string name="video_call">Video Call</string>
-Index: webrtc/build/intermediates/incremental/packageDebugResources/merger.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<merger version=\"3\"><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"main$Generated\" generated=\"true\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\"/><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\generated\\res\\rs\\debug\"/><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\generated\\res\\resValues\\debug\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"main\" generated-set=\"main$Generated\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\"><file name=\"call\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\call.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"chat_left_bg\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\chat_left_bg.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"chat_right_bg\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\chat_right_bg.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"disconnect\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\disconnect.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_call_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_call_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_call_24_white\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_call_24_white.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_chat_bubble_outline_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_chat_bubble_outline_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_collections_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_collections_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_flip_camera_ios_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_flip_camera_ios_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_lens_24_gray\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_gray.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_lens_24_green\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_green.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_lens_24_red\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_red.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_lens_24_white\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_lens_24_white.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_mic_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_mic_none_24_blue\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_none_24_blue.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_mic_off_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_mic_off_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_photo_camera_24_blue\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_photo_camera_24_blue.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_send_24_white\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_send_24_white.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_videocam_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_videocam_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_baseline_videocam_off_24\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_baseline_videocam_off_24.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"ic_launcher_foreground\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\ic_launcher_foreground.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"message_icon\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\message_icon.jpg\" qualifiers=\"\" type=\"drawable\"/><file name=\"rounded_bg\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\rounded_bg.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"round_corner_16_blue_light\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\round_corner_16_blue_light.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"round_corner_16_gray_light\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\drawable\\round_corner_16_gray_light.xml\" qualifiers=\"\" type=\"drawable\"/><file name=\"activity_chat\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_chat.xml\" qualifiers=\"\" type=\"layout\"/><file name=\"activity_launch\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_launch.xml\" qualifiers=\"\" type=\"layout\"/><file name=\"activity_sample_peer_connection\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\activity_sample_peer_connection.xml\" qualifiers=\"\" type=\"layout\"/><file name=\"left_chat_layout\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\left_chat_layout.xml\" qualifiers=\"\" type=\"layout\"/><file name=\"right_chat_layout\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\layout\\right_chat_layout.xml\" qualifiers=\"\" type=\"layout\"/><file name=\"chat_menu\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\menu\\chat_menu.xml\" qualifiers=\"\" type=\"menu\"/><file path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\values\\arrays.xml\" qualifiers=\"\"><string-array name=\"videoResolutions\">\r\n        <item>Default</item>\r\n        <item>4K (3840 x 2160)</item>\r\n        <item>Full HD (1920 x 1080)</item>\r\n        <item>HD (1280 x 720)</item>\r\n        <item>VGA (640 x 480)</item>\r\n        <item>QVGA (320 x 240)</item>\r\n    </string-array><string-array name=\"videoResolutionsValues\">\r\n        <item>Default</item>\r\n        <item>3840 x 2160</item>\r\n        <item>1920 x 1080</item>\r\n        <item>1280 x 720</item>\r\n        <item>640 x 480</item>\r\n        <item>320 x 240</item>\r\n    </string-array><string-array name=\"cameraFps\">\r\n        <item>Default</item>\r\n        <item>30 fps</item>\r\n        <item>15 fps</item>\r\n    </string-array><string-array name=\"startBitrate\">\r\n        <item>Default</item>\r\n        <item>Manual</item>\r\n    </string-array><string-array name=\"videoCodecs\">\r\n        <item>VP8</item>\r\n        <item>VP9</item>\r\n        <item>H264</item>\r\n    </string-array><string-array name=\"audioCodecs\">\r\n        <item>OPUS</item>\r\n        <item>ISAC</item>\r\n    </string-array><string-array name=\"speakerphone\">\r\n        <item>Auto (proximity sensor)</item>\r\n        <item>Enabled</item>\r\n        <item>Disabled</item>\r\n    </string-array><string-array name=\"speakerphoneValues\">\r\n        <item>auto</item>\r\n        <item>true</item>\r\n        <item>false</item>\r\n    </string-array><string-array name=\"roomListContextMenu\">\r\n        <item>Remove favorite</item>\r\n    </string-array></file><file path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\values\\colors.xml\" qualifiers=\"\"><color name=\"colorPrimary\">#3F51B5</color><color name=\"colorPrimaryDark\">#303F9F</color><color name=\"colorAccent\">#FF4081</color><color name=\"s00\">#d9f0ff</color><color name=\"s0\">#c1e5fe</color><color name=\"s1\">#83ccfd</color><color name=\"s2\">#46b3fd</color><color name=\"s3\">#0899fc</color><color name=\"v2_green\">#7ebe4e</color><color name=\"green0\">#c4eabf</color><color name=\"green1\">#89d47f</color><color name=\"green2\">#4fbf40</color><color name=\"green3\">#14aa00</color><color name=\"lightGreen0\">#eaf6c7</color><color name=\"lightGreen1\">#d6ed90</color><color name=\"lightGreen2\">#c2e459</color><color name=\"lightGreen3\">#addb21</color><color name=\"red0\">#febfbf</color><color name=\"red1\">#fd7f7f</color><color name=\"red2\">#fc4040</color><color name=\"red3\">#fb0000</color><color name=\"red3_transa\">#EEfb0000</color><color name=\"orange0\">#ffd9bf</color><color name=\"orange1\">#ffb27f</color><color name=\"orange2\">#ff8c40</color><color name=\"orange3\">#ff6600</color><color name=\"darkYellow0\">#ffe4c0</color><color name=\"darkYellow1\">#ffca81</color><color name=\"darkYellow2\">#ffb043</color><color name=\"darkYellow3\">#ff9504</color><color name=\"darkYellow3_trans\">#EEff9504</color><color name=\"pink0\">#f4c0df</color><color name=\"pink1\">#e980be</color><color name=\"pink2\">#de419e</color><color name=\"pink3\">#d3027e</color><color name=\"violet0\">#d3bfe7</color><color name=\"violet1\">#a77fcf</color><color name=\"violet2\">#7c40b7</color><color name=\"violet3\">#50009f</color><color name=\"deepBlue0\">#bfc3e8</color><color name=\"deepBlue1\">#8088d1</color><color name=\"deepBlue2\">#414dbb</color><color name=\"deepBlue3\">#0111a4</color><color name=\"c1\">#091029</color><color name=\"c1_dark\">#050916</color><color name=\"c11\">#192a66</color><color name=\"c1_transaprent\">#88091029</color><color name=\"c1_transaprent_1\">#EE091029</color><color name=\"c2\">#24206C</color><color name=\"c3\">#3C1F5B</color><color name=\"c4\">#581B49</color><color name=\"c5\">#56568E</color><color name=\"c6\">#6A4F7A</color><color name=\"c7\">#78516D</color><color name=\"start_color\">#292178</color><color name=\"start_color_1\">#AA292178</color><color name=\"center_color\">#43215F</color><color name=\"center_color_1\">#AA43215F</color><color name=\"end_color\">#562343</color><color name=\"end_color_11\">#a63e7f</color><color name=\"end_color_1\">#AA562343</color><color name=\"white\">#FFFFFF</color><color name=\"gray_0_0\">#F3F3F3</color><color name=\"gray_0\">#F1F1F1</color><color name=\"gray_0_trans\">#55F1F1F1</color><color name=\"gray_3_trans\">#55a7a7a7</color><color name=\"gray_4_trans\">#55767272</color><color name=\"gray_5_trans\">#551a1919</color><color name=\"gray_6_trans\">#991a1919</color><color name=\"gray_1\">#e4e2e2</color><color name=\"gray_2\">#cecdcd</color><color name=\"gray_3\">#a7a7a7</color><color name=\"gray_4\">#767272</color><color name=\"gray_5\">#403d3d</color><color name=\"gray_6\">#1a1919</color><color name=\"gray_7\">#080808</color><color name=\"gray_start_trans\">#00FFFFFF</color><color name=\"gray_center_trans\">#22000000</color><color name=\"gray_end_trans\">#DD000000</color><color name=\"dark_bg_start\">#00202A</color><color name=\"dark_bg_end\">#000304</color><color name=\"colorWhiteTransparent\">#AAFFFFFF</color><color name=\"colorBlackTransparent\">#AA000000</color><color name=\"colorBlackTransparent_0\">#00000000</color><color name=\"colorBlackTransparent_0_0\">#55000000</color><color name=\"colorBlackTransparent_0_0_0\">#33000000</color><color name=\"colorBlackTransparent_1\">#cc000000</color><color name=\"colorBlackTransparent_2\">#C8000000</color><color name=\"colorBlackTransparent_1_1\">#DD000000</color><color name=\"ios_bg\">#80444444</color><color name=\"colorCardBg\">#88FFFFFF</color><color name=\"colorCardBg_1\">#44FFFFFF</color><color name=\"colorGreenTrans\">#AA4CAF50</color><color name=\"colorYellowTrans\">#AAFF9800</color><color name=\"colorGreen\">#4CAF50</color><color name=\"colorYellow\">#FF9800</color><color name=\"cmnBgColor\">#edefef</color><color name=\"cmnBgColor_1\">#44edefef</color><color name=\"yellow\">#FAF39B</color><color name=\"black_overlay\">#66000000</color><color name=\"red\">#FF0000</color><color name=\"red_1\">#f1676a</color><color name=\"blue_1\">#06c1fa</color><color name=\"green_vectr\">#FF00aa00</color><color name=\"colorGreen_1\">#45be89</color><color name=\"colorGreen_2\">#0dbc6f</color><color name=\"colorYellow_1\">#efa04b</color><color name=\"colorYellow_2\">#f2aa00</color><color name=\"colorYellow_2_trans\">#EEf2aa00</color><color name=\"colorAccent_1\">#34a7e1</color><color name=\"gray_4_1\">#adb7c0</color></file><file path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\values\\dimens.xml\" qualifiers=\"\"><dimen name=\"fab_margin\">16dp</dimen></file><file path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\values\\ic_launcher_background.xml\" qualifiers=\"\"><color name=\"ic_launcher_background\">#1C8BFF</color></file><file path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\values\\strings.xml\" qualifiers=\"\"><string name=\"app_name\" translatable=\"false\">Int-Health V-Call</string><string name=\"settings_name\" translatable=\"false\">AppRTC Settings</string><string name=\"disconnect_call\">Disconnect Call</string><string name=\"room_description\">\r\n        Please enter a room name. Room names are shared with everyone, so think\r\n        of something unique and send it to a friend.\r\n    </string><string name=\"favorites\">Favorites</string><string name=\"no_favorites\">No favorites</string><string name=\"invalid_url_title\">Invalid URL</string><string name=\"invalid_url_text\">The URL or room name you entered resulted in an invalid URL: %1$s\r\n    </string><string name=\"channel_error_title\">Connection error</string><string name=\"connecting_to\">Connecting to: %1$s</string><string name=\"missing_url\">FATAL ERROR: Missing URL to connect to.</string><string name=\"camera2_texture_only_error\">Camera2 only supports capturing to texture. Either disable Camera2 or enable capturing to texture in the options.</string><string name=\"ok\">OK</string><string name=\"switch_camera\">Switch front/back camera</string><string name=\"capture_format_change_text\">Slide to change capture format</string><string name=\"muted\">Muted</string><string name=\"toggle_debug\">Toggle debug view</string><string name=\"toggle_mic\">Toggle microphone on/off</string><string name=\"action_settings\">Settings</string><string name=\"action_loopback\">Loopback connection</string><string name=\"connect_description\">Connect to the room</string><string name=\"add_favorite_description\">Add favorite</string><string name=\"format_description\">%1$dx%2$d @ %3$d fps</string><string name=\"pref_room_key\">room_preference</string><string name=\"pref_room_list_key\">room_list_preference</string><string name=\"pref_videosettings_key\">video_settings_key</string><string name=\"pref_videosettings_title\">WebRTC video settings.</string><string name=\"pref_videocall_key\">videocall_preference</string><string name=\"pref_videocall_title\">Video call.</string><string name=\"pref_videocall_dlg\">Enable video in a call.</string><string name=\"pref_videocall_default\">true</string><string name=\"pref_screencapture_key\">screencapture_preference</string><string name=\"pref_screencapture_title\">Use screencapture.</string><string name=\"pref_screencapture_default\">false</string><string name=\"pref_camera2_key\">camera2_preference</string><string name=\"pref_camera2_title\">Use Camera2.</string><string name=\"pref_camera2_default\">true</string><string name=\"pref_camera2_not_supported\">Not supported on this device.</string><string name=\"pref_resolution_key\">resolution_preference</string><string name=\"pref_resolution_title\">Video resolution.</string><string name=\"pref_resolution_dlg\">Enter AppRTC local video resolution.</string><string name=\"pref_resolution_default\">Default</string><string name=\"pref_fps_key\">fps_preference</string><string name=\"pref_fps_title\">Camera fps.</string><string name=\"pref_fps_dlg\">Enter local camera fps.</string><string name=\"pref_fps_default\">Default</string><string name=\"pref_capturequalityslider_key\">capturequalityslider_preference</string><string name=\"pref_capturequalityslider_title\">Capture quality slider.</string><string name=\"pref_capturequalityslider_dlg\">Enable slider for changing capture quality.</string><string name=\"pref_capturequalityslider_default\">false</string><string name=\"pref_maxvideobitrate_key\">maxvideobitrate_preference</string><string name=\"pref_maxvideobitrate_title\">Maximum video bitrate setting.</string><string name=\"pref_maxvideobitrate_dlg\">Maximum video bitrate setting.</string><string name=\"pref_maxvideobitrate_default\">Default</string><string name=\"pref_maxvideobitratevalue_key\">maxvideobitratevalue_preference</string><string name=\"pref_maxvideobitratevalue_title\">Video encoder maximum bitrate.</string><string name=\"pref_maxvideobitratevalue_dlg\">Enter video encoder maximum bitrate in kbps.</string><string name=\"pref_maxvideobitratevalue_default\">1700</string><string name=\"pref_videocodec_key\">videocodec_preference</string><string name=\"pref_videocodec_title\">Default video codec.</string><string name=\"pref_videocodec_dlg\">Select default video codec.</string><string name=\"pref_videocodec_default\">VP8</string><string name=\"pref_hwcodec_key\">hwcodec_preference</string><string name=\"pref_hwcodec_title\">Video codec hardware acceleration.</string><string name=\"pref_hwcodec_dlg\">Use hardware accelerated video codec (if available).</string><string name=\"pref_hwcodec_default\">true</string><string name=\"pref_capturetotexture_key\">capturetotexture_preference</string><string name=\"pref_capturetotexture_title\">Video capture to surface texture.</string><string name=\"pref_capturetotexture_dlg\">Capture video to textures (if available).</string><string name=\"pref_capturetotexture_default\">true</string><string name=\"pref_flexfec_key\">flexfec_preference</string><string name=\"pref_flexfec_title\">Codec-agnostic Flexible FEC.</string><string name=\"pref_flexfec_dlg\">Enable FlexFEC.</string><string name=\"pref_flexfec_default\">false</string><string name=\"pref_value_enabled\">Enabled</string><string name=\"pref_value_disabled\">Disabled</string><string name=\"pref_audiosettings_key\">audio_settings_key</string><string name=\"pref_audiosettings_title\">WebRTC audio settings.</string><string name=\"pref_startaudiobitrate_key\">startaudiobitrate_preference</string><string name=\"pref_startaudiobitrate_title\">Audio bitrate setting.</string><string name=\"pref_startaudiobitrate_dlg\">Audio bitrate setting.</string><string name=\"pref_startaudiobitrate_default\">Default</string><string name=\"pref_startaudiobitratevalue_key\">startaudiobitratevalue_preference</string><string name=\"pref_startaudiobitratevalue_title\">Audio codec bitrate.</string><string name=\"pref_startaudiobitratevalue_dlg\">Enter audio codec bitrate in kbps.</string><string name=\"pref_startaudiobitratevalue_default\">32</string><string name=\"pref_audiocodec_key\">audiocodec_preference</string><string name=\"pref_audiocodec_title\">Default audio codec.</string><string name=\"pref_audiocodec_dlg\">Select default audio codec.</string><string name=\"pref_audiocodec_default\">OPUS</string><string name=\"pref_noaudioprocessing_key\">audioprocessing_preference</string><string name=\"pref_noaudioprocessing_title\">Disable audio processing.</string><string name=\"pref_noaudioprocessing_dlg\">Disable audio processing pipeline.</string><string name=\"pref_noaudioprocessing_default\">false</string><string name=\"pref_aecdump_key\">aecdump_preference</string><string name=\"pref_aecdump_title\">Create aecdump.</string><string name=\"pref_aecdump_dlg\">Enable diagnostic audio recordings.</string><string name=\"pref_aecdump_default\">false</string><string name=\"pref_opensles_key\">opensles_preference</string><string name=\"pref_opensles_title\">Use OpenSL ES for audio playback.</string><string name=\"pref_opensles_dlg\">Use OpenSL ES for audio playback.</string><string name=\"pref_opensles_default\">false</string><string name=\"pref_disable_built_in_aec_key\">disable_built_in_aec_preference</string><string name=\"pref_disable_built_in_aec_title\">Disable hardware AEC.</string><string name=\"pref_disable_built_in_aec_dlg\">Disable hardware AEC.</string><string name=\"pref_disable_built_in_aec_default\">false</string><string name=\"pref_built_in_aec_not_available\">Hardware AEC is not available</string><string name=\"pref_disable_built_in_agc_key\">disable_built_in_agc_preference</string><string name=\"pref_disable_built_in_agc_title\">Disable hardware AGC.</string><string name=\"pref_disable_built_in_agc_dlg\">Disable hardware AGC.</string><string name=\"pref_disable_built_in_agc_default\">false</string><string name=\"pref_built_in_agc_not_available\">Hardware AGC is not available</string><string name=\"pref_disable_built_in_ns_key\">disable_built_in_ns_preference</string><string name=\"pref_disable_built_in_ns_title\">Disable hardware NS.</string><string name=\"pref_disable_built_in_ns_dlg\">Disable hardware NS.</string><string name=\"pref_disable_built_in_ns_default\">false</string><string name=\"pref_built_in_ns_not_available\">Hardware NS is not available</string><string name=\"pref_enable_level_control_key\">enable_level_control_preference</string><string name=\"pref_enable_level_control_title\">Enable level control.</string><string name=\"pref_enable_level_control_default\">false</string><string name=\"pref_speakerphone_key\">speakerphone_preference</string><string name=\"pref_speakerphone_title\">Speakerphone.</string><string name=\"pref_speakerphone_dlg\">Speakerphone.</string><string name=\"pref_speakerphone_default\">auto</string><string name=\"pref_datasettings_key\">data_settings_key</string><string name=\"pref_datasettings_title\">WebRTC data channel settings.</string><string name=\"pref_enable_datachannel_key\">enable_datachannel_preference</string><string name=\"pref_enable_datachannel_title\">Enable datachannel.</string><string name=\"pref_enable_datachannel_dlg\">Enable datachannel.</string><string name=\"pref_enable_datachannel_default\" translatable=\"false\">true</string><string name=\"pref_ordered_key\">ordered_preference</string><string name=\"pref_ordered_title\">Order messages.</string><string name=\"pref_ordered_dlg\">Order messages.</string><string name=\"pref_ordered_default\" translatable=\"false\">true</string><string name=\"pref_data_protocol_key\">Subprotocol</string><string name=\"pref_data_protocol_title\">Subprotocol.</string><string name=\"pref_data_protocol_dlg\">Enter subprotocol.</string><string name=\"pref_data_protocol_default\" translatable=\"false\"/><string name=\"pref_negotiated_key\">negotiated_preference</string><string name=\"pref_negotiated_title\">Negotiated.</string><string name=\"pref_negotiated_dlg\">Negotiated.</string><string name=\"pref_negotiated_default\" translatable=\"false\">false</string><string name=\"pref_max_retransmit_time_ms_key\">max_retransmit_time_ms_preference</string><string name=\"pref_max_retransmit_time_ms_title\">Max delay to retransmit.</string><string name=\"pref_max_retransmit_time_ms_dlg\">Enter max delay to retransmit (in ms).</string><string name=\"pref_max_retransmit_time_ms_default\" translatable=\"false\">-1</string><string name=\"pref_max_retransmits_key\">max_retransmits_preference</string><string name=\"pref_max_retransmits_title\">Max attempts to retransmit.</string><string name=\"pref_max_retransmits_dlg\">Enter max attempts to retransmit.</string><string name=\"pref_max_retransmits_default\" translatable=\"false\">-1</string><string name=\"pref_data_id_key\">data_id_preference</string><string name=\"pref_data_id_title\">Data id.</string><string name=\"pref_data_id_dlg\">Enter data channel id.</string><string name=\"pref_data_id_default\" translatable=\"false\">-1</string><string name=\"pref_miscsettings_key\">misc_settings_key</string><string name=\"pref_miscsettings_title\">Miscellaneous settings.</string><string name=\"pref_room_server_url_key\">room_server_url_preference</string><string name=\"pref_room_server_url_title\">Room server URL.</string><string name=\"pref_room_server_url_dlg\">Enter a room server URL.</string><string name=\"pref_room_server_url_default\" translatable=\"false\">https://appr.tc</string><string name=\"pref_displayhud_key\">displayhud_preference</string><string name=\"pref_displayhud_title\">Display call statistics.</string><string name=\"pref_displayhud_dlg\">Display call statistics.</string><string name=\"pref_displayhud_default\" translatable=\"false\">false</string><string name=\"pref_tracing_key\">tracing_preference</string><string name=\"pref_tracing_title\">Debug performance tracing.</string><string name=\"pref_tracing_dlg\">Debug performance tracing.</string><string name=\"pref_tracing_default\" translatable=\"false\">false</string><string name=\"title_activity_launch\">LaunchActivity</string><string name=\"title_activity_sample\">SampleActivity</string><string name=\"title_activity_sample_peer_connection\">SamplePeerConnectionActivity</string><string name=\"title_activity_sample_data_channel\">SampleDataChannelActivity</string><string name=\"title_activity_socket_io\">SocketIOActivity</string><string name=\"title_activity_complete\">CompleteActivity</string><string name=\"video_on_lbl\">Video On!</string><string name=\"video_off_lbl\">Video Off!</string><string name=\"call_end_lbl\">Call End!</string><string name=\"audio_off_lbl\">Audio Off!</string><string name=\"audio_on_lbl\">Audio On!</string><string name=\"video_on_off_button\">Video On/off button</string><string name=\"call_end_button\">Call end button</string><string name=\"audio_on_off_button\">audio on/off button</string><string name=\"you\">You</string><string name=\"start_call_now\">Start Call Now</string><string name=\"start_txt_chat_now\">Start Text Chat Now</string><string name=\"connecting\">Connecting...</string><string name=\"dummy_text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string><string name=\"dummy_text_1\">Lorem ipsum dolor sit amet</string><string name=\"you_have_no_messages_start_sending_messages_now\">You have no messages! Start sending messages now.</string><string name=\"empty_message_txt\">Please write your message!</string><string name=\"loading\">Loading...</string><string name=\"video_call\">Video Call</string><string name=\"please_wait_for_doctor\">Please wait for doctor avaialble.</string><string name=\"call_end_aler_txt\">Do you want to end the video call ?</string><string name=\"yes\">Yes</string><string name=\"no\">No</string></file><file path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\values\\styles.xml\" qualifiers=\"\"><style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n        \r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style><style name=\"AppTheme.Call\" parent=\"AppTheme\">\r\n        <item name=\"windowNoTitle\">true</item>\r\n        <item name=\"android:windowFullscreen\">true</item>\r\n    </style><style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n    </style><style name=\"AppTheme.AppBarOverlay\" parent=\"ThemeOverlay.AppCompat.Dark.ActionBar\"/><style name=\"AppTheme.PopupOverlay\" parent=\"ThemeOverlay.AppCompat.Light\"/></file><file name=\"preferences\" path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\res\\xml\\preferences.xml\" qualifiers=\"\" type=\"xml\"/></source><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\generated\\res\\rs\\debug\"/><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\build\\generated\\res\\resValues\\debug\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"debug$Generated\" generated=\"true\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\debug\\res\"/></dataSet><dataSet aapt-namespace=\"http://schemas.android.com/apk/res-auto\" config=\"debug\" generated-set=\"debug$Generated\" ignore_pattern=\"!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~\"><source path=\"D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\debug\\res\"/></dataSet><mergedItems/></merger>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/incremental/packageDebugResources/merger.xml	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/incremental/packageDebugResources/merger.xml	(date 1626758056851)
-@@ -1,5 +1,5 @@
- <?xml version="1.0" encoding="utf-8"?>
--<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res"/><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\build\generated\res\rs\debug"/><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res"><file name="call" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\call.xml" qualifiers="" type="drawable"/><file name="chat_left_bg" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\chat_left_bg.xml" qualifiers="" type="drawable"/><file name="chat_right_bg" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\chat_right_bg.xml" qualifiers="" type="drawable"/><file name="disconnect" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\disconnect.xml" qualifiers="" type="drawable"/><file name="ic_baseline_call_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_call_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_call_24_white" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_call_24_white.xml" qualifiers="" type="drawable"/><file name="ic_baseline_chat_bubble_outline_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_chat_bubble_outline_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_collections_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_collections_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_flip_camera_ios_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_flip_camera_ios_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_gray" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_gray.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_green" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_green.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_red" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_red.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_white" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_white.xml" qualifiers="" type="drawable"/><file name="ic_baseline_mic_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_mic_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_mic_none_24_blue" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_mic_none_24_blue.xml" qualifiers="" type="drawable"/><file name="ic_baseline_mic_off_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_mic_off_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_photo_camera_24_blue" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_photo_camera_24_blue.xml" qualifiers="" type="drawable"/><file name="ic_baseline_send_24_white" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_send_24_white.xml" qualifiers="" type="drawable"/><file name="ic_baseline_videocam_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_videocam_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_videocam_off_24" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_videocam_off_24.xml" qualifiers="" type="drawable"/><file name="ic_launcher_foreground" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_launcher_foreground.xml" qualifiers="" type="drawable"/><file name="message_icon" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\message_icon.jpg" qualifiers="" type="drawable"/><file name="rounded_bg" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\rounded_bg.xml" qualifiers="" type="drawable"/><file name="round_corner_16_blue_light" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\round_corner_16_blue_light.xml" qualifiers="" type="drawable"/><file name="round_corner_16_gray_light" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\drawable\round_corner_16_gray_light.xml" qualifiers="" type="drawable"/><file name="activity_chat" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\layout\activity_chat.xml" qualifiers="" type="layout"/><file name="activity_launch" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\layout\activity_launch.xml" qualifiers="" type="layout"/><file name="activity_sample_peer_connection" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\layout\activity_sample_peer_connection.xml" qualifiers="" type="layout"/><file name="left_chat_layout" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\layout\left_chat_layout.xml" qualifiers="" type="layout"/><file name="right_chat_layout" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\layout\right_chat_layout.xml" qualifiers="" type="layout"/><file name="chat_menu" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\menu\chat_menu.xml" qualifiers="" type="menu"/><file path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\values\arrays.xml" qualifiers=""><string-array name="videoResolutions">
-+<merger version="3"><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res"/><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\build\generated\res\rs\debug"/><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="main" generated-set="main$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res"><file name="chat_left_bg" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\chat_left_bg.xml" qualifiers="" type="drawable"/><file name="chat_right_bg" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\chat_right_bg.xml" qualifiers="" type="drawable"/><file name="ic_baseline_call_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_call_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_call_24_white" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_call_24_white.xml" qualifiers="" type="drawable"/><file name="ic_baseline_chat_bubble_outline_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_chat_bubble_outline_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_flip_camera_ios_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_flip_camera_ios_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_gray" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_gray.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_green" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_green.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_red" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_red.xml" qualifiers="" type="drawable"/><file name="ic_baseline_lens_24_white" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_lens_24_white.xml" qualifiers="" type="drawable"/><file name="ic_baseline_mic_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_mic_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_mic_none_24_blue" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_mic_none_24_blue.xml" qualifiers="" type="drawable"/><file name="ic_baseline_mic_off_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_mic_off_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_photo_camera_24_blue" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_photo_camera_24_blue.xml" qualifiers="" type="drawable"/><file name="ic_baseline_send_24_white" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_send_24_white.xml" qualifiers="" type="drawable"/><file name="ic_baseline_videocam_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_videocam_24.xml" qualifiers="" type="drawable"/><file name="ic_baseline_videocam_off_24" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\ic_baseline_videocam_off_24.xml" qualifiers="" type="drawable"/><file name="message_icon" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\message_icon.jpg" qualifiers="" type="drawable"/><file name="rounded_bg" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\rounded_bg.xml" qualifiers="" type="drawable"/><file name="round_corner_16_blue_light" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\round_corner_16_blue_light.xml" qualifiers="" type="drawable"/><file name="round_corner_16_gray_light" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\drawable\round_corner_16_gray_light.xml" qualifiers="" type="drawable"/><file name="activity_chat" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\layout\activity_chat.xml" qualifiers="" type="layout"/><file name="activity_launch" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\layout\activity_launch.xml" qualifiers="" type="layout"/><file name="activity_sample_peer_connection" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\layout\activity_sample_peer_connection.xml" qualifiers="" type="layout"/><file name="left_chat_layout" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\layout\left_chat_layout.xml" qualifiers="" type="layout"/><file name="right_chat_layout" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\layout\right_chat_layout.xml" qualifiers="" type="layout"/><file name="chat_menu" path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\menu\chat_menu.xml" qualifiers="" type="menu"/><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values\arrays.xml" qualifiers=""><string-array name="videoResolutions">
-         <item>Default</item>
-         <item>4K (3840 x 2160)</item>
-         <item>Full HD (1920 x 1080)</item>
-@@ -37,11 +37,11 @@
-         <item>false</item>
-     </string-array><string-array name="roomListContextMenu">
-         <item>Remove favorite</item>
--    </string-array></file><file path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\values\colors.xml" qualifiers=""><color name="colorPrimary">#3F51B5</color><color name="colorPrimaryDark">#303F9F</color><color name="colorAccent">#FF4081</color><color name="s00">#d9f0ff</color><color name="s0">#c1e5fe</color><color name="s1">#83ccfd</color><color name="s2">#46b3fd</color><color name="s3">#0899fc</color><color name="v2_green">#7ebe4e</color><color name="green0">#c4eabf</color><color name="green1">#89d47f</color><color name="green2">#4fbf40</color><color name="green3">#14aa00</color><color name="lightGreen0">#eaf6c7</color><color name="lightGreen1">#d6ed90</color><color name="lightGreen2">#c2e459</color><color name="lightGreen3">#addb21</color><color name="red0">#febfbf</color><color name="red1">#fd7f7f</color><color name="red2">#fc4040</color><color name="red3">#fb0000</color><color name="red3_transa">#EEfb0000</color><color name="orange0">#ffd9bf</color><color name="orange1">#ffb27f</color><color name="orange2">#ff8c40</color><color name="orange3">#ff6600</color><color name="darkYellow0">#ffe4c0</color><color name="darkYellow1">#ffca81</color><color name="darkYellow2">#ffb043</color><color name="darkYellow3">#ff9504</color><color name="darkYellow3_trans">#EEff9504</color><color name="pink0">#f4c0df</color><color name="pink1">#e980be</color><color name="pink2">#de419e</color><color name="pink3">#d3027e</color><color name="violet0">#d3bfe7</color><color name="violet1">#a77fcf</color><color name="violet2">#7c40b7</color><color name="violet3">#50009f</color><color name="deepBlue0">#bfc3e8</color><color name="deepBlue1">#8088d1</color><color name="deepBlue2">#414dbb</color><color name="deepBlue3">#0111a4</color><color name="c1">#091029</color><color name="c1_dark">#050916</color><color name="c11">#192a66</color><color name="c1_transaprent">#88091029</color><color name="c1_transaprent_1">#EE091029</color><color name="c2">#24206C</color><color name="c3">#3C1F5B</color><color name="c4">#581B49</color><color name="c5">#56568E</color><color name="c6">#6A4F7A</color><color name="c7">#78516D</color><color name="start_color">#292178</color><color name="start_color_1">#AA292178</color><color name="center_color">#43215F</color><color name="center_color_1">#AA43215F</color><color name="end_color">#562343</color><color name="end_color_11">#a63e7f</color><color name="end_color_1">#AA562343</color><color name="white">#FFFFFF</color><color name="gray_0_0">#F3F3F3</color><color name="gray_0">#F1F1F1</color><color name="gray_0_trans">#55F1F1F1</color><color name="gray_3_trans">#55a7a7a7</color><color name="gray_4_trans">#55767272</color><color name="gray_5_trans">#551a1919</color><color name="gray_6_trans">#991a1919</color><color name="gray_1">#e4e2e2</color><color name="gray_2">#cecdcd</color><color name="gray_3">#a7a7a7</color><color name="gray_4">#767272</color><color name="gray_5">#403d3d</color><color name="gray_6">#1a1919</color><color name="gray_7">#080808</color><color name="gray_start_trans">#00FFFFFF</color><color name="gray_center_trans">#22000000</color><color name="gray_end_trans">#DD000000</color><color name="dark_bg_start">#00202A</color><color name="dark_bg_end">#000304</color><color name="colorWhiteTransparent">#AAFFFFFF</color><color name="colorBlackTransparent">#AA000000</color><color name="colorBlackTransparent_0">#00000000</color><color name="colorBlackTransparent_0_0">#55000000</color><color name="colorBlackTransparent_0_0_0">#33000000</color><color name="colorBlackTransparent_1">#cc000000</color><color name="colorBlackTransparent_2">#C8000000</color><color name="colorBlackTransparent_1_1">#DD000000</color><color name="ios_bg">#80444444</color><color name="colorCardBg">#88FFFFFF</color><color name="colorCardBg_1">#44FFFFFF</color><color name="colorGreenTrans">#AA4CAF50</color><color name="colorYellowTrans">#AAFF9800</color><color name="colorGreen">#4CAF50</color><color name="colorYellow">#FF9800</color><color name="cmnBgColor">#edefef</color><color name="cmnBgColor_1">#44edefef</color><color name="yellow">#FAF39B</color><color name="black_overlay">#66000000</color><color name="red">#FF0000</color><color name="red_1">#f1676a</color><color name="blue_1">#06c1fa</color><color name="green_vectr">#FF00aa00</color><color name="colorGreen_1">#45be89</color><color name="colorGreen_2">#0dbc6f</color><color name="colorYellow_1">#efa04b</color><color name="colorYellow_2">#f2aa00</color><color name="colorYellow_2_trans">#EEf2aa00</color><color name="colorAccent_1">#34a7e1</color><color name="gray_4_1">#adb7c0</color></file><file path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\values\dimens.xml" qualifiers=""><dimen name="fab_margin">16dp</dimen></file><file path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\values\ic_launcher_background.xml" qualifiers=""><color name="ic_launcher_background">#1C8BFF</color></file><file path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\values\strings.xml" qualifiers=""><string name="app_name" translatable="false">Int-Health V-Call</string><string name="settings_name" translatable="false">AppRTC Settings</string><string name="disconnect_call">Disconnect Call</string><string name="room_description">
-+    </string-array></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values\colors.xml" qualifiers=""><color name="colorPrimary">#3F51B5</color><color name="colorPrimaryDark">#303F9F</color><color name="colorAccent">#FF4081</color><color name="s00">#d9f0ff</color><color name="s0">#c1e5fe</color><color name="s1">#83ccfd</color><color name="s2">#46b3fd</color><color name="s3">#0899fc</color><color name="v2_green">#7ebe4e</color><color name="green0">#c4eabf</color><color name="green1">#89d47f</color><color name="green2">#4fbf40</color><color name="green3">#14aa00</color><color name="lightGreen0">#eaf6c7</color><color name="lightGreen1">#d6ed90</color><color name="lightGreen2">#c2e459</color><color name="lightGreen3">#addb21</color><color name="red0">#febfbf</color><color name="red1">#fd7f7f</color><color name="red2">#fc4040</color><color name="red3">#fb0000</color><color name="red3_transa">#EEfb0000</color><color name="orange0">#ffd9bf</color><color name="orange1">#ffb27f</color><color name="orange2">#ff8c40</color><color name="orange3">#ff6600</color><color name="darkYellow0">#ffe4c0</color><color name="darkYellow1">#ffca81</color><color name="darkYellow2">#ffb043</color><color name="darkYellow3">#ff9504</color><color name="darkYellow3_trans">#EEff9504</color><color name="pink0">#f4c0df</color><color name="pink1">#e980be</color><color name="pink2">#de419e</color><color name="pink3">#d3027e</color><color name="violet0">#d3bfe7</color><color name="violet1">#a77fcf</color><color name="violet2">#7c40b7</color><color name="violet3">#50009f</color><color name="deepBlue0">#bfc3e8</color><color name="deepBlue1">#8088d1</color><color name="deepBlue2">#414dbb</color><color name="deepBlue3">#0111a4</color><color name="c1">#091029</color><color name="c1_dark">#050916</color><color name="c11">#192a66</color><color name="c1_transaprent">#88091029</color><color name="c1_transaprent_1">#EE091029</color><color name="c2">#24206C</color><color name="c3">#3C1F5B</color><color name="c4">#581B49</color><color name="c5">#56568E</color><color name="c6">#6A4F7A</color><color name="c7">#78516D</color><color name="start_color">#292178</color><color name="start_color_1">#AA292178</color><color name="center_color">#43215F</color><color name="center_color_1">#AA43215F</color><color name="end_color">#562343</color><color name="end_color_11">#a63e7f</color><color name="end_color_1">#AA562343</color><color name="white">#FFFFFF</color><color name="gray_0_0">#F3F3F3</color><color name="gray_0">#F1F1F1</color><color name="gray_0_trans">#55F1F1F1</color><color name="gray_3_trans">#55a7a7a7</color><color name="gray_4_trans">#55767272</color><color name="gray_5_trans">#551a1919</color><color name="gray_6_trans">#991a1919</color><color name="gray_1">#e4e2e2</color><color name="gray_2">#cecdcd</color><color name="gray_3">#a7a7a7</color><color name="gray_4">#767272</color><color name="gray_5">#403d3d</color><color name="gray_6">#1a1919</color><color name="gray_7">#080808</color><color name="gray_start_trans">#00FFFFFF</color><color name="gray_center_trans">#22000000</color><color name="gray_end_trans">#DD000000</color><color name="dark_bg_start">#00202A</color><color name="dark_bg_end">#000304</color><color name="colorWhiteTransparent">#AAFFFFFF</color><color name="colorBlackTransparent">#AA000000</color><color name="colorBlackTransparent_0">#00000000</color><color name="colorBlackTransparent_0_0">#55000000</color><color name="colorBlackTransparent_0_0_0">#33000000</color><color name="colorBlackTransparent_1">#cc000000</color><color name="colorBlackTransparent_2">#C8000000</color><color name="colorBlackTransparent_1_1">#DD000000</color><color name="ios_bg">#80444444</color><color name="colorCardBg">#88FFFFFF</color><color name="colorCardBg_1">#44FFFFFF</color><color name="colorGreenTrans">#AA4CAF50</color><color name="colorYellowTrans">#AAFF9800</color><color name="colorGreen">#4CAF50</color><color name="colorYellow">#FF9800</color><color name="cmnBgColor">#edefef</color><color name="cmnBgColor_1">#44edefef</color><color name="yellow">#FAF39B</color><color name="black_overlay">#66000000</color><color name="red">#FF0000</color><color name="red_1">#f1676a</color><color name="blue_1">#06c1fa</color><color name="green_vectr">#FF00aa00</color><color name="colorGreen_1">#45be89</color><color name="colorGreen_2">#0dbc6f</color><color name="colorYellow_1">#efa04b</color><color name="colorYellow_2">#f2aa00</color><color name="colorYellow_2_trans">#EEf2aa00</color><color name="colorAccent_1">#34a7e1</color><color name="gray_4_1">#adb7c0</color></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values\dimens.xml" qualifiers=""><dimen name="fab_margin">16dp</dimen></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values\ic_launcher_background.xml" qualifiers=""><color name="ic_launcher_background">#1C8BFF</color></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values\strings.xml" qualifiers=""><string name="app_name" translatable="false">Int-Health V-Call</string><string name="settings_name" translatable="false">AppRTC Settings</string><string name="disconnect_call">Disconnect Call</string><string name="room_description">
-         Please enter a room name. Room names are shared with everyone, so think
-         of something unique and send it to a friend.
-     </string><string name="favorites">Favorites</string><string name="no_favorites">No favorites</string><string name="invalid_url_title">Invalid URL</string><string name="invalid_url_text">The URL or room name you entered resulted in an invalid URL: %1$s
--    </string><string name="channel_error_title">Connection error</string><string name="connecting_to">Connecting to: %1$s</string><string name="missing_url">FATAL ERROR: Missing URL to connect to.</string><string name="camera2_texture_only_error">Camera2 only supports capturing to texture. Either disable Camera2 or enable capturing to texture in the options.</string><string name="ok">OK</string><string name="switch_camera">Switch front/back camera</string><string name="capture_format_change_text">Slide to change capture format</string><string name="muted">Muted</string><string name="toggle_debug">Toggle debug view</string><string name="toggle_mic">Toggle microphone on/off</string><string name="action_settings">Settings</string><string name="action_loopback">Loopback connection</string><string name="connect_description">Connect to the room</string><string name="add_favorite_description">Add favorite</string><string name="format_description">%1$dx%2$d @ %3$d fps</string><string name="pref_room_key">room_preference</string><string name="pref_room_list_key">room_list_preference</string><string name="pref_videosettings_key">video_settings_key</string><string name="pref_videosettings_title">WebRTC video settings.</string><string name="pref_videocall_key">videocall_preference</string><string name="pref_videocall_title">Video call.</string><string name="pref_videocall_dlg">Enable video in a call.</string><string name="pref_videocall_default">true</string><string name="pref_screencapture_key">screencapture_preference</string><string name="pref_screencapture_title">Use screencapture.</string><string name="pref_screencapture_default">false</string><string name="pref_camera2_key">camera2_preference</string><string name="pref_camera2_title">Use Camera2.</string><string name="pref_camera2_default">true</string><string name="pref_camera2_not_supported">Not supported on this device.</string><string name="pref_resolution_key">resolution_preference</string><string name="pref_resolution_title">Video resolution.</string><string name="pref_resolution_dlg">Enter AppRTC local video resolution.</string><string name="pref_resolution_default">Default</string><string name="pref_fps_key">fps_preference</string><string name="pref_fps_title">Camera fps.</string><string name="pref_fps_dlg">Enter local camera fps.</string><string name="pref_fps_default">Default</string><string name="pref_capturequalityslider_key">capturequalityslider_preference</string><string name="pref_capturequalityslider_title">Capture quality slider.</string><string name="pref_capturequalityslider_dlg">Enable slider for changing capture quality.</string><string name="pref_capturequalityslider_default">false</string><string name="pref_maxvideobitrate_key">maxvideobitrate_preference</string><string name="pref_maxvideobitrate_title">Maximum video bitrate setting.</string><string name="pref_maxvideobitrate_dlg">Maximum video bitrate setting.</string><string name="pref_maxvideobitrate_default">Default</string><string name="pref_maxvideobitratevalue_key">maxvideobitratevalue_preference</string><string name="pref_maxvideobitratevalue_title">Video encoder maximum bitrate.</string><string name="pref_maxvideobitratevalue_dlg">Enter video encoder maximum bitrate in kbps.</string><string name="pref_maxvideobitratevalue_default">1700</string><string name="pref_videocodec_key">videocodec_preference</string><string name="pref_videocodec_title">Default video codec.</string><string name="pref_videocodec_dlg">Select default video codec.</string><string name="pref_videocodec_default">VP8</string><string name="pref_hwcodec_key">hwcodec_preference</string><string name="pref_hwcodec_title">Video codec hardware acceleration.</string><string name="pref_hwcodec_dlg">Use hardware accelerated video codec (if available).</string><string name="pref_hwcodec_default">true</string><string name="pref_capturetotexture_key">capturetotexture_preference</string><string name="pref_capturetotexture_title">Video capture to surface texture.</string><string name="pref_capturetotexture_dlg">Capture video to textures (if available).</string><string name="pref_capturetotexture_default">true</string><string name="pref_flexfec_key">flexfec_preference</string><string name="pref_flexfec_title">Codec-agnostic Flexible FEC.</string><string name="pref_flexfec_dlg">Enable FlexFEC.</string><string name="pref_flexfec_default">false</string><string name="pref_value_enabled">Enabled</string><string name="pref_value_disabled">Disabled</string><string name="pref_audiosettings_key">audio_settings_key</string><string name="pref_audiosettings_title">WebRTC audio settings.</string><string name="pref_startaudiobitrate_key">startaudiobitrate_preference</string><string name="pref_startaudiobitrate_title">Audio bitrate setting.</string><string name="pref_startaudiobitrate_dlg">Audio bitrate setting.</string><string name="pref_startaudiobitrate_default">Default</string><string name="pref_startaudiobitratevalue_key">startaudiobitratevalue_preference</string><string name="pref_startaudiobitratevalue_title">Audio codec bitrate.</string><string name="pref_startaudiobitratevalue_dlg">Enter audio codec bitrate in kbps.</string><string name="pref_startaudiobitratevalue_default">32</string><string name="pref_audiocodec_key">audiocodec_preference</string><string name="pref_audiocodec_title">Default audio codec.</string><string name="pref_audiocodec_dlg">Select default audio codec.</string><string name="pref_audiocodec_default">OPUS</string><string name="pref_noaudioprocessing_key">audioprocessing_preference</string><string name="pref_noaudioprocessing_title">Disable audio processing.</string><string name="pref_noaudioprocessing_dlg">Disable audio processing pipeline.</string><string name="pref_noaudioprocessing_default">false</string><string name="pref_aecdump_key">aecdump_preference</string><string name="pref_aecdump_title">Create aecdump.</string><string name="pref_aecdump_dlg">Enable diagnostic audio recordings.</string><string name="pref_aecdump_default">false</string><string name="pref_opensles_key">opensles_preference</string><string name="pref_opensles_title">Use OpenSL ES for audio playback.</string><string name="pref_opensles_dlg">Use OpenSL ES for audio playback.</string><string name="pref_opensles_default">false</string><string name="pref_disable_built_in_aec_key">disable_built_in_aec_preference</string><string name="pref_disable_built_in_aec_title">Disable hardware AEC.</string><string name="pref_disable_built_in_aec_dlg">Disable hardware AEC.</string><string name="pref_disable_built_in_aec_default">false</string><string name="pref_built_in_aec_not_available">Hardware AEC is not available</string><string name="pref_disable_built_in_agc_key">disable_built_in_agc_preference</string><string name="pref_disable_built_in_agc_title">Disable hardware AGC.</string><string name="pref_disable_built_in_agc_dlg">Disable hardware AGC.</string><string name="pref_disable_built_in_agc_default">false</string><string name="pref_built_in_agc_not_available">Hardware AGC is not available</string><string name="pref_disable_built_in_ns_key">disable_built_in_ns_preference</string><string name="pref_disable_built_in_ns_title">Disable hardware NS.</string><string name="pref_disable_built_in_ns_dlg">Disable hardware NS.</string><string name="pref_disable_built_in_ns_default">false</string><string name="pref_built_in_ns_not_available">Hardware NS is not available</string><string name="pref_enable_level_control_key">enable_level_control_preference</string><string name="pref_enable_level_control_title">Enable level control.</string><string name="pref_enable_level_control_default">false</string><string name="pref_speakerphone_key">speakerphone_preference</string><string name="pref_speakerphone_title">Speakerphone.</string><string name="pref_speakerphone_dlg">Speakerphone.</string><string name="pref_speakerphone_default">auto</string><string name="pref_datasettings_key">data_settings_key</string><string name="pref_datasettings_title">WebRTC data channel settings.</string><string name="pref_enable_datachannel_key">enable_datachannel_preference</string><string name="pref_enable_datachannel_title">Enable datachannel.</string><string name="pref_enable_datachannel_dlg">Enable datachannel.</string><string name="pref_enable_datachannel_default" translatable="false">true</string><string name="pref_ordered_key">ordered_preference</string><string name="pref_ordered_title">Order messages.</string><string name="pref_ordered_dlg">Order messages.</string><string name="pref_ordered_default" translatable="false">true</string><string name="pref_data_protocol_key">Subprotocol</string><string name="pref_data_protocol_title">Subprotocol.</string><string name="pref_data_protocol_dlg">Enter subprotocol.</string><string name="pref_data_protocol_default" translatable="false"/><string name="pref_negotiated_key">negotiated_preference</string><string name="pref_negotiated_title">Negotiated.</string><string name="pref_negotiated_dlg">Negotiated.</string><string name="pref_negotiated_default" translatable="false">false</string><string name="pref_max_retransmit_time_ms_key">max_retransmit_time_ms_preference</string><string name="pref_max_retransmit_time_ms_title">Max delay to retransmit.</string><string name="pref_max_retransmit_time_ms_dlg">Enter max delay to retransmit (in ms).</string><string name="pref_max_retransmit_time_ms_default" translatable="false">-1</string><string name="pref_max_retransmits_key">max_retransmits_preference</string><string name="pref_max_retransmits_title">Max attempts to retransmit.</string><string name="pref_max_retransmits_dlg">Enter max attempts to retransmit.</string><string name="pref_max_retransmits_default" translatable="false">-1</string><string name="pref_data_id_key">data_id_preference</string><string name="pref_data_id_title">Data id.</string><string name="pref_data_id_dlg">Enter data channel id.</string><string name="pref_data_id_default" translatable="false">-1</string><string name="pref_miscsettings_key">misc_settings_key</string><string name="pref_miscsettings_title">Miscellaneous settings.</string><string name="pref_room_server_url_key">room_server_url_preference</string><string name="pref_room_server_url_title">Room server URL.</string><string name="pref_room_server_url_dlg">Enter a room server URL.</string><string name="pref_room_server_url_default" translatable="false">https://appr.tc</string><string name="pref_displayhud_key">displayhud_preference</string><string name="pref_displayhud_title">Display call statistics.</string><string name="pref_displayhud_dlg">Display call statistics.</string><string name="pref_displayhud_default" translatable="false">false</string><string name="pref_tracing_key">tracing_preference</string><string name="pref_tracing_title">Debug performance tracing.</string><string name="pref_tracing_dlg">Debug performance tracing.</string><string name="pref_tracing_default" translatable="false">false</string><string name="title_activity_launch">LaunchActivity</string><string name="title_activity_sample">SampleActivity</string><string name="title_activity_sample_peer_connection">SamplePeerConnectionActivity</string><string name="title_activity_sample_data_channel">SampleDataChannelActivity</string><string name="title_activity_socket_io">SocketIOActivity</string><string name="title_activity_complete">CompleteActivity</string><string name="video_on_lbl">Video On!</string><string name="video_off_lbl">Video Off!</string><string name="call_end_lbl">Call End!</string><string name="audio_off_lbl">Audio Off!</string><string name="audio_on_lbl">Audio On!</string><string name="video_on_off_button">Video On/off button</string><string name="call_end_button">Call end button</string><string name="audio_on_off_button">audio on/off button</string><string name="you">You</string><string name="start_call_now">Start Call Now</string><string name="start_txt_chat_now">Start Text Chat Now</string><string name="connecting">Connecting...</string><string name="dummy_text">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string><string name="dummy_text_1">Lorem ipsum dolor sit amet</string><string name="you_have_no_messages_start_sending_messages_now">You have no messages! Start sending messages now.</string><string name="empty_message_txt">Please write your message!</string><string name="loading">Loading...</string><string name="video_call">Video Call</string><string name="please_wait_for_doctor">Please wait for doctor avaialble.</string><string name="call_end_aler_txt">Do you want to end the video call ?</string><string name="yes">Yes</string><string name="no">No</string></file><file path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\values\styles.xml" qualifiers=""><style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-+    </string><string name="channel_error_title">Connection error</string><string name="connecting_to">Connecting to: %1$s</string><string name="missing_url">FATAL ERROR: Missing URL to connect to.</string><string name="camera2_texture_only_error">Camera2 only supports capturing to texture. Either disable Camera2 or enable capturing to texture in the options.</string><string name="ok">OK</string><string name="switch_camera">Switch front/back camera</string><string name="capture_format_change_text">Slide to change capture format</string><string name="muted">Muted</string><string name="toggle_debug">Toggle debug view</string><string name="toggle_mic">Toggle microphone on/off</string><string name="action_settings">Settings</string><string name="action_loopback">Loopback connection</string><string name="connect_description">Connect to the room</string><string name="add_favorite_description">Add favorite</string><string name="format_description">%1$dx%2$d @ %3$d fps</string><string name="video_on_lbl">Video On!</string><string name="video_off_lbl">Video Off!</string><string name="call_end_lbl">Call End!</string><string name="audio_off_lbl">Audio Off!</string><string name="audio_on_lbl">Audio On!</string><string name="video_on_off_button">Video On/off button</string><string name="call_end_button">Call end button</string><string name="audio_on_off_button">audio on/off button</string><string name="you">You</string><string name="start_call_now">Start Call Now</string><string name="start_txt_chat_now">Start Text Chat Now</string><string name="connecting">Connecting...</string><string name="dummy_text">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string><string name="dummy_text_1">Lorem ipsum dolor sit amet</string><string name="you_have_no_messages_start_sending_messages_now">You have no messages! Start sending messages now.</string><string name="empty_message_txt">Please write your message!</string><string name="loading">Loading...</string><string name="video_call">Video Call</string><string name="please_wait_for_doctor">Please wait for the doctor\'s availability.</string><string name="call_end_aler_txt">Do you want to end the video call ?</string><string name="yes">Yes</string><string name="no">No</string></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values\styles.xml" qualifiers=""><style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
-         
-         <item name="colorPrimary">@color/colorPrimary</item>
-         <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
-@@ -52,4 +52,12 @@
-     </style><style name="AppTheme.NoActionBar">
-         <item name="windowActionBar">false</item>
-         <item name="windowNoTitle">true</item>
--    </style><style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar"/><style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light"/></file><file name="preferences" path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\res\xml\preferences.xml" qualifiers="" type="xml"/></source><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\build\generated\res\rs\debug"/><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="D:\Intelehealth\Android-Mobile-Client\webrtc\src\debug\res"/></dataSet><mergedItems/></merger>
-\ No newline at end of file
-+    </style><style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar"/><style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light"/></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values-hi\strings.xml" qualifiers="hi"><string name="app_name" translatable="false">Int-Health V-Call</string><string name="settings_name" translatable="false">ऐपआरटीसी सेटिंग्स</string><string name="disconnect_call">कॉल डिस्कनेक्ट करें</string><string name="room_description">
-+        कृपया एक कमरे का नाम दर्ज करें। कमरे के नाम सभी के साथ साझा किए जाते हैं, इसलिए सोचें
-+         कुछ अनोखा और किसी मित्र को भेजें।
-+    </string><string name="favorites">पसंदीदा</string><string name="no_favorites">कोई पसंदीदा नहीं</string><string name="invalid_url_title">असामान्य यूआरएल</string><string name="invalid_url_text">आपके द्वारा दर्ज किए गए URL या कमरे के नाम के परिणामस्वरूप एक अमान्य URL हो गया: %1$s
-+    </string><string name="channel_error_title">संपर्क त्रुटि</string><string name="connecting_to">को जोड़ रहा: %1$s</string><string name="missing_url">गंभीर गड़बड़ी: कनेक्ट करने के लिए यूआरएल मौजूद नहीं है.</string><string name="camera2_texture_only_error">Camera2 केवल बनावट को कैप्चर करने का समर्थन करता है। या तो कैमरा 2 को अक्षम करें या विकल्पों में बनावट को कैप्चर करना सक्षम करें।</string><string name="ok">ठीक है</string><string name="switch_camera">फ्रंट/बैक कैमरा स्विच करें</string><string name="capture_format_change_text">कैप्चर प्रारूप बदलने के लिए स्लाइड करें</string><string name="muted">म्यूट किए गए</string><string name="toggle_debug">डीबग दृश्य टॉगल करें</string><string name="toggle_mic">माइक्रोफ़ोन चालू/बंद टॉगल करें</string><string name="action_settings">समायोजन</string><string name="action_loopback">लूपबैक कनेक्शन</string><string name="connect_description">कमरे से जुड़ें</string><string name="add_favorite_description">पसंदीदा जोड़ें</string><string name="format_description">%1$dx%2$d @ %3$d fps</string><string name="video_on_lbl">वीडियो चालू!</string><string name="video_off_lbl">वीडियो बंद!</string><string name="call_end_lbl">कॉल समाप्त!</string><string name="audio_off_lbl">ऑडियो बंद!</string><string name="audio_on_lbl">ऑडियो चालू!</string><string name="video_on_off_button">वीडियो चालू/बंद बटन</string><string name="call_end_button">कॉल एंड बटन</string><string name="audio_on_off_button">ऑडियो चालू / बंद बटन</string><string name="you">आप</string><string name="start_call_now">अभी कॉल शुरू करें</string><string name="start_txt_chat_now">अभी टेक्स्ट चैट शुरू करें</string><string name="connecting">कनेक्ट हो रहा है...</string><string name="dummy_text">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string><string name="dummy_text_1">Lorem ipsum dolor sit amet</string><string name="you_have_no_messages_start_sending_messages_now">आपके लिए कोई सन्देश नहीं है! अभी संदेश भेजना शुरू करें।</string><string name="empty_message_txt">कृपया अपना संदेश लिखें!</string><string name="loading">लोड हो रहा है...</string><string name="video_call">वीडियो कॉल</string><string name="please_wait_for_doctor">कृपया डॉक्टर की उपलब्धता की प्रतीक्षा करें।</string><string name="call_end_aler_txt">क्या आप वीडियो कॉल समाप्त करना चाहते हैं?</string><string name="yes">हाँ</string><string name="no">नहीं</string></file><file path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\res\values-or\strings.xml" qualifiers="or"><string name="app_name" translatable="false">Int-Health V-Call</string><string name="settings_name" translatable="false">ସେଟିଂସମୂହ</string><string name="disconnect_call">କଲ୍ ବିଚ୍ଛିନ୍ନ କରନ୍ତୁ |</string><string name="room_description">
-+        ଦୟାକରି ଏକ କୋଠରୀ ନାମ ପ୍ରବେଶ କରନ୍ତୁ | ରୁମ ନାମ ସମସ୍ତଙ୍କ ସହିତ ଅଂଶୀଦାର ହୋଇଛି, ତେଣୁ ଭାବନ୍ତୁ |
-+         କିଛି ଅନନ୍ୟ ଏବଂ ଏହାକୁ ଏକ ସାଙ୍ଗକୁ ପଠାନ୍ତୁ |
-+    </string><string name="favorites">ପସନ୍ଦ</string><string name="no_favorites">ପସନ୍ଦ ନାହିଁ |</string><string name="invalid_url_title">ଭୁଲ URL</string><string name="invalid_url_text">ଆପଣ ପ୍ରବେଶ କରିଥିବା URL କିମ୍ବା କୋଠରୀ ନାମ ଏକ ଅବଧ URL ରେ ପରିଣତ ହେଲା: %1$s
-+    </string><string name="channel_error_title">ସଂଯୋଗ ତ୍ରୁଟି |</string><string name="connecting_to">ସହିତ ସଂଯୋଗ ହେଉଛି |: %1$s</string><string name="missing_url">ସାଂଘାତିକ ତ୍ରୁଟି: ସଂଯୋଗ କରିବାକୁ URL ନିଖୋଜ |</string><string name="camera2_texture_only_error">କ୍ୟାମେରା 2 କେବଳ ଟେକ୍ସଚରକୁ କ୍ୟାପଚର କରିବାକୁ ସମର୍ଥନ କରେ | କ୍ୟାମେରା 2 କୁ ଅକ୍ଷମ କରନ୍ତୁ କିମ୍ବା ବିକଳ୍ପଗୁଡ଼ିକରେ ଟେକ୍ସଚରକୁ କ୍ୟାପଚର କରିବାକୁ ସକ୍ଷମ କରନ୍ତୁ |</string><string name="ok">ଠିକ୍ ଅଛି</string><string name="switch_camera">ଆଗ / ପଛ କ୍ୟାମେରା ସୁଇଚ୍ କରନ୍ତୁ |</string><string name="capture_format_change_text">କ୍ୟାପଚର୍ ଫର୍ମାଟ୍ ପରିବର୍ତ୍ତନ କରିବାକୁ ସ୍ଲାଇଡ୍ |</string><string name="muted">ନିରବ |</string><string name="toggle_debug">ତ୍ରୁଟି ନିବାରଣ ଦୃଶ୍ୟ ଟୋଗଲ୍ କରନ୍ତୁ |</string><string name="toggle_mic">ମାଇକ୍ରୋଫୋନ୍ ଟୋଗଲ୍ କରନ୍ତୁ / ବନ୍ଦ କରନ୍ତୁ |</string><string name="action_settings">ସେଟିଂସମୂହ</string><string name="action_loopback">ଲୁପବ୍ୟାକ୍ ସଂଯୋଗ |</string><string name="connect_description">କୋଠରୀ ସହିତ ସଂଯୋଗ କରନ୍ତୁ |</string><string name="add_favorite_description">ପ୍ରିୟ ଯୋଡନ୍ତୁ |</string><string name="format_description">%1$dx%2$d @ %3$d fps</string><string name="video_on_lbl">ଭିଡିଓ ଅନ୍!</string><string name="video_off_lbl">ଭିଡିଓ ବନ୍ଦ!</string><string name="call_end_lbl">କଲ୍ ଶେଷ!</string><string name="audio_off_lbl">ଅଡିଓ ବନ୍ଦ!</string><string name="audio_on_lbl">ଅଡିଓ ଅନ୍!</string><string name="video_on_off_button">ଭିଡିଓ ଅନ୍ / ଅଫ୍ ବଟନ୍ |</string><string name="call_end_button">କଲ୍ ଶେଷ ବଟନ୍ |</string><string name="audio_on_off_button">ଅଡିଓ ଅନ୍ / ଅଫ୍ ବଟନ୍ |</string><string name="you">ତୁମେ</string><string name="start_call_now">ବର୍ତ୍ତମାନ କଲ୍ ଆରମ୍ଭ କରନ୍ତୁ |</string><string name="start_txt_chat_now">ବର୍ତ୍ତମାନ ପାଠ୍ୟ ଚାଟ୍ ଆରମ୍ଭ କରନ୍ତୁ |</string><string name="connecting">ସଂଯୋଗ ...</string><string name="dummy_text">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</string><string name="dummy_text_1">Lorem ipsum dolor sit amet</string><string name="you_have_no_messages_start_sending_messages_now">ଆପଣଙ୍କର କୌଣସି ବାର୍ତ୍ତା ନାହିଁ! ବର୍ତ୍ତମାନ ବାର୍ତ୍ତା ପଠାଇବା ଆରମ୍ଭ କରନ୍ତୁ |</string><string name="empty_message_txt">ଦୟାକରି ଆପଣଙ୍କର ବାର୍ତ୍ତା ଲେଖନ୍ତୁ!</string><string name="loading">ଲୋଡିଂ ...</string><string name="video_call">ଭିଡିଓ କଲ୍ |</string><string name="please_wait_for_doctor">ଦୟାକରି ଡାକ୍ତରଙ୍କ ଉପଲବ୍ଧତା ପାଇଁ ଅପେକ୍ଷା କରନ୍ତୁ |</string><string name="call_end_aler_txt">ଆପଣ ଭିଡିଓ କଲ୍ ଶେଷ କରିବାକୁ ଚାହୁଁଛନ୍ତି କି?</string><string name="yes">ହଁ</string><string name="no">ନା</string></file></source><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\build\generated\res\rs\debug"/><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\build\generated\res\resValues\debug"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug$Generated" generated="true" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\debug\res"/></dataSet><dataSet aapt-namespace="http://schemas.android.com/apk/res-auto" config="debug" generated-set="debug$Generated" ignore_pattern="!.svn:!.git:!.ds_store:!*.scc:.*:&lt;dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"><source path="C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\debug\res"/></dataSet><mergedItems/></merger>
-\ No newline at end of file
-Index: webrtc/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>1<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n2<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n3    xmlns:tools=\"http://schemas.android.com/tools\"\r\n4    package=\"org.intelehealth.apprtc\"\r\n5    android:versionCode=\"1\"\r\n6    android:versionName=\"1.0\" >\r\n7\r\n8    <uses-sdk\r\n9        android:minSdkVersion=\"19\"\r\n9-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n10        android:targetSdkVersion=\"30\" />\r\n10-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml\r\n11\r\n12    <uses-feature android:name=\"android.hardware.camera\" />\r\n12-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:6:5-60\r\n12-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:6:19-57\r\n13    <uses-feature android:name=\"android.hardware.camera.autofocus\" />\r\n13-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:7:5-70\r\n13-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:7:19-67\r\n14    <uses-feature\r\n14-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:8:5-10:35\r\n15        android:glEsVersion=\"0x00020000\"\r\n15-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:9:9-41\r\n16        android:required=\"true\" />\r\n16-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:10:9-32\r\n17\r\n18    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n18-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:12:5-65\r\n18-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:12:22-62\r\n19    <uses-permission android:name=\"android.permission.CHANGE_NETWORK_STATE\" />\r\n19-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:13:5-79\r\n19-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:13:22-76\r\n20    <uses-permission android:name=\"android.permission.MODIFY_AUDIO_SETTINGS\" />\r\n20-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:14:5-80\r\n20-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:14:22-77\r\n21    <uses-permission android:name=\"android.permission.RECORD_AUDIO\" />\r\n21-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:15:5-71\r\n21-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:15:22-68\r\n22    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n22-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:16:5-67\r\n22-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:16:22-64\r\n23    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n23-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:17:5-81\r\n23-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:17:22-78\r\n24    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n24-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:18:5-79\r\n24-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:18:22-76\r\n25    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n25-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:19:5-68\r\n25-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:19:22-65\r\n26\r\n27    <application\r\n27-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:21:5-62:19\r\n28        android:allowBackup=\"true\"\r\n28-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:22:9-35\r\n29        android:icon=\"@mipmap/ic_launcher\"\r\n29-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:23:9-43\r\n30        android:label=\"@string/app_name\"\r\n30-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:24:9-41\r\n31        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n31-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:25:9-54\r\n32        android:supportsRtl=\"true\"\r\n32-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:26:9-35\r\n33        android:theme=\"@style/AppTheme\"\r\n33-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:27:9-40\r\n34        tools:ignore=\"LockedOrientationActivity\" >\r\n34-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:28:9-49\r\n35        <activity\r\n35-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:30:9-33:63\r\n36            android:name=\"org.intelehealth.apprtc.ChatActivity\"\r\n36-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:31:13-64\r\n37            android:screenOrientation=\"portrait\"\r\n37-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:32:13-49\r\n38            android:windowSoftInputMode=\"stateAlwaysHidden\" />\r\n38-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:33:13-60\r\n39        <!--\r\n40          <activity\r\n41              android:name=\"com.shivam.androidwebrtc.app_rtc_sample.main.AppRTCMainActivity\"\r\n42              android:label=\"@string/app_name\"\r\n43              android:windowSoftInputMode=\"adjustPan\" />\r\n44          <activity\r\n45              android:name=\"com.shivam.androidwebrtc.app_rtc_sample.call.CallActivity\"\r\n46              android:configChanges=\"orientation|screenSize\"\r\n47              android:label=\"@string/app_name\"\r\n48              android:screenOrientation=\"fullUser\"\r\n49              android:theme=\"@style/AppTheme.Call\" />\r\n50        -->\r\n51        <!--\r\n52<activity\r\n53            android:name=\"com.shivam.androidwebrtc.LauncherActivity\"\r\n54            android:theme=\"@style/AppTheme.NoActionBar\">\r\n55            <intent-filter>\r\n56                <action android:name=\"android.intent.action.MAIN\" />\r\n57\r\n58                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n59            </intent-filter>\r\n60        </activity>\r\n61        -->\r\n62        <activity\r\n62-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:57:9-61:59\r\n63            android:name=\"org.intelehealth.apprtc.CompleteActivity\"\r\n63-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:58:13-68\r\n64            android:label=\"@string/title_activity_complete\"\r\n64-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:59:13-60\r\n65            android:screenOrientation=\"portrait\"\r\n65-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:60:13-49\r\n66            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n66-->D:\\Intelehealth\\Android-Mobile-Client\\webrtc\\src\\main\\AndroidManifest.xml:61:13-56\r\n67    </application>\r\n68\r\n69</manifest>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- webrtc/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt	(revision 52b129f910110464ae3643152cb70f2c7c5b8861)
-+++ webrtc/build/intermediates/manifest_merge_blame_file/debug/manifest-merger-blame-debug-report.txt	(date 1626758057948)
-@@ -7,105 +7,102 @@
- 7
- 8    <uses-sdk
- 9        android:minSdkVersion="19"
--9-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+9-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 10        android:targetSdkVersion="30" />
--10-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
-+10-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml
- 11
- 12    <uses-feature android:name="android.hardware.camera" />
--12-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:5-60
--12-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:19-57
-+12-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:5-60
-+12-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:6:19-57
- 13    <uses-feature android:name="android.hardware.camera.autofocus" />
--13-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:5-70
--13-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:19-67
-+13-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:5-70
-+13-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:7:19-67
- 14    <uses-feature
--14-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:8:5-10:35
-+14-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:8:5-10:35
- 15        android:glEsVersion="0x00020000"
--15-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:9:9-41
-+15-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:9:9-41
- 16        android:required="true" />
--16-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:10:9-32
-+16-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:10:9-32
- 17
- 18    <uses-permission android:name="android.permission.CAMERA" />
--18-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:5-65
--18-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:22-62
-+18-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:5-65
-+18-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:12:22-62
- 19    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
--19-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:5-79
--19-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:22-76
-+19-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:5-79
-+19-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:13:22-76
- 20    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS" />
--20-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:5-80
--20-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:22-77
-+20-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:5-80
-+20-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:14:22-77
- 21    <uses-permission android:name="android.permission.RECORD_AUDIO" />
--21-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:5-71
--21-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:22-68
-+21-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:5-71
-+21-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:15:22-68
- 22    <uses-permission android:name="android.permission.INTERNET" />
--22-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:5-67
--22-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:22-64
-+22-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:5-67
-+22-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:16:22-64
- 23    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
--23-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:5-81
--23-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:22-78
-+23-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:5-81
-+23-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:17:22-78
- 24    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
--24-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:5-79
--24-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:22-76
-+24-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:5-79
-+24-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:18:22-76
- 25    <uses-permission android:name="android.permission.BLUETOOTH" />
--25-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:5-68
--25-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:22-65
--26
--27    <application
--27-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:21:5-62:19
--28        android:allowBackup="true"
--28-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:22:9-35
--29        android:icon="@mipmap/ic_launcher"
--29-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:23:9-43
-+25-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:5-68
-+25-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:19:22-65
-+26    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
-+26-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:20:5-75
-+26-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:20:22-72
-+27
-+28    <application
-+28-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:22:5-60:19
-+29        android:allowBackup="true"
-+29-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:23:9-35
- 30        android:label="@string/app_name"
--30-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:24:9-41
--31        android:roundIcon="@mipmap/ic_launcher_round"
--31-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:25:9-54
--32        android:supportsRtl="true"
--32-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:26:9-35
--33        android:theme="@style/AppTheme"
--33-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:27:9-40
--34        tools:ignore="LockedOrientationActivity" >
--34-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:28:9-49
--35        <activity
--35-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:30:9-33:63
--36            android:name="org.intelehealth.apprtc.ChatActivity"
--36-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:31:13-64
--37            android:screenOrientation="portrait"
--37-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:32:13-49
--38            android:windowSoftInputMode="stateAlwaysHidden" />
--38-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:33:13-60
--39        <!--
--40          <activity
--41              android:name="com.shivam.androidwebrtc.app_rtc_sample.main.AppRTCMainActivity"
--42              android:label="@string/app_name"
--43              android:windowSoftInputMode="adjustPan" />
--44          <activity
--45              android:name="com.shivam.androidwebrtc.app_rtc_sample.call.CallActivity"
--46              android:configChanges="orientation|screenSize"
--47              android:label="@string/app_name"
--48              android:screenOrientation="fullUser"
--49              android:theme="@style/AppTheme.Call" />
--50        -->
--51        <!--
--52<activity
--53            android:name="com.shivam.androidwebrtc.LauncherActivity"
--54            android:theme="@style/AppTheme.NoActionBar">
--55            <intent-filter>
--56                <action android:name="android.intent.action.MAIN" />
--57
--58                <category android:name="android.intent.category.LAUNCHER" />
--59            </intent-filter>
--60        </activity>
--61        -->
--62        <activity
--62-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:57:9-61:59
--63            android:name="org.intelehealth.apprtc.CompleteActivity"
--63-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:58:13-68
--64            android:label="@string/title_activity_complete"
--64-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:59:13-60
--65            android:screenOrientation="portrait"
--65-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:60:13-49
--66            android:theme="@style/AppTheme.NoActionBar" />
--66-->D:\Intelehealth\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:61:13-56
--67    </application>
--68
--69</manifest>
-+30-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:24:9-41
-+31        android:supportsRtl="true"
-+31-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:25:9-35
-+32        android:theme="@style/AppTheme"
-+32-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:26:9-40
-+33        tools:ignore="LockedOrientationActivity" >
-+33-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:27:9-49
-+34        <activity
-+34-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:29:9-32:63
-+35            android:name="org.intelehealth.apprtc.ChatActivity"
-+35-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:30:13-64
-+36            android:screenOrientation="portrait"
-+36-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:31:13-49
-+37            android:windowSoftInputMode="stateAlwaysHidden" />
-+37-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:32:13-60
-+38        <!--
-+39          <activity
-+40              android:name="com.shivam.androidwebrtc.app_rtc_sample.main.AppRTCMainActivity"
-+41              android:label="@string/app_name"
-+42              android:windowSoftInputMode="adjustPan" />
-+43          <activity
-+44              android:name="com.shivam.androidwebrtc.app_rtc_sample.call.CallActivity"
-+45              android:configChanges="orientation|screenSize"
-+46              android:label="@string/app_name"
-+47              android:screenOrientation="fullUser"
-+48              android:theme="@style/AppTheme.Call" />
-+49        -->
-+50        <!--
-+51<activity
-+52            android:name="com.shivam.androidwebrtc.LauncherActivity"
-+53            android:theme="@style/AppTheme.NoActionBar">
-+54            <intent-filter>
-+55                <action android:name="android.intent.action.MAIN" />
-+56
-+57                <category android:name="android.intent.category.LAUNCHER" />
-+58            </intent-filter>
-+59        </activity>
-+60        -->
-+61        <activity
-+61-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:56:9-59:59
-+62            android:name="org.intelehealth.apprtc.CompleteActivity"
-+62-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:57:13-68
-+63            android:screenOrientation="portrait"
-+63-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:58:13-49
-+64            android:theme="@style/AppTheme.NoActionBar" />
-+64-->C:\Users\Shubham\Desktop\AndroidStudio\Android-Mobile-Client\webrtc\src\main\AndroidManifest.xml:59:13-56
-+65    </application>
-+66
-+67</manifest>
-diff --git webrtc/build/generated/source/buildConfig/debug/org/intelehealth/apprtc/BuildConfig.java webrtc/build/generated/source/buildConfig/debug/org/intelehealth/apprtc/BuildConfig.java
-diff --git webrtc/build/generated/data_binding_base_class_source_out/debug/out/org/intelehealth/apprtc/databinding/ActivitySamplePeerConnectionBinding.java webrtc/build/generated/data_binding_base_class_source_out/debug/out/org/intelehealth/apprtc/databinding/ActivitySamplePeerConnectionBinding.java
-diff --git webrtc/build/generated/data_binding_trigger/debug/org/intelehealth/apprtc/DataBindingTriggerClass.java webrtc/build/generated/data_binding_trigger/debug/org/intelehealth/apprtc/DataBindingTriggerClass.java
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,3 +0,0 @@
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_11_11__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_11_11__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_29-06-2021_17_50__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_29-06-2021_17_50__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_19_14__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_22-06-2021_19_14__Default_Changelist_.xml
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_20-07-2021_10_40_[Default_Changelist]" date="1626757834348" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 20-07-2021 10:40 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_20-07-2021_14_04_[Default_Changelist]" date="1626770066641" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_14_04_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 20-07-2021 14:04 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_20-07-2021_10_40_[Default_Changelist]/shelved.patch	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,7 +0,0 @@
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_16-07-2021_19_46__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_16-07-2021_19_46__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_19-07-2021_15_34__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_19-07-2021_15_34__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Update_at_19-07-2021_15_34__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_19-07-2021_15_34__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_15-07-2021_20_32__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_15-07-2021_20_32__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_16-07-2021_10_31__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_16-07-2021_10_31__Default_Changelist_.xml
-diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_16-07-2021_19_33__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_16-07-2021_19_33__Default_Changelist_.xml
Index: .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_19-05-2021_16_12_[Default_Changelist]" date="1621420943161" recycled="false" toDelete="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19-05-2021_16_12_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 19-05-2021 16:12 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/DtonatorPreferences.xml
===================================================================
--- .idea/DtonatorPreferences.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/DtonatorPreferences.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="DtonatorPreferences">
-    <option name="classType" value="SINGLE_FILE_WITH_INNER_CLASS" />
-    <option name="customAnnotationPattern" value="@annotationTextHere(&quot;%s&quot;)" />
-    <option name="encapsulete">
-      <list>
-        <option value="PROVIDE_GETTER" />
-        <option value="PROVIDE_SETTER" />
-        <option value="PROVIDE_PRIVATE_FIELD" />
-      </list>
-    </option>
-    <option name="fieldType" value="GSON_EXPOSE" />
-    <option name="naming">
-      <list>
-        <option value="CAMEL_CASE" />
-      </list>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05__Default_Changelist_.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_20-07-2021_14_05_[Default_Changelist]" date="1626770113292" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-07-2021_14_05_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-07-2021 14:05 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CMakeSettings\">\r\n    <configurations>\r\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\r\n    </configurations>\r\n  </component>\r\n<<<<<<< HEAD\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n=======\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"JDK\" project-jdk-type=\"JavaSDK\">\r\n>>>>>>> age_gender-based_mm_questions\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/misc.xml	(date 1626929634599)
@@ -1,15 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="CMakeSettings">
-    <configurations>
-      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
-    </configurations>
-  </component>
-<<<<<<< HEAD
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
-=======
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="JDK" project-jdk-type="JavaSDK">
->>>>>>> age_gender-based_mm_questions
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/runConfigurations.xml	(date 1626929665209)
@@ -3,9 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
       </set>
     </option>
   </component>
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"11\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n        <option name=\"useQualifiedModuleNames\" value=\"true\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision 0d6a616206ddf97888fc3da83ad73a6220d7f380)
+++ .idea/gradle.xml	(date 1626929685729)
@@ -15,7 +15,6 @@
           </set>
         </option>
         <option name="resolveModulePerSourceSet" value="false" />
-        <option name="useQualifiedModuleNames" value="true" />
       </GradleProjectSettings>
     </option>
   </component>
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_12-07-2021_17_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_12-07-2021_17_23__Default_Changelist_.xml
