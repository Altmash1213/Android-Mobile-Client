Index: app/src/main/java/app/intelehealth/client/activities/identificationActivity/IdentificationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.intelehealth.client.activities.identificationActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.Configuration;\r\nimport android.content.res.Resources;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.BitmapFactory;\r\nimport android.os.Bundle;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.text.InputFilter;\r\nimport android.text.Spanned;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.NumberPicker;\r\nimport android.widget.RadioButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\n\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\nimport com.google.gson.Gson;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.time.Period;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\nimport java.util.UUID;\r\n\r\nimport app.intelehealth.client.R;\r\nimport app.intelehealth.client.activities.patientDetailActivity.PatientDetailActivity;\r\nimport app.intelehealth.client.app.AppConstants;\r\nimport app.intelehealth.client.app.IntelehealthApplication;\r\nimport app.intelehealth.client.database.dao.ImagesDAO;\r\nimport app.intelehealth.client.database.dao.ImagesPushDAO;\r\nimport app.intelehealth.client.database.dao.PatientsDAO;\r\nimport app.intelehealth.client.database.dao.SyncDAO;\r\nimport app.intelehealth.client.models.Patient;\r\nimport app.intelehealth.client.models.dto.PatientAttributesDTO;\r\nimport app.intelehealth.client.models.dto.PatientDTO;\r\nimport app.intelehealth.client.utilities.DateAndTimeUtils;\r\nimport app.intelehealth.client.utilities.EditTextUtils;\r\nimport app.intelehealth.client.utilities.FileUtils;\r\nimport app.intelehealth.client.utilities.IReturnValues;\r\nimport app.intelehealth.client.utilities.Logger;\r\nimport app.intelehealth.client.utilities.SessionManager;\r\nimport app.intelehealth.client.utilities.UuidGenerator;\r\n\r\nimport app.intelehealth.client.activities.cameraActivity.CameraActivity;\r\nimport app.intelehealth.client.activities.homeActivity.HomeActivity;\r\nimport app.intelehealth.client.activities.setupActivity.SetupActivity;\r\nimport app.intelehealth.client.utilities.NetworkConnection;\r\nimport app.intelehealth.client.utilities.StringUtils;\r\nimport app.intelehealth.client.utilities.exception.DAOException;\r\n\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_caste_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_economic_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_education_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_or_caste_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_or_economic_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_or_education_edit;\r\n\r\nimport static app.intelehealth.client.utilities.StringUtils.en__hi_dob;\r\nimport static app.intelehealth.client.utilities.StringUtils.en__or_dob;\r\n\r\npublic class IdentificationActivity extends AppCompatActivity {\r\n    private static final String TAG = IdentificationActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private boolean hasLicense = false;\r\n    private ArrayAdapter<CharSequence> educationAdapter;\r\n    private ArrayAdapter<CharSequence> casteAdapter;\r\n    private ArrayAdapter<CharSequence> economicStatusAdapter;\r\n    UuidGenerator uuidGenerator = new UuidGenerator();\r\n    Calendar today = Calendar.getInstance();\r\n    Calendar dob = Calendar.getInstance();\r\n    Patient patient1 = new Patient();\r\n    private String patientUuid = \"\";\r\n    private String mGender;\r\n    String patientID_edit;\r\n    private int mDOBYear;\r\n    private int mDOBMonth;\r\n    private int mDOBDay;\r\n    private DatePickerDialog mDOBPicker;\r\n    private int mAgeYears = 0;\r\n    private int mAgeMonths = 0;\r\n    private int mAgeDays = 0;\r\n    private String country1, state;\r\n    PatientsDAO patientsDAO = new PatientsDAO();\r\n    EditText mFirstName;\r\n    EditText mMiddleName;\r\n    EditText mLastName;\r\n    EditText mDOB;\r\n    EditText mPhoneNum;\r\n    EditText mAge;\r\n    MaterialAlertDialogBuilder mAgePicker;\r\n    EditText mAddress1;\r\n    EditText mAddress2;\r\n    AutoCompleteTextView mCity;\r\n    EditText mPostal;\r\n    RadioButton mGenderM;\r\n    RadioButton mGenderF;\r\n    EditText mRelationship;\r\n    EditText mOccupation;\r\n    EditText countryText;\r\n    EditText stateText;\r\n    EditText casteText;\r\n    Spinner mCountry;\r\n    Spinner mState;\r\n    EditText economicText;\r\n    EditText educationText;\r\n    TextInputLayout casteLayout;\r\n    TextInputLayout economicLayout;\r\n    TextInputLayout educationLayout;\r\n    LinearLayout countryStateLayout;\r\n    Spinner mCaste;\r\n    Spinner mEducation;\r\n    Spinner mEconomicStatus;\r\n    ImageView mImageView;\r\n    String uuid = \"\";\r\n    PatientDTO patientdto = new PatientDTO();\r\n    ImagesDAO imagesDAO = new ImagesDAO();\r\n    private String mCurrentPhotoPath;\r\n    Context context;\r\n    private String BlockCharacterSet_Others = \"0123456789\\\\@$!=><&^*+€¥£`~\";\r\n    private String BlockCharacterSet_Name = \"\\\\@$!=><&^*+\\\"\\'€¥£`~\";\r\n\r\n    Intent i_privacy;\r\n    String privacy_value;\r\n    private int retainPickerYear;\r\n    private int retainPickerMonth;\r\n    private int retainPickerDate;\r\n    int dob_indexValue = 15;\r\n    //random value assigned to check while editing. If user didnt updated the dob and just clicked on fab\r\n    //in that case, the edit() will get the dob_indexValue as 15 and we  will check if the\r\n    //dob_indexValue == 15 then just get the mDOB editText value and add in the db.\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        sessionManager = new SessionManager(this);\r\n        String language = sessionManager.getAppLanguage();\r\n        Log.d(\"lang\", \"lang: \"+language);\r\n        //In case of crash still the app should hold the current lang fix.\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config,\r\n                    getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n      //  sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        setContentView(R.layout.activity_identification);\r\n        setTitle(R.string.title_activity_identification);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        i_privacy = getIntent();\r\n        context = IdentificationActivity.this;\r\n        privacy_value = i_privacy.getStringExtra(\"privacy\"); //privacy_accept value retrieved from previous act.\r\n\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n        mFirstName = findViewById(R.id.identification_first_name);\r\n        mFirstName.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Name}); //maxlength 25\r\n\r\n        mMiddleName = findViewById(R.id.identification_middle_name);\r\n        mMiddleName.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Name}); //maxlength 25\r\n\r\n        mLastName = findViewById(R.id.identification_last_name);\r\n        mLastName.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Name}); //maxlength 25\r\n\r\n        mDOB = findViewById(R.id.identification_birth_date_text_view);\r\n        mPhoneNum = findViewById(R.id.identification_phone_number);\r\n\r\n     /*   mPhoneNum.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(hasFocus) {\r\n                    if(mPhoneNum.getText().toString().trim().length() < 10)\r\n                        mPhoneNum.setError(\"Enter 10 digits\");\r\n                    else\r\n                        mPhoneNum.setError(null);\r\n                }\r\n            }\r\n        });*/\r\n\r\n        mAge = findViewById(R.id.identification_age);\r\n        mAddress1 = findViewById(R.id.identification_address1);\r\n        mAddress1.setFilters(new InputFilter[]{new InputFilter.LengthFilter(50), inputFilter_Name}); //maxlength 50\r\n\r\n        mAddress2 = findViewById(R.id.identification_address2);\r\n        mAddress2.setFilters(new InputFilter[]{new InputFilter.LengthFilter(50), inputFilter_Name}); //maxlength 50\r\n\r\n        mCity = findViewById(R.id.identification_city);\r\n        mCity.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Others}); //maxlength 25\r\n\r\n        stateText = findViewById(R.id.identification_state);\r\n        mState = findViewById(R.id.spinner_state);\r\n        mPostal = findViewById(R.id.identification_postal_code);\r\n        countryText = findViewById(R.id.identification_country);\r\n        mCountry = findViewById(R.id.spinner_country);\r\n        mGenderM = findViewById(R.id.identification_gender_male);\r\n        mGenderF = findViewById(R.id.identification_gender_female);\r\n        mRelationship = findViewById(R.id.identification_relationship);\r\n        mRelationship.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Others}); //maxlength 25\r\n\r\n        mOccupation = findViewById(R.id.identification_occupation);\r\n        mOccupation.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Others}); //maxlength 25\r\n\r\n        mCaste = findViewById(R.id.spinner_caste);\r\n        mEducation = findViewById(R.id.spinner_education);\r\n        mEconomicStatus = findViewById(R.id.spinner_economic_status);\r\n        casteText = findViewById(R.id.identification_caste);\r\n        educationText = findViewById(R.id.identification_education);\r\n        economicText = findViewById(R.id.identification_econiomic_status);\r\n\r\n        casteLayout = findViewById(R.id.identification_txtlcaste);\r\n        economicLayout = findViewById(R.id.identification_txtleconomic);\r\n        educationLayout = findViewById(R.id.identification_txtleducation);\r\n        countryStateLayout = findViewById(R.id.identification_llcountry_state);\r\n        mImageView = findViewById(R.id.imageview_id_picture);\r\n//Initialize the local database to store patient information\r\n\r\n        Intent intent = this.getIntent(); // The intent was passed to the activity\r\n        if (intent != null) {\r\n            if (intent.hasExtra(\"patientUuid\")) {\r\n                this.setTitle(R.string.update_patient_identification);\r\n                patientID_edit = intent.getStringExtra(\"patientUuid\");\r\n                patient1.setUuid(patientID_edit);\r\n                setscreen(patientID_edit);\r\n            }\r\n        }\r\n//        if (sessionManager.valueContains(\"licensekey\"))\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            //Display the fields on the Add Patient screen as per the config file\r\n            if (obj.getBoolean(\"mFirstName\")) {\r\n                mFirstName.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mFirstName.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mMiddleName\")) {\r\n                mMiddleName.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mMiddleName.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mLastName\")) {\r\n                mLastName.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mLastName.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mDOB\")) {\r\n                mDOB.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mDOB.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mPhoneNum\")) {\r\n                mPhoneNum.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mPhoneNum.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mAge\")) {\r\n                mAge.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mAge.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mAddress1\")) {\r\n                mAddress1.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mAddress1.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mAddress2\")) {\r\n                mAddress2.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mAddress2.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mCity\")) {\r\n                mCity.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mCity.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"countryStateLayout\")) {\r\n                countryStateLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                countryStateLayout.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mPostal\")) {\r\n                mPostal.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mPostal.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mGenderM\")) {\r\n                mGenderM.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mGenderM.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mGenderF\")) {\r\n                mGenderF.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mGenderF.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mRelationship\")) {\r\n                mRelationship.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mRelationship.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mOccupation\")) {\r\n                mOccupation.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mOccupation.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"casteLayout\")) {\r\n                casteLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                casteLayout.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"educationLayout\")) {\r\n                educationLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                educationLayout.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"economicLayout\")) {\r\n                economicLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                economicLayout.setVisibility(View.GONE);\r\n            }\r\n            country1 = obj.getString(\"mCountry\");\r\n            state = obj.getString(\"mState\");\r\n\r\n            if (country1.equalsIgnoreCase(\"India\")) {\r\n                EditTextUtils.setEditTextMaxLength(10, mPhoneNum);\r\n            } else if (country1.equalsIgnoreCase(\"Philippines\")) {\r\n                EditTextUtils.setEditTextMaxLength(11, mPhoneNum);\r\n            }\r\n\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n//            Issue #627\r\n//            added the catch exception to check the config and throwing back to setup activity\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n            showAlertDialogButtonClicked(e.toString());\r\n        }\r\n\r\n        //setting the fields when user clicks edit details\r\n        mFirstName.setText(patient1.getFirst_name());\r\n        mMiddleName.setText(patient1.getMiddle_name());\r\n        mLastName.setText(patient1.getLast_name());\r\n        mDOB.setText(patient1.getDate_of_birth());\r\n        mPhoneNum.setText(patient1.getPhone_number());\r\n        mAddress1.setText(patient1.getAddress1());\r\n        mAddress2.setText(patient1.getAddress2());\r\n        mCity.setText(patient1.getCity_village());\r\n        mPostal.setText(patient1.getPostal_code());\r\n        mRelationship.setText(patient1.getSdw());\r\n        mOccupation.setText(patient1.getOccupation());\r\n\r\n        if (patient1.getPatient_photo() != null && !patient1.getPatient_photo().trim().isEmpty())\r\n            mImageView.setImageBitmap(BitmapFactory.decodeFile(patient1.getPatient_photo()));\r\n\r\n        Resources res = getResources();\r\n        ArrayAdapter<CharSequence> countryAdapter = ArrayAdapter.createFromResource(this,\r\n                R.array.countries, R.layout.custom_spinner);\r\n        //countryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        mCountry.setAdapter(countryAdapter);\r\n\r\n//        ArrayAdapter<CharSequence> casteAdapter = ArrayAdapter.createFromResource(this,\r\n//                R.array.caste, R.layout.custom_spinner);\r\n//        //countryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n//        mCaste.setAdapter(casteAdapter);\r\n        try {\r\n            String casteLanguage = \"caste_\" + sessionManager.getAppLanguage();\r\n            int castes = res.getIdentifier(casteLanguage, \"array\", getApplicationContext().getPackageName());\r\n            if (castes != 0) {\r\n                casteAdapter = ArrayAdapter.createFromResource(this,\r\n                        castes, R.layout.custom_spinner);\r\n\r\n            }\r\n            mCaste.setAdapter(casteAdapter);\r\n        } catch (Exception e) {\r\n            Toast.makeText(this, R.string.education_values_missing, Toast.LENGTH_SHORT).show();\r\n            Logger.logE(\"Identification\", \"#648\", e);\r\n        }\r\n        try {\r\n            String economicLanguage = \"economic_\" + sessionManager.getAppLanguage();\r\n            int economics = res.getIdentifier(economicLanguage, \"array\", getApplicationContext().getPackageName());\r\n            if (economics != 0) {\r\n                economicStatusAdapter = ArrayAdapter.createFromResource(this,\r\n                        economics, R.layout.custom_spinner);\r\n            }\r\n            // countryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            mEconomicStatus.setAdapter(economicStatusAdapter);\r\n        } catch (Exception e) {\r\n            Toast.makeText(this, R.string.economic_values_missing, Toast.LENGTH_SHORT).show();\r\n            Logger.logE(\"Identification\", \"#648\", e);\r\n        }\r\n        try {\r\n            String educationLanguage = \"education_\" + sessionManager.getAppLanguage();\r\n            int educations = res.getIdentifier(educationLanguage, \"array\", getApplicationContext().getPackageName());\r\n            if (educations != 0) {\r\n                educationAdapter = ArrayAdapter.createFromResource(this,\r\n                        educations, R.layout.custom_spinner);\r\n\r\n            }\r\n            // countryAdapter.setDropDownViewResource(R.layout.custom_spinner);\r\n            mEducation.setAdapter(educationAdapter);\r\n        } catch (Exception e) {\r\n            Toast.makeText(this, R.string.education_values_missing, Toast.LENGTH_SHORT).show();\r\n            Logger.logE(\"Identification\", \"#648\", e);\r\n        }\r\n\r\n\r\n        if (null == patientID_edit || patientID_edit.isEmpty()) {\r\n            generateUuid();\r\n\r\n        }\r\n\r\n        // setting radio button automatically according to the databse when user clicks edit details\r\n        if (patientID_edit != null) {\r\n\r\n            if (patient1.getGender().equals(\"M\")) {\r\n                mGenderM.setChecked(true);\r\n                if (mGenderF.isChecked())\r\n                    mGenderF.setChecked(false);\r\n                Log.v(TAG, \"yes\");\r\n            } else {\r\n                mGenderF.setChecked(true);\r\n                if (mGenderM.isChecked())\r\n                    mGenderM.setChecked(false);\r\n                Log.v(TAG, \"yes\");\r\n            }\r\n\r\n        }\r\n        if (mGenderM.isChecked()) {\r\n            mGender = \"M\";\r\n        } else {\r\n            mGender = \"F\";\r\n        }\r\n        if (patientID_edit != null) {\r\n            // setting country according database\r\n            mCountry.setSelection(countryAdapter.getPosition(String.valueOf(patient1.getCountry())));\r\n\r\n            if (patient1.getEducation_level().equals(getResources().getString(R.string.not_provided)))\r\n                mEducation.setSelection(0);\r\n//            else\r\n//                mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(patient1.getEducation_level()) : 0);\r\n\r\n            else {\r\n                if(sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String education = switch_hi_education_edit(patient1.getEducation_level());\r\n                    mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(education) : 0);\r\n                }\r\n                else if(sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    String education = switch_or_education_edit(patient1.getEducation_level());\r\n                    mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(education) : 0);\r\n                }\r\n                else {\r\n                    mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(patient1.getEducation_level()) : 0);\r\n                }\r\n            }\r\n\r\n            if (educationAdapter == null) {\r\n                Toast.makeText(context, \"Education Level: \" + patient1.getEducation_level(), Toast.LENGTH_LONG).show();\r\n            }\r\n\r\n\r\n            if (patient1.getEconomic_status().equals(getResources().getString(R.string.not_provided)))\r\n                mEconomicStatus.setSelection(0);\r\n//            else\r\n//                mEconomicStatus.setSelection(economicStatusAdapter.getPosition(patient1.getEconomic_status()));\r\n\r\n            else {\r\n                if(sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String economic = switch_hi_economic_edit(patient1.getEconomic_status());\r\n                    mEconomicStatus.setSelection(economicStatusAdapter.getPosition(economic));\r\n                }\r\n                else if(sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    String economic = switch_or_economic_edit(patient1.getEconomic_status());\r\n                    mEconomicStatus.setSelection(economicStatusAdapter.getPosition(economic));\r\n                }\r\n                else {\r\n                    mEconomicStatus.setSelection(economicStatusAdapter.getPosition(patient1.getEconomic_status()));\r\n                }\r\n            }\r\n\r\n            if (patient1.getCaste().equals(getResources().getString(R.string.not_provided)))\r\n                mCaste.setSelection(0);\r\n//            else\r\n//                mCaste.setSelection(casteAdapter.getPosition(patient1.getCaste()));\r\n\r\n            else {\r\n                if(sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String caste = switch_hi_caste_edit(patient1.getCaste());\r\n                    mCaste.setSelection(casteAdapter.getPosition(caste));\r\n                }\r\n                else if(sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    String caste = switch_or_caste_edit(patient1.getCaste());\r\n                    mCaste.setSelection(casteAdapter.getPosition(caste));\r\n                }\r\n                else {\r\n                    mCaste.setSelection(casteAdapter.getPosition(patient1.getCaste()));\r\n                }\r\n\r\n            }\r\n\r\n        } else {\r\n            mCountry.setSelection(countryAdapter.getPosition(country1));\r\n        }\r\n\r\n        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(this, R.array.state_error, R.layout.custom_spinner);\r\n        //  stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        mState.setAdapter(stateAdapter);\r\n\r\n        mCountry.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if (i != 0) {\r\n                    String country = adapterView.getItemAtPosition(i).toString();\r\n\r\n                    if (country.matches(\"India\")) {\r\n                        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                                R.array.states_india, R.layout.custom_spinner);\r\n                        // stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        mState.setAdapter(stateAdapter);\r\n                        // setting state according database when user clicks edit details\r\n\r\n                        if (patientID_edit != null)\r\n                            mState.setSelection(stateAdapter.getPosition(String.valueOf(patient1.getState_province())));\r\n                        else\r\n                            mState.setSelection(stateAdapter.getPosition(state));\r\n\r\n                    } else if (country.matches(\"United States\")) {\r\n                        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                                R.array.states_us, R.layout.custom_spinner);\r\n                        // stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        mState.setAdapter(stateAdapter);\r\n\r\n                        if (patientID_edit != null) {\r\n\r\n                            mState.setSelection(stateAdapter.getPosition(String.valueOf(patient1.getState_province())));\r\n                        }\r\n                    } else if (country.matches(\"Philippines\")) {\r\n                        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                                R.array.states_philippines, R.layout.custom_spinner);\r\n                        stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        mState.setAdapter(stateAdapter);\r\n\r\n                        if (patientID_edit != null) {\r\n                            mState.setSelection(stateAdapter.getPosition(String.valueOf(patient1.getState_province())));\r\n                        } else {\r\n                            mState.setSelection(stateAdapter.getPosition(\"Bukidnon\"));\r\n                        }\r\n                    }\r\n                } else {\r\n                    ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                            R.array.state_error, R.layout.custom_spinner);\r\n                    // stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    mState.setAdapter(stateAdapter);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n        mState.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                String state = parent.getItemAtPosition(position).toString();\r\n                if (state.matches(\"Odisha\")) {\r\n                    //Creating the instance of ArrayAdapter containing list of fruit names\r\n                    ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                            R.array.odisha_villages, R.layout.custom_spinner);\r\n                    mCity.setThreshold(1);//will start working from first character\r\n                    mCity.setAdapter(adapter);//setting the adapter data into the AutoCompleteTextView\r\n                } else if (state.matches(\"Bukidnon\")) {\r\n                    ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                            R.array.bukidnon_villages, R.layout.custom_spinner);\r\n                    mCity.setThreshold(1);//will start working from first character\r\n                    mCity.setAdapter(adapter);//setting the adapter data into the AutoCompleteTextView\r\n                } else {\r\n                    mCity.setAdapter(null);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        mGenderF.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onRadioButtonClicked(v);\r\n            }\r\n        });\r\n\r\n        mGenderM.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onRadioButtonClicked(v);\r\n            }\r\n        });\r\n        mImageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String patientTemp = \"\";\r\n                if (patientUuid.equalsIgnoreCase(\"\")) {\r\n                    patientTemp = patientID_edit;\r\n                } else {\r\n                    patientTemp = patientUuid;\r\n                }\r\n                File filePath = new File(AppConstants.IMAGE_PATH + patientTemp);\r\n                if (!filePath.exists()) {\r\n                    filePath.mkdir();\r\n                }\r\n                Intent cameraIntent = new Intent(IdentificationActivity.this, CameraActivity.class);\r\n\r\n                // cameraIntent.putExtra(CameraActivity.SHOW_DIALOG_MESSAGE, getString(R.string.camera_dialog_default));\r\n                cameraIntent.putExtra(CameraActivity.SET_IMAGE_NAME, patientTemp);\r\n                cameraIntent.putExtra(CameraActivity.SET_IMAGE_PATH, filePath.toString());\r\n                startActivityForResult(cameraIntent, CameraActivity.TAKE_IMAGE);\r\n            }\r\n        });\r\n        mDOBYear = today.get(Calendar.YEAR);\r\n        mDOBMonth = today.get(Calendar.MONTH);\r\n        mDOBDay = today.get(Calendar.DAY_OF_MONTH);\r\n        //DOB is set using an AlertDialog\r\n       // Locale.setDefault(Locale.ENGLISH);\r\n\r\n        mDOBPicker = new DatePickerDialog(this, android.R.style.Theme_Holo_Light_Dialog_NoActionBar, new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                //Set the DOB calendar to the date selected by the user\r\n                dob.set(year, monthOfYear, dayOfMonth);\r\n                mDOB.setError(null);\r\n                mAge.setError(null);\r\n                //Set Maximum date to current date because even after bday is less than current date it goes to check date is set after today\r\n                mDOBPicker.getDatePicker().setMaxDate(System.currentTimeMillis() - 1000);\r\n               // Locale.setDefault(Locale.ENGLISH);\r\n                //Formatted so that it can be read the way the user sets\r\n                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.ENGLISH);\r\n                dob.set(year, monthOfYear, dayOfMonth);\r\n                String dobString = simpleDateFormat.format(dob.getTime());\r\n                dob_indexValue = monthOfYear; //fetching the inex value of month selected...\r\n\r\n                if (sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String dob_text = en__hi_dob(dobString); //to show text of English into Hindi...\r\n                    mDOB.setText(dob_text);\r\n                } else if (sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    String dob_text = en__or_dob(dobString); //to show text of English into Odiya...\r\n                    mDOB.setText(dob_text);\r\n                } else {\r\n                    mDOB.setText(dobString);\r\n                }\r\n\r\n              //  mDOB.setText(dobString);\r\n                mDOBYear = year;\r\n                mDOBMonth = monthOfYear;\r\n                mDOBDay = dayOfMonth;\r\n\r\n                String age = getYear(dob.get(Calendar.YEAR), dob.get(Calendar.MONTH), dob.get(Calendar.DATE), today.get(Calendar.YEAR), today.get(Calendar.MONTH), today.get(Calendar.DATE));\r\n                //get years months days\r\n                String[] frtData = age.split(\"-\");\r\n\r\n                String[] yearData = frtData[0].split(\" \");\r\n                String[] monthData = frtData[1].split(\" \");\r\n                String[] daysData = frtData[2].split(\" \");\r\n\r\n                mAgeYears = Integer.valueOf(yearData[0]);\r\n                mAgeMonths = Integer.valueOf(monthData[1]);\r\n                mAgeDays = Integer.valueOf(daysData[1]);\r\n                mAge.setText(age);\r\n\r\n            }\r\n        }, mDOBYear, mDOBMonth, mDOBDay);\r\n\r\n        //DOB Picker is shown when clicked\r\n        mDOBPicker.getDatePicker().setMaxDate(System.currentTimeMillis());\r\n        mDOB.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                mDOBPicker.show();\r\n            }\r\n        });\r\n        //if patient update then age will be set\r\n        if (patientID_edit != null) {\r\n            //dob to be displayed based on translation...\r\n            String dob = DateAndTimeUtils.getFormatedDateOfBirthAsView(patient1.getDate_of_birth());\r\n            if (sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                String dob_text = en__hi_dob(dob); //to show text of English into Hindi...\r\n                mDOB.setText(dob_text);\r\n            } else if (sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                String dob_text = en__or_dob(dob); //to show text of English into Odiya...\r\n                mDOB.setText(dob_text);\r\n            } else {\r\n                mDOB.setText(dob);\r\n            }\r\n\r\n           // mDOB.setText(DateAndTimeUtils.getFormatedDateOfBirthAsView(patient1.getDate_of_birth()));\r\n            //get year month days\r\n            String yrMoDays = DateAndTimeUtils.getAgeInYearMonth(patient1.getDate_of_birth(), context);\r\n\r\n            String[] ymdData = DateAndTimeUtils.getAgeInYearMonth(patient1.getDate_of_birth()).split(\" \");\r\n            mAgeYears = Integer.valueOf(ymdData[0]);\r\n            mAgeMonths = Integer.valueOf(ymdData[1]);\r\n            mAgeDays = Integer.valueOf(ymdData[2]);\r\n            mAge.setText(yrMoDays);\r\n        }\r\n        mAge.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                mAgePicker = new MaterialAlertDialogBuilder(IdentificationActivity.this, R.style.AlertDialogStyle);\r\n                mAgePicker.setTitle(R.string.identification_screen_prompt_age);\r\n                final LayoutInflater inflater = getLayoutInflater();\r\n                View convertView = inflater.inflate(R.layout.dialog_2_numbers_picker, null);\r\n                mAgePicker.setView(convertView);\r\n                NumberPicker yearPicker = convertView.findViewById(R.id.dialog_2_numbers_quantity);\r\n                NumberPicker monthPicker = convertView.findViewById(R.id.dialog_2_numbers_unit);\r\n                NumberPicker dayPicker = convertView.findViewById(R.id.dialog_3_numbers_unit);\r\n                dayPicker.setVisibility(View.VISIBLE);\r\n\r\n                final TextView middleText = convertView.findViewById(R.id.dialog_2_numbers_text);\r\n                final TextView endText = convertView.findViewById(R.id.dialog_2_numbers_text_2);\r\n                final TextView dayTv = convertView.findViewById(R.id.dialog_2_numbers_text_3);\r\n                dayPicker.setVisibility(View.VISIBLE);\r\n\r\n                int totalDays = today.getActualMaximum(Calendar.DAY_OF_MONTH);\r\n                dayTv.setText(getString(R.string.days));\r\n                middleText.setText(getString(R.string.identification_screen_picker_years));\r\n                endText.setText(getString(R.string.identification_screen_picker_months));\r\n\r\n\r\n                yearPicker.setMinValue(0);\r\n                yearPicker.setMaxValue(100);\r\n                monthPicker.setMinValue(0);\r\n                monthPicker.setMaxValue(12);\r\n\r\n                dayPicker.setMinValue(0);\r\n                dayPicker.setMaxValue(31);\r\n\r\n                EditText yearText = yearPicker.findViewById(Resources.getSystem().getIdentifier(\"numberpicker_input\", \"id\", \"android\"));\r\n                EditText monthText = monthPicker.findViewById(Resources.getSystem().getIdentifier(\"numberpicker_input\", \"id\", \"android\"));\r\n                EditText dayText = dayPicker.findViewById(Resources.getSystem().getIdentifier(\"numberpicker_input\", \"id\", \"android\"));\r\n\r\n\r\n                yearPicker.setValue(mAgeYears);\r\n                monthPicker.setValue(mAgeMonths);\r\n                dayPicker.setValue(mAgeDays);\r\n\r\n                //year\r\n                EditTextUtils.returnEditextValues(new IReturnValues() {\r\n                    @Override\r\n                    public void onReturnValue(String value) {\r\n                        mAgeYears = Integer.valueOf(value);\r\n                    }\r\n                }, yearText);\r\n\r\n                //month\r\n                EditTextUtils.returnEditextValues(new IReturnValues() {\r\n                    @Override\r\n                    public void onReturnValue(String value) {\r\n                        mAgeMonths = Integer.valueOf(value);\r\n                    }\r\n                }, monthText);\r\n\r\n                //day\r\n                EditTextUtils.returnEditextValues(new IReturnValues() {\r\n                    @Override\r\n                    public void onReturnValue(String value) {\r\n                        mAgeDays = Integer.valueOf(value);\r\n                    }\r\n                }, dayText);\r\n                mAgePicker.setPositiveButton(R.string.generic_ok, (dialog, which) -> {\r\n                    String ageString = mAgeYears + getString(R.string.identification_screen_text_years) + \" - \" +\r\n                            mAgeMonths + getString(R.string.identification_screen_text_months) + \" - \" +\r\n                            mAgeDays + getString(R.string.days);\r\n                    mAge.setText(ageString);\r\n\r\n\r\n                    Calendar calendar = Calendar.getInstance();\r\n                    int curYear = calendar.get(Calendar.YEAR);\r\n                    //int birthYear = curYear - yearPicker.getValue();\r\n                    int birthYear = curYear - mAgeYears;\r\n                    int curMonth = calendar.get(Calendar.MONTH);\r\n                    //int birthMonth = curMonth - monthPicker.getValue();\r\n                    int birthMonth = curMonth - mAgeMonths;\r\n                    //int birthDay = calendar.get(Calendar.DAY_OF_MONTH) - dayPicker.getValue();\r\n                    int birthDay = calendar.get(Calendar.DAY_OF_MONTH) - mAgeDays;\r\n                    mDOBYear = birthYear;\r\n                    mDOBMonth = birthMonth;\r\n\r\n                    if (birthDay < 0) {\r\n                        mDOBDay = birthDay + totalDays - 1;\r\n                        mDOBMonth--;\r\n\r\n                    } else {\r\n                        mDOBDay = birthDay;\r\n                    }\r\n                 //   Locale.setDefault(Locale.ENGLISH);\r\n                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\",\r\n                            Locale.ENGLISH);\r\n                    dob.set(mDOBYear, mDOBMonth, mDOBDay);\r\n                    String dobString = simpleDateFormat.format(dob.getTime());\r\n                    mDOB.setText(dobString);\r\n                    mDOBPicker.updateDate(mDOBYear, mDOBMonth, mDOBDay);\r\n                    dialog.dismiss();\r\n                });\r\n                mAgePicker.setNegativeButton(R.string.generic_cancel, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n                AlertDialog alertDialog = mAgePicker.show();\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n            }\r\n        });\r\n        FloatingActionButton fab = findViewById(R.id.fab);\r\n        fab.setOnClickListener(v -> {\r\n            if (patientID_edit != null) {\r\n                onPatientUpdateClicked(patient1);\r\n            } else {\r\n                onPatientCreateClicked();\r\n            }\r\n        });\r\n    }\r\n\r\n    public String getYear(int syear, int smonth, int sday, int eyear, int emonth, int eday) {\r\n        String calculatedAge = null;\r\n        int resmonth;\r\n        int resyear;\r\n        int resday;\r\n\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\r\n\r\n            LocalDate today = LocalDate.now();\r\n            LocalDate birthday = LocalDate.of(syear, smonth + 1, sday);\r\n\r\n            Period p = Period.between(birthday, today);\r\n            System.out.println(p.getDays());\r\n            System.out.println(p.getMonths());\r\n            System.out.println(p.getYears());\r\n            calculatedAge = p.getYears() + \" years  - \" + p.getMonths() + \" month - \" + p.getDays() + \" days\";\r\n\r\n\r\n        } else {\r\n\r\n            //calculating year\r\n            resyear = eyear - syear;\r\n\r\n            //calculating month\r\n            if (emonth >= smonth) {\r\n                resmonth = emonth - smonth;\r\n            } else {\r\n                resmonth = emonth - smonth;\r\n                resmonth = 12 + resmonth;\r\n                resyear--;\r\n            }\r\n\r\n            //calculating date\r\n            if (eday >= sday) {\r\n                resday = eday - sday;\r\n            } else {\r\n                resday = eday - sday;\r\n                resday = 30 + resday;\r\n                if (resmonth == 0) {\r\n                    resmonth = 11;\r\n                    resyear--;\r\n                } else {\r\n                    resmonth--;\r\n                }\r\n            }\r\n\r\n            //displaying error if calculated age is negative\r\n            if (resday < 0 || resmonth < 0 || resyear < 0) {\r\n                Toast.makeText(this, \"Current Date must be greater than Date of Birth\", Toast.LENGTH_LONG).show();\r\n                mDOB.setError(getString(R.string.identification_screen_error_dob));\r\n                mAge.setError(getString(R.string.identification_screen_error_age));\r\n            } else {\r\n                // t1.setText(\"Age: \" + resyear + \" years /\" + resmonth + \" months/\" + resday + \" days\");\r\n\r\n                calculatedAge = resyear + \" years - \" + resmonth + \" months - \" + resday + \" days\";\r\n            }\r\n        }\r\n\r\n        return calculatedAge != null ? calculatedAge : \" \";\r\n    }\r\n\r\n    public void onRadioButtonClicked(View view) {\r\n        boolean checked = ((RadioButton) view).isChecked();\r\n        switch (view.getId()) {\r\n            case R.id.identification_gender_male:\r\n                if (checked)\r\n                    mGender = \"M\";\r\n                Log.v(TAG, \"gender:\" + mGender);\r\n                break;\r\n            case R.id.identification_gender_female:\r\n                if (checked)\r\n                    mGender = \"F\";\r\n                Log.v(TAG, \"gender:\" + mGender);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private InputFilter inputFilter_Name = new InputFilter() { //filter input for name fields\r\n        @Override\r\n        public CharSequence filter(CharSequence charSequence, int i, int i1, Spanned spanned, int i2, int i3) {\r\n            if (charSequence != null && BlockCharacterSet_Name.contains((\"\" + charSequence))) {\r\n                return \"\";\r\n            }\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private InputFilter inputFilter_Others = new InputFilter() { //filter input for all other fields\r\n        @Override\r\n        public CharSequence filter(CharSequence charSequence, int i, int i1, Spanned spanned, int i2, int i3) {\r\n            if (charSequence != null && BlockCharacterSet_Others.contains((\"\" + charSequence))) {\r\n                return \"\";\r\n            }\r\n            return null;\r\n        }\r\n    };\r\n\r\n    public void generateUuid() {\r\n\r\n        patientUuid = uuidGenerator.UuidGenerator();\r\n\r\n    }\r\n\r\n    // This method is for setting the screen with existing values in database whenn user clicks edit details\r\n    private void setscreen(String str) {\r\n        SQLiteDatabase db = AppConstants.inteleHealthDatabaseHelper.getWriteDb();\r\n\r\n        String patientSelection = \"uuid=?\";\r\n        String[] patientArgs = {str};\r\n        String[] patientColumns = {\"uuid\", \"first_name\", \"middle_name\", \"last_name\",\r\n                \"date_of_birth\", \"address1\", \"address2\", \"city_village\", \"state_province\",\r\n                \"postal_code\", \"country\", \"phone_number\", \"gender\", \"sdw\", \"occupation\", \"patient_photo\",\r\n                \"economic_status\", \"education_status\", \"caste\"};\r\n        Cursor idCursor = db.query(\"tbl_patient\", patientColumns, patientSelection, patientArgs, null, null, null);\r\n        if (idCursor.moveToFirst()) {\r\n            do {\r\n                patient1.setUuid(idCursor.getString(idCursor.getColumnIndexOrThrow(\"uuid\")));\r\n                patient1.setFirst_name(idCursor.getString(idCursor.getColumnIndexOrThrow(\"first_name\")));\r\n                patient1.setMiddle_name(idCursor.getString(idCursor.getColumnIndexOrThrow(\"middle_name\")));\r\n                patient1.setLast_name(idCursor.getString(idCursor.getColumnIndexOrThrow(\"last_name\")));\r\n                patient1.setDate_of_birth(idCursor.getString(idCursor.getColumnIndexOrThrow(\"date_of_birth\")));\r\n                patient1.setAddress1(idCursor.getString(idCursor.getColumnIndexOrThrow(\"address1\")));\r\n                patient1.setAddress2(idCursor.getString(idCursor.getColumnIndexOrThrow(\"address2\")));\r\n                patient1.setCity_village(idCursor.getString(idCursor.getColumnIndexOrThrow(\"city_village\")));\r\n                patient1.setState_province(idCursor.getString(idCursor.getColumnIndexOrThrow(\"state_province\")));\r\n                patient1.setPostal_code(idCursor.getString(idCursor.getColumnIndexOrThrow(\"postal_code\")));\r\n                patient1.setCountry(idCursor.getString(idCursor.getColumnIndexOrThrow(\"country\")));\r\n                patient1.setPhone_number(idCursor.getString(idCursor.getColumnIndexOrThrow(\"phone_number\")));\r\n                patient1.setGender(idCursor.getString(idCursor.getColumnIndexOrThrow(\"gender\")));\r\n                patient1.setSdw(idCursor.getString(idCursor.getColumnIndexOrThrow(\"sdw\")));\r\n                patient1.setOccupation(idCursor.getString(idCursor.getColumnIndexOrThrow(\"occupation\")));\r\n                patient1.setPatient_photo(idCursor.getString(idCursor.getColumnIndexOrThrow(\"patient_photo\")));\r\n\r\n            } while (idCursor.moveToNext());\r\n            idCursor.close();\r\n        }\r\n        String patientSelection1 = \"patientuuid = ?\";\r\n        String[] patientArgs1 = {str};\r\n        String[] patientColumns1 = {\"value\", \"person_attribute_type_uuid\"};\r\n        final Cursor idCursor1 = db.query(\"tbl_patient_attribute\", patientColumns1, patientSelection1, patientArgs1, null, null, null);\r\n        String name = \"\";\r\n        if (idCursor1.moveToFirst()) {\r\n            do {\r\n                try {\r\n                    name = patientsDAO.getAttributesName(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"person_attribute_type_uuid\")));\r\n                } catch (DAOException e) {\r\n                    FirebaseCrashlytics.getInstance().recordException(e);\r\n                }\r\n\r\n                if (name.equalsIgnoreCase(\"caste\")) {\r\n                    patient1.setCaste(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Telephone Number\")) {\r\n                    patient1.setPhone_number(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Education Level\")) {\r\n                    patient1.setEducation_level(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Economic Status\")) {\r\n                    patient1.setEconomic_status(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"occupation\")) {\r\n                    patient1.setOccupation(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Son/wife/daughter\")) {\r\n                    patient1.setSdw(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n\r\n            } while (idCursor1.moveToNext());\r\n        }\r\n        idCursor1.close();\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n        alertdialogBuilder.setMessage(R.string.are_you_want_go_back);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                Intent i_back = new Intent(getApplicationContext(), HomeActivity.class);\r\n                startActivity(i_back);\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n    }\r\n\r\n    public void showAlertDialogButtonClicked(String errorMessage) {\r\n\r\n        MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(this);\r\n        alertDialogBuilder.setTitle(\"Config Error\");\r\n        alertDialogBuilder.setMessage(errorMessage);\r\n        alertDialogBuilder.setNeutralButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                finish();\r\n                Intent i = new Intent(IdentificationActivity.this, SetupActivity.class);\r\n                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);// This flag ensures all activities on top of the CloseAllViewsDemo are cleared.\r\n                startActivity(i);\r\n            }\r\n        });\r\n        AlertDialog alertDialog = alertDialogBuilder.create();\r\n        alertDialog.show();\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        Log.v(TAG, \"Result Received\");\r\n        if (requestCode == CameraActivity.TAKE_IMAGE) {\r\n            Log.v(TAG, \"Request Code \" + CameraActivity.TAKE_IMAGE);\r\n            if (resultCode == RESULT_OK) {\r\n                Log.i(TAG, \"Result OK\");\r\n                mCurrentPhotoPath = data.getStringExtra(\"RESULT\");\r\n                Log.v(\"IdentificationActivity\", mCurrentPhotoPath);\r\n\r\n                Glide.with(this)\r\n                        .load(new File(mCurrentPhotoPath))\r\n                        .thumbnail(0.25f)\r\n                        .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                        .skipMemoryCache(true)\r\n                        .into(mImageView);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void onPatientCreateClicked() {\r\n        PatientsDAO patientsDAO = new PatientsDAO();\r\n        PatientAttributesDTO patientAttributesDTO = new PatientAttributesDTO();\r\n        List<PatientAttributesDTO> patientAttributesDTOList = new ArrayList<>();\r\n        uuid = UUID.randomUUID().toString();\r\n\r\n        patientdto.setUuid(uuid);\r\n        Gson gson = new Gson();\r\n\r\n        boolean cancel = false;\r\n        View focusView = null;\r\n\r\n\r\n        if (dob.equals(\"\") || dob.toString().equals(\"\")) {\r\n            if (dob.after(today)) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_dob);\r\n                //alertDialogBuilder.setMessage(getString(R.string.identification_dialog_date_error));\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n\r\n                mDOBPicker.show();\r\n                alertDialog.show();\r\n\r\n                Button postiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                postiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                // postiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (mPhoneNum.getText().toString().trim().length() > 0) {\r\n            if (mPhoneNum.getText().toString().trim().length() < 10) {\r\n                mPhoneNum.requestFocus();\r\n                mPhoneNum.setError(getString(R.string.enter_10_digits));\r\n                return;\r\n            }\r\n        }\r\n\r\n   /*     ArrayList<EditText> values = new ArrayList<>();\r\n        values.add(mFirstName);\r\n        values.add(mMiddleName);\r\n        values.add(mLastName);\r\n        values.add(mDOB);\r\n        values.add(mPhoneNum);\r\n        values.add(mAddress1);\r\n        values.add(mAddress2);\r\n        values.add(mCity);\r\n        values.add(mPostal);\r\n        values.add(mRelationship);\r\n        values.add(mOccupation);*/\r\n\r\n/*\r\n        if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n            MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n            alertDialogBuilder.setTitle(R.string.error);\r\n            alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n            alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    dialog.dismiss();\r\n                }\r\n            });\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n            alertDialog.show();\r\n\r\n            Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n            positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n            positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n            return;\r\n        }\r\n*/\r\n\r\n        if (!mFirstName.getText().toString().equals(\"\") && !mLastName.getText().toString().equals(\"\")\r\n                && !mCity.getText().toString().equals(\"\") && !countryText.getText().toString().equals(\"\") &&\r\n                !stateText.getText().toString().equals(\"\") && !mDOB.getText().toString().equals(\"\") && !mAge.getText().toString().equals(\"\") && (mGenderF.isChecked() || mGenderM.isChecked())) {\r\n\r\n            Log.v(TAG, \"Result\");\r\n\r\n        } else {\r\n            if (mFirstName.getText().toString().equals(\"\")) {\r\n                mFirstName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mLastName.getText().toString().equals(\"\")) {\r\n                mLastName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mDOB.getText().toString().equals(\"\")) {\r\n                mDOB.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mAge.getText().toString().equals(\"\")) {\r\n                mAge.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mCity.getText().toString().equals(\"\")) {\r\n                mCity.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                alertDialog.show();\r\n\r\n                Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n\r\n            }\r\n\r\n\r\n            Toast.makeText(IdentificationActivity.this, R.string.identification_screen_required_fields, Toast.LENGTH_LONG).show();\r\n            return;\r\n        }\r\n\r\n        if (mCountry.getSelectedItemPosition() == 0) {\r\n            countryText.setError(getString(R.string.error_field_required));\r\n            focusView = countryText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            countryText.setError(null);\r\n        }\r\n\r\n\r\n        if (mState.getSelectedItemPosition() == 0) {\r\n            stateText.setError(getString(R.string.error_field_required));\r\n            focusView = stateText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            stateText.setError(null);\r\n        }\r\n        if (cancel) {\r\n            focusView.requestFocus();\r\n        } else {\r\n\r\n            patientdto.setFirstname(StringUtils.getValue(mFirstName.getText().toString()));\r\n            patientdto.setMiddlename(StringUtils.getValue(mMiddleName.getText().toString()));\r\n            patientdto.setLastname(StringUtils.getValue(mLastName.getText().toString()));\r\n            patientdto.setPhonenumber(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientdto.setGender(StringUtils.getValue(mGender));\r\n\r\n            String[] dob_array = mDOB.getText().toString().split(\" \");\r\n            Log.d(\"dob_array\", \"0: \" + dob_array[0]);\r\n            Log.d(\"dob_array\", \"0: \" + dob_array[1]);\r\n            Log.d(\"dob_array\", \"0: \" + dob_array[2]);\r\n\r\n            //get month index and return English value for month.\r\n            String dob = StringUtils.hi_or__en_month(dob_indexValue);\r\n            dob_array[1] = dob_array[1].replace(dob_array[1], dob);\r\n            String dob_value = dob_array[0] + \" \" + dob_array[1] + \" \" + dob_array[2];\r\n            patientdto.setDateofbirth(DateAndTimeUtils.getFormatedDateOfBirth\r\n                    (StringUtils.getValue(dob_value)));\r\n\r\n            patientdto.setAddress1(StringUtils.getValue(mAddress1.getText().toString()));\r\n            patientdto.setAddress2(StringUtils.getValue(mAddress2.getText().toString()));\r\n            patientdto.setCityvillage(StringUtils.getValue(mCity.getText().toString()));\r\n            patientdto.setPostalcode(StringUtils.getValue(mPostal.getText().toString()));\r\n            patientdto.setCountry(StringUtils.getValue(mCountry.getSelectedItem().toString()));\r\n            patientdto.setPatientPhoto(mCurrentPhotoPath);\r\n//          patientdto.setEconomic(StringUtils.getValue(m));\r\n            patientdto.setStateprovince(StringUtils.getValue(mState.getSelectedItem().toString()));\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"caste\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mCaste));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Telephone Number\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Son/wife/daughter\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mRelationship.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"occupation\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mOccupation.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Economic Status\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEconomicStatus));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Education Level\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEducation));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"ProfileImageTimestamp\"));\r\n            patientAttributesDTO.setValue(AppConstants.dateAndTimeUtils.currentDateTime());\r\n\r\n            //House Hold Registration\r\n//            if (sessionManager.getHouseholdUuid().equals(\"\")){\r\n//\r\n//                String HouseHold_UUID = UUID.randomUUID().toString();\r\n//                sessionManager.setHouseholdUuid(HouseHold_UUID);\r\n//\r\n//                patientAttributesDTO = new PatientAttributesDTO();\r\n//                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n//                patientAttributesDTO.setPatientuuid(uuid);\r\n//                patientAttributesDTO.setPersonAttributeTypeUuid\r\n//                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n//                patientAttributesDTO.setValue(HouseHold_UUID);\r\n//\r\n//            } else {\r\n//\r\n//                String HouseHold_UUID = sessionManager.getHouseholdUuid();\r\n//                patientAttributesDTO = new PatientAttributesDTO();\r\n//                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n//                patientAttributesDTO.setPatientuuid(uuid);\r\n//                patientAttributesDTO.setPersonAttributeTypeUuid\r\n//                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n//                patientAttributesDTO.setValue(HouseHold_UUID);\r\n//\r\n//            }\r\n\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n            Logger.logD(TAG, \"PatientAttribute list size\" + patientAttributesDTOList.size());\r\n            patientdto.setPatientAttributesDTOList(patientAttributesDTOList);\r\n            patientdto.setSyncd(false);\r\n            Logger.logD(\"patient json : \", \"Json : \" + gson.toJson(patientdto, PatientDTO.class));\r\n\r\n        }\r\n\r\n        try {\r\n            Logger.logD(TAG, \"insertpatinet \");\r\n            boolean isPatientInserted = patientsDAO.insertPatientToDB(patientdto, uuid);\r\n            boolean isPatientImageInserted = imagesDAO.insertPatientProfileImages(mCurrentPhotoPath, uuid);\r\n\r\n            if (NetworkConnection.isOnline(getApplication())) {\r\n//                patientApiCall();\r\n//                frameJson();\r\n\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.patient_data_upload),\r\n//                        getString(R.string.uploading) + patientdto.getFirstname() + \"\" + patientdto.getLastname() +\r\n//                                \"'s data\", 2, getApplication());\r\n\r\n                SyncDAO syncDAO = new SyncDAO();\r\n                ImagesPushDAO imagesPushDAO = new ImagesPushDAO();\r\n                boolean push = syncDAO.pushDataApi();\r\n                boolean pushImage = imagesPushDAO.patientProfileImagesPush();\r\n\r\n//                if (push)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s data upload complete.\", 2, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s data not uploaded.\", 2, getApplication());\r\n\r\n//                if (pushImage)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s Image upload complete.\", 4, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s Image not complete.\", 4, getApplication());\r\n\r\n\r\n//\r\n            }\r\n//            else {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.patient_data_failed), getString(R.string.check_your_connectivity), 2, IdentificationActivity.this);\r\n//            }\r\n            if (isPatientInserted && isPatientImageInserted) {\r\n                Logger.logD(TAG, \"inserted\");\r\n                Intent i = new Intent(getApplication(), PatientDetailActivity.class);\r\n                i.putExtra(\"patientUuid\", uuid);\r\n                i.putExtra(\"patientName\", patientdto.getFirstname() + \" \" + patientdto.getLastname());\r\n                i.putExtra(\"tag\", \"newPatient\");\r\n                i.putExtra(\"privacy\", privacy_value);\r\n                i.putExtra(\"hasPrescription\", \"false\");\r\n                Log.d(TAG, \"Privacy Value on (Identification): \" + privacy_value); //privacy value transferred to PatientDetail activity.\r\n                i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                getApplication().startActivity(i);\r\n            } else {\r\n                Toast.makeText(IdentificationActivity.this, \"Error of adding the data\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (DAOException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n        }\r\n\r\n    }\r\n\r\n    public void onPatientUpdateClicked(Patient patientdto) {\r\n        PatientsDAO patientsDAO = new PatientsDAO();\r\n        PatientAttributesDTO patientAttributesDTO = new PatientAttributesDTO();\r\n        List<PatientAttributesDTO> patientAttributesDTOList = new ArrayList<>();\r\n        uuid = patientdto.getUuid();\r\n\r\n        patientdto.setUuid(uuid);\r\n        Gson gson = new Gson();\r\n\r\n        boolean cancel = false;\r\n        View focusView = null;\r\n\r\n\r\n        if (dob.equals(\"\") || dob.toString().equals(\"\")) {\r\n            if (dob.after(today)) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_dob);\r\n                //alertDialogBuilder.setMessage(getString(R.string.identification_dialog_date_error));\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n\r\n                mDOBPicker.show();\r\n                alertDialog.show();\r\n\r\n                Button postiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                postiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                // postiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (mPhoneNum.getText().toString().trim().length() > 0) {\r\n            if (mPhoneNum.getText().toString().trim().length() < 10) {\r\n                mPhoneNum.requestFocus();\r\n                mPhoneNum.setError(\"Enter 10 digits\");\r\n                return;\r\n            }\r\n        }\r\n\r\n       /* ArrayList<EditText> values = new ArrayList<>();\r\n        values.add(mFirstName);\r\n        values.add(mMiddleName);\r\n        values.add(mLastName);\r\n        values.add(mDOB);\r\n        values.add(mPhoneNum);\r\n        values.add(mAddress1);\r\n        values.add(mAddress2);\r\n        values.add(mCity);\r\n        values.add(mPostal);\r\n        values.add(mRelationship);\r\n        values.add(mOccupation);*/\r\n\r\n/*\r\n        if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n            MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n            alertDialogBuilder.setTitle(R.string.error);\r\n            alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n            alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    dialog.dismiss();\r\n                }\r\n            });\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n            alertDialog.show();\r\n\r\n            Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n            positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n            positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n            return;\r\n        }\r\n*/\r\n\r\n        if (!mFirstName.getText().toString().equals(\"\") && !mLastName.getText().toString().equals(\"\")\r\n                && !mCity.getText().toString().equals(\"\") && !countryText.getText().toString().equals(\"\") &&\r\n                !stateText.getText().toString().equals(\"\") && !mDOB.getText().toString().equals(\"\") && !mAge.getText().toString().equals(\"\") && (mGenderF.isChecked() || mGenderM.isChecked())) {\r\n\r\n            Log.v(TAG, \"Result\");\r\n\r\n        } else {\r\n            if (mFirstName.getText().toString().equals(\"\")) {\r\n                mFirstName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mLastName.getText().toString().equals(\"\")) {\r\n                mLastName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mDOB.getText().toString().equals(\"\")) {\r\n                mDOB.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mAge.getText().toString().equals(\"\")) {\r\n                mAge.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mCity.getText().toString().equals(\"\")) {\r\n                mCity.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                alertDialog.show();\r\n\r\n                Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n\r\n            }\r\n\r\n\r\n            Toast.makeText(IdentificationActivity.this, R.string.identification_screen_required_fields, Toast.LENGTH_LONG).show();\r\n            return;\r\n        }\r\n\r\n        if (mCountry.getSelectedItemPosition() == 0) {\r\n            countryText.setError(getString(R.string.error_field_required));\r\n            focusView = countryText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            countryText.setError(null);\r\n        }\r\n\r\n\r\n        if (mState.getSelectedItemPosition() == 0) {\r\n            stateText.setError(getString(R.string.error_field_required));\r\n            focusView = stateText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            stateText.setError(null);\r\n        }\r\n        if (cancel) {\r\n            focusView.requestFocus();\r\n        } else {\r\n            if (mCurrentPhotoPath == null)\r\n                mCurrentPhotoPath = patientdto.getPatient_photo();\r\n\r\n            patientdto.setFirst_name(StringUtils.getValue(mFirstName.getText().toString()));\r\n            patientdto.setMiddle_name(StringUtils.getValue(mMiddleName.getText().toString()));\r\n            patientdto.setLast_name(StringUtils.getValue(mLastName.getText().toString()));\r\n            patientdto.setPhone_number(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientdto.setGender(StringUtils.getValue(mGender));\r\n\r\n            String[] dob_array = mDOB.getText().toString().split(\" \");\r\n            Log.d(\"dob_array\", \"0: \" + dob_array[0]);\r\n            Log.d(\"dob_array\", \"0: \" + dob_array[1]);\r\n            Log.d(\"dob_array\", \"0: \" + dob_array[2]);\r\n\r\n            //get month index and return English value for month.\r\n            if (dob_indexValue == 15) {\r\n                String dob = StringUtils.hi_or__en_noEdit\r\n                        (mDOB.getText().toString(), sessionManager.getAppLanguage());\r\n                patientdto.setDate_of_birth(DateAndTimeUtils.getFormatedDateOfBirth\r\n                        (StringUtils.getValue(dob)));\r\n            } else {\r\n                String dob = StringUtils.hi_or__en_month(dob_indexValue);\r\n                String dob_month_split = dob_array[1];\r\n                dob_array[1] = dob_month_split.replace(dob_month_split, dob);\r\n                String dob_value = dob_array[0] + \" \" + dob_array[1] + \" \" + dob_array[2];\r\n\r\n                patientdto.setDate_of_birth(DateAndTimeUtils.getFormatedDateOfBirth\r\n                        (StringUtils.getValue(dob_value)));\r\n            }\r\n\r\n           // patientdto.setDate_of_birth(DateAndTimeUtils.getFormatedDateOfBirth(StringUtils.getValue(mDOB.getText().toString())));\r\n            patientdto.setAddress1(StringUtils.getValue(mAddress1.getText().toString()));\r\n            patientdto.setAddress2(StringUtils.getValue(mAddress2.getText().toString()));\r\n            patientdto.setCity_village(StringUtils.getValue(mCity.getText().toString()));\r\n            patientdto.setPostal_code(StringUtils.getValue(mPostal.getText().toString()));\r\n            patientdto.setCountry(StringUtils.getValue(mCountry.getSelectedItem().toString()));\r\n            patientdto.setPatient_photo(mCurrentPhotoPath);\r\n//                patientdto.setEconomic(StringUtils.getValue(m));\r\n            patientdto.setState_province(StringUtils.getValue(patientdto.getState_province()));\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"caste\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mCaste));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Telephone Number\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Son/wife/daughter\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mRelationship.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"occupation\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mOccupation.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Economic Status\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEconomicStatus));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Education Level\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEducation));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"ProfileImageTimestamp\"));\r\n            patientAttributesDTO.setValue(AppConstants.dateAndTimeUtils.currentDateTime());\r\n\r\n\r\n            //House Hold Registration\r\n            if (sessionManager.getHouseholdUuid().equals(\"\")){\r\n\r\n                String HouseHold_UUID = UUID.randomUUID().toString();\r\n                sessionManager.setHouseholdUuid(HouseHold_UUID);\r\n\r\n                patientAttributesDTO = new PatientAttributesDTO();\r\n                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n                patientAttributesDTO.setPatientuuid(uuid);\r\n                patientAttributesDTO.setPersonAttributeTypeUuid\r\n                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n                patientAttributesDTO.setValue(HouseHold_UUID);\r\n\r\n            } else {\r\n\r\n                String HouseHold_UUID = sessionManager.getHouseholdUuid();\r\n                patientAttributesDTO = new PatientAttributesDTO();\r\n                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n                patientAttributesDTO.setPatientuuid(uuid);\r\n                patientAttributesDTO.setPersonAttributeTypeUuid\r\n                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n                patientAttributesDTO.setValue(HouseHold_UUID);\r\n\r\n            }\r\n//          patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n            Logger.logD(TAG, \"PatientAttribute list size\" + patientAttributesDTOList.size());\r\n            //patientdto.setPatientAttributesDTOList(patientAttributesDTOList);\r\n\r\n            Logger.logD(\"patient json onPatientUpdateClicked : \", \"Json : \" + gson.toJson(patientdto, Patient.class));\r\n\r\n        }\r\n        try {\r\n            Logger.logD(TAG, \"update \");\r\n            boolean isPatientUpdated = patientsDAO.updatePatientToDB(patientdto, uuid, patientAttributesDTOList);\r\n            boolean isPatientImageUpdated = imagesDAO.updatePatientProfileImages(mCurrentPhotoPath, uuid);\r\n\r\n            if (NetworkConnection.isOnline(getApplication())) {\r\n                SyncDAO syncDAO = new SyncDAO();\r\n                ImagesPushDAO imagesPushDAO = new ImagesPushDAO();\r\n                boolean ispush = syncDAO.pushDataApi();\r\n                boolean isPushImage = imagesPushDAO.patientProfileImagesPush();\r\n\r\n//                if (ispush)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s data upload complete.\", 2, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s data not uploaded.\", 2, getApplication());\r\n\r\n//                if (isPushImage)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s Image upload complete.\", 4, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s Image not complete.\", 4, getApplication());\r\n\r\n            }\r\n            if (isPatientUpdated && isPatientImageUpdated) {\r\n                Logger.logD(TAG, \"updated\");\r\n                Intent i = new Intent(getApplication(), PatientDetailActivity.class);\r\n                i.putExtra(\"patientUuid\", uuid);\r\n                i.putExtra(\"patientName\", patientdto.getFirst_name() + \" \" + patientdto.getLast_name());\r\n                i.putExtra(\"tag\", \"newPatient\");\r\n                i.putExtra(\"hasPrescription\", \"false\");\r\n                i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                getApplication().startActivity(i);\r\n            }\r\n        } catch (DAOException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/app/intelehealth/client/activities/identificationActivity/IdentificationActivity.java	(revision 9b7e9f4d42fa3de6fcc0c3826c714c28b6249a7d)
+++ app/src/main/java/app/intelehealth/client/activities/identificationActivity/IdentificationActivity.java	(date 1618292553909)
@@ -1296,12 +1296,12 @@
             Log.d("dob_array", "0: " + dob_array[2]);
 
             //get month index and return English value for month.
-            String dob = StringUtils.hi_or__en_month(dob_indexValue);
-            dob_array[1] = dob_array[1].replace(dob_array[1], dob);
-            String dob_value = dob_array[0] + " " + dob_array[1] + " " + dob_array[2];
-            patientdto.setDateofbirth(DateAndTimeUtils.getFormatedDateOfBirth
-                    (StringUtils.getValue(dob_value)));
-
+
+                String dob = StringUtils.hi_or__en_month(dob_indexValue);
+                dob_array[1] = dob_array[1].replace(dob_array[1], dob);
+                String dob_value = dob_array[0] + " " + dob_array[1] + " " + dob_array[2];
+                patientdto.setDateofbirth(DateAndTimeUtils.getFormatedDateOfBirth
+                        (StringUtils.getValue(dob_value)));
             patientdto.setAddress1(StringUtils.getValue(mAddress1.getText().toString()));
             patientdto.setAddress2(StringUtils.getValue(mAddress2.getText().toString()));
             patientdto.setCityvillage(StringUtils.getValue(mCity.getText().toString()));
