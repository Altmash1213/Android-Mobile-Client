Index: app/src/main/java/org/intelehealth/ekalhelpline/activities/privacyNoticeActivity/PrivacyNotice_Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.intelehealth.ekalhelpline.activities.privacyNoticeActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.content.res.Configuration;\r\nimport android.graphics.Color;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.text.util.Linkify;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\n\r\nimport com.google.android.material.checkbox.MaterialCheckBox;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\n\r\nimport org.intelehealth.ekalhelpline.R;\r\nimport org.intelehealth.ekalhelpline.app.AppConstants;\r\nimport org.intelehealth.ekalhelpline.utilities.FileUtils;\r\nimport org.intelehealth.ekalhelpline.utilities.SessionManager;\r\n\r\nimport org.intelehealth.ekalhelpline.activities.identificationActivity.IdentificationActivity;\r\n\r\npublic class PrivacyNotice_Activity extends AppCompatActivity implements View.OnClickListener {\r\n    TextView privacy_textview;\r\n    SessionManager sessionManager = null;\r\n    private boolean hasLicense = false;\r\n    Button accept, reject;\r\n    MaterialCheckBox checkBox_cho;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        sessionManager = new SessionManager(this);\r\n        String language = sessionManager.getAppLanguage();\r\n        //In case of crash still the app should hold the current lang fix.\r\n        if (!language.equalsIgnoreCase(\"\")) {\r\n            Locale locale = new Locale(language);\r\n            Locale.setDefault(locale);\r\n            Configuration config = new Configuration();\r\n            config.locale = locale;\r\n            getBaseContext().getResources().updateConfiguration(config, getBaseContext().getResources().getDisplayMetrics());\r\n        }\r\n        sessionManager.setCurrentLang(getResources().getConfiguration().locale.toString());\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_privacy_notice_2);\r\n        setTitle(getString(R.string.privacy_notice_title));\r\n\r\n        /*\r\n         * Toolbar which displays back arrow on action bar\r\n         * Add the below lines for every activity*/\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        toolbar.setTitleTextAppearance(this, R.style.ToolbarTheme);\r\n        toolbar.setTitleTextColor(Color.WHITE);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n\r\n\r\n        privacy_textview = findViewById(R.id.privacy_text);\r\n        privacy_textview.setAutoLinkMask(Linkify.ALL);\r\n        accept = findViewById(R.id.button_accept);\r\n        reject = findViewById(R.id.button_reject);\r\n        checkBox_cho = findViewById(R.id.checkbox_CHO);\r\n\r\n\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse(\r\n                        FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, this),\r\n                        String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n//            SharedPreferences sharedPreferences = getSharedPreferences(\"CommonPrefs\", Activity.MODE_PRIVATE);\r\n//            if(sharedPreferences.getAll().values().contains(\"cb\"))\r\n            Locale current = getResources().getConfiguration().locale;\r\n//            if (current.toString().equals(\"cb\")) {\r\n//                String privacy_string = obj.getString(\"privacyNoticeText_Cebuano\");\r\n//                if (privacy_string.isEmpty()) {\r\n//                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n//                    privacy_textview.setText(privacy_string);\r\n//                } else {\r\n//                    privacy_textview.setText(privacy_string);\r\n//                }\r\n//\r\n//            } else\r\n            if (current.toString().equals(\"or\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Odiya\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"hi\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Hindi\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"kn\")) {          //Privacy text support for Kannada\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Kannada\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"mr\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Marathi\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n\r\n            } else if (current.toString().equals(\"gu\")) {\r\n                String privacy_string = obj.getString(\"privacyNoticeText_Gujrathi\");\r\n                if (privacy_string.isEmpty()) {\r\n                    privacy_string = obj.getString(\"privacyNoticeText\");\r\n                    privacy_textview.setText(privacy_string);\r\n                } else {\r\n                    privacy_textview.setText(privacy_string);\r\n                }\r\n            } else {\r\n\r\n                String privacy_string = obj.getString(\"privacyNoticeText\");\r\n                privacy_textview.setText(privacy_string);\r\n            }\r\n\r\n            accept.setOnClickListener(this);\r\n            reject.setOnClickListener(this);\r\n\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n\r\n        if (checkBox_cho.isChecked() && v.getId() == R.id.button_accept) {\r\n\r\n            //Clear HouseHold UUID from Session for new registration\r\n            sessionManager.setHouseholdUuid(\"\");\r\n\r\n            Intent intent = new Intent(getApplicationContext(), IdentificationActivity.class);\r\n            intent.putExtra(\"privacy\", accept.getText().toString()); //privacy value send to identificationActivity\r\n            Log.d(\"Privacy\", \"selected radio: \" + accept.getText().toString());\r\n            startActivity(intent);\r\n        } else if (checkBox_cho.isChecked() && v.getId() == R.id.button_reject) {\r\n            Toast.makeText(PrivacyNotice_Activity.this,\r\n                    getString(R.string.privacy_reject_toast), Toast.LENGTH_SHORT).show();\r\n            finish();\r\n        } else {\r\n            Toast.makeText(PrivacyNotice_Activity.this,\r\n                    getString(R.string.please_read_out_privacy_consent_first), Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/org/intelehealth/ekalhelpline/activities/privacyNoticeActivity/PrivacyNotice_Activity.java	(revision 79bb80ad7dd95dcedc1ce54949ffb365ecb0c5c6)
+++ app/src/main/java/org/intelehealth/ekalhelpline/activities/privacyNoticeActivity/PrivacyNotice_Activity.java	(date 1621491808529)
@@ -146,7 +146,7 @@
                 }
 
             } else if (current.toString().equals("gu")) {
-                String privacy_string = obj.getString("privacyNoticeText_Gujrathi");
+                String privacy_string = obj.getString("privacyNoticeText_Gujarati");
                 if (privacy_string.isEmpty()) {
                     privacy_string = obj.getString("privacyNoticeText");
                     privacy_textview.setText(privacy_string);
