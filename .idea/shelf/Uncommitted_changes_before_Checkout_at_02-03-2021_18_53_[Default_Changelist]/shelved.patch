Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.google.firebase.crashlytics'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    defaultConfig {\r\n        applicationId \"app.intelehealth.client\"\r\n        minSdkVersion 19\r\n        targetSdkVersion 30\r\n        versionCode 46\r\n        buildToolsVersion('29.0.2')\r\n        versionName \"2.1.3\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        //Change this to true to enable multidex support for Kitkat\r\n        multiDexEnabled true\r\n        //vectorDrawables.useSupportLibrary = true\r\n\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = '1.8'\r\n        targetCompatibility = '1.8'\r\n    }\r\n    buildTypes {\r\n        release {\r\n            lintOptions {\r\n                disable 'MissingTranslation'\r\n                checkReleaseBuilds false\r\n                abortOnError false\r\n            }\r\n            minifyEnabled true\r\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation 'androidx.appcompat:appcompat:1.0.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    testImplementation 'junit:junit:4.13-beta-2'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'androidx.media:media:1.0.0'\r\n    implementation 'androidx.vectordrawable:vectordrawable-animated:1.0.0'\r\n\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'\r\n    //mvvm\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.0.0'\r\n    // JSON Converter\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'\r\n    // RxJava\r\n    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'\r\n    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'\r\n    // RxAndroid\r\n    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'\r\n    //RxBindings\r\n    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'\r\n    //Retrofit\r\n    implementation 'com.google.code.gson:gson:2.8.5'\r\n    implementation 'com.squareup.retrofit2:retrofit:2.5.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'\r\n    //Permission library\r\n    implementation 'gun0912.ted:tedpermission:2.2.2'\r\n\r\n    implementation \"com.squareup.okhttp3:logging-interceptor:3.8.0\"\r\n\r\n    implementation 'com.github.bumptech.glide:glide:3.8.0'\r\n    //Uncomment below line to enable multidex support for Kitkat\r\n    implementation 'androidx.multidex:multidex:2.0.0'\r\n    //camera view\r\n    implementation 'com.github.google:cameraview:9bbe07ba44'\r\n    //Google Guava\r\n    implementation 'com.google.guava:guava:27.1-jre'\r\n    //Parse SDK\r\n    implementation 'com.parse:parse-android:1.15.7'\r\n    //date and time\r\n    implementation 'joda-time:joda-time:2.9.3'\r\n\r\n    implementation 'org.apache.commons:commons-lang3:3.6'\r\n\r\n    // (Java only)\r\n    implementation 'androidx.work:work-runtime:2.0.1'\r\n    // optional - RxJava2 support\r\n    implementation 'androidx.work:work-rxjava2:2.0.1'\r\n    // optional - Test helpers\r\n    androidTestImplementation 'androidx.work:work-testing:2.0.1'\r\n\r\n    implementation 'com.github.hotchemi:permissionsdispatcher:2.3.2'\r\n    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.2'\r\n\r\n//    implementation \"com.crashlytics.sdk.android:crashlytics:2.9.9\"\r\n    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'\r\n    implementation 'com.google.firebase:firebase-analytics:18.0.0'\r\n    implementation \"com.google.firebase:firebase-core:17.4.3\"\r\n    implementation \"com.google.firebase:firebase-messaging:20.2.1\"\r\n//    implementation 'com.google.firebase:firebase-crash:16.2.1'\r\n    implementation platform('com.google.firebase:firebase-bom:25.12.0')\r\n    implementation 'com.google.firebase:firebase-crashlytics'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n\r\n    api 'com.google.android.material:material:1.1.0'\r\n\r\n}\r\napply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision db4b970cdda541301d033834f0099baa4d882c5d)
+++ app/build.gradle	(date 1614581257600)
@@ -6,7 +6,7 @@
     compileSdkVersion 30
     defaultConfig {
         applicationId "app.intelehealth.client"
-        minSdkVersion 19
+        minSdkVersion 21
         targetSdkVersion 30
         versionCode 46
         buildToolsVersion('29.0.2')
@@ -105,6 +105,13 @@
 
     api 'com.google.android.material:material:1.1.0'
 
+    implementation 'in.balakrishnan.easycam:easycam:0.0.3-rc5'
+    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0-rc03'
+
+
+
+
+
 }
 apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin
 
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision db4b970cdda541301d033834f0099baa4d882c5d)
+++ .idea/compiler.xml	(date 1614579608237)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="12" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/values-hi-rIN/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\" translatable=\"false\">एकल आरोग्य</string>\r\n\r\n    //Generic\r\n    <string name=\"generic_the_flipping_word_next\" translatable=\"false\">आगे</string>\r\n    <string name=\"hint_required\" translatable=\"false\">अपेक्षित</string>\r\n    <string name=\"hint_optional\" translatable=\"false\">ऐच्छिक</string>\r\n    <string name=\"tag_optional\" translatable=\"false\">ऐच्छिक</string>\r\n    <string name=\"generic_ok\" >ठीक</string>\r\n    <string name=\"generic_cancel\">रद्द करना</string>\r\n    <string name=\"generic_yes\">हाँ</string>\r\n    <string name=\"generic_no\">नहीं</string>\r\n    <string name=\"generic_back\" translatable=\"false\">वापस</string>\r\n    <string name=\"generic_coming_soon\" translatable=\"false\">जल्द आ रहा है .....</string>\r\n    <string name=\"action_print\" translatable=\"false\">छाप</string>\r\n    <string name=\"action_sms\" translatable=\"false\">एसएमएस/सन्देश </string>\r\n    <string name=\"action_home\" translatable=\"false\">घर</string>\r\n    <string name=\"action_settings\" translatable=\"false\">समायोजन</string>\r\n    <string name=\"generic_warning\" translatable=\"false\">चेतावनी!!</string>\r\n    <string name=\"generic_update\" translatable=\"false\">अपडेट करें</string>\r\n    <string name=\"generic_deleted\" translatable=\"false\">हटाए गए</string>\r\n\r\n\r\n    //Database Schema Names\r\n    <string name=\"db_first_name\" translatable=\"false\">प्रथम नाम</string>\r\n    <string name=\"db_middle_name\" translatable=\"false\">मध्य नाम</string>\r\n    <string name=\"db_last_name\" translatable=\"false\">आखिरी नाम</string>\r\n    <string name=\"db_dob\" translatable=\"false\">जन्म तिथि</string>\r\n    <string name=\"db_phone_number\" translatable=\"false\">फोन</string>\r\n    <string name=\"db_address_line1\" translatable=\"false\">पता पंक्ति 1</string>\r\n    <string name=\"db_address_line2\" translatable=\"false\">पता पंक्ति 2</string>\r\n    <string name=\"db_city\" translatable=\"false\">गांव/ कस्बा / शहर</string>\r\n    <string name=\"db_state\" translatable=\"false\">राज्य प्रान्त</string>\r\n    <string name=\"db_postal_code\" translatable=\"false\">डाक कोड</string>\r\n    <string name=\"db_country\" translatable=\"false\">देश</string>\r\n    <string name=\"db_gender\" translatable=\"false\">लिंग</string>\r\n    <string name=\"db_patient_id1\" translatable=\"false\">patient_identifier1</string>\r\n    <string name=\"db_patient_id2\" translatable=\"false\">patient_identifier2</string>\r\n    <string name=\"db_patient_id3\" translatable=\"false\">patient_identifier3</string>\r\n\r\n    //Login Screen\r\n    <string name=\"title_activity_login\" translatable=\"false\">एकल आरोग्य</string>\r\n    <string name=\"prompt_email\" translatable=\"false\">उपयोगकर्ता नाम</string>\r\n    <string name=\"prompt_password\" translatable=\"false\">कुंजिका</string>\r\n    <string name=\"prompt_admin_password\" translatable=\"false\">व्यवस्थापक कुंजी</string>\r\n    <string name=\"action_sign_in\" translatable=\"false\">लॉग इन करें</string>\r\n    <string name=\"action_sign_in_short\" translatable=\"false\">शाइन ईन करें</string>\r\n    <string name=\"url_invalid\" translatable=\"false\">अपना यूआरएल चेक करें</string>\r\n    <string name=\"prefix_invalid\" translatable=\"false\">विभिन्न उपसर्ग चुनते है!</string>\r\n    <string name=\"error_invalid_email\" translatable=\"false\">यह उपयोगकर्ता अवैध हैं</string>\r\n    <string name=\"error_invalid_password\" translatable=\"false\">यह पासवर्ड बहुत छोटा है</string>\r\n    <string name=\"error_incorrect_password\" translatable=\"false\">कृपया उपयोगकर्ता नाम और पासवर्ड की जाँच करें</string>\r\n    <string name=\"error_field_required\" translatable=\"false\">यह फ़ील्ड आवश्यक है</string>\r\n    <string name=\"error_network\" translatable=\"false\">नेटवर्क त्रुटि</string>\r\n    <string name=\"error_location_not_selected\" translatable=\"false\">कृपया स्थान ड्रॉपडाउन मान का चयन करें</string>\r\n    <string name=\"error_location_not_fetched\" translatable=\"false\">स्थानों को लाने में असमर्थ</string>\r\n    <string name=\"permission_rationale\" translatable=\"false\">ईमेल पूर्णता प्रदान करने के लिए संपर्क अनुमतियों की आवश्यकता होती है।\r\n    </string>\r\n    <string name=\"device_id\" translatable=\"false\">डिवाइस आईडी:</string>\r\n\r\n\r\n    <string name=\"cant_login_user\" translatable=\"false\">लॉग इन नहीं कर सकते?</string>\r\n    <string name=\"email_link\" translatable=\"false\">कृपया अपना पासवर्ड रीसेट करने के लिए अपने सिस्टम एडमिनिस्ट्रेटर से संपर्क करें या support@intelehealth.io पर ईमेल भेजें</string>\r\n    <string name=\"contact_whatsapp\">कृपया अपना पासवर्ड रीसेट करने के लिए अपने सिस्टम एडमिनिस्ट्रेटर से संपर्क करें</string>\r\n\r\n    //Home Screen (after login)\r\n    <string name=\"title_home_screen\" translatable=\"false\">घर</string>\r\n    <string name=\"button_new_pt\">नया पेशेंट</string>\r\n    <string name=\"button_find_pt\" translatable=\"false\">पेशेंट का पता लगाएं</string>\r\n    <string name=\"button_diagnostic_tests\" translatable=\"false\">नैदानिक \u200B\u200Bपरीक्षण</string>\r\n    <string name=\"button_active_pt\" translatable=\"false\">आक्टिव पेशेंट</string>\r\n    <string name=\"menu_option_sync\" translatable=\"false\">सिंक डेटा</string>\r\n    <string name=\"menu_option_settings\" translatable=\"false\">सेट्टिंग्स</string>\r\n    <string name=\"menu_option_end_of_day\" translatable=\"false\">दिन के अंत मे</string>\r\n    <string name=\"menu_option_logout\" translatable=\"false\">लॉग आउट</string>\r\n\r\n\r\n    //Identification Screen\r\n    <string name=\"title_activity_identification\" translatable=\"false\">नया पेशेंट जोड़ें</string>\r\n    <string name=\"identification_screen_prompt_first_name\">पहला नाम *</string>\r\n    <string name=\"identification_screen_prompt_middle_name\">मध्य नाम</string>\r\n    <string name=\"identification_screen_prompt_last_name\">उपनाम *</string>\r\n    <string name=\"identification_screen_prompt_address\">पता पंक्ति 1</string>\r\n    <string name=\"identification_screen_prompt_address2\">पता पंक्ति 2</string>\r\n    <string name=\"identification_screen_prompt_phone_number\">फ़ोन नंबर</string>\r\n    <string name=\"admin_password_dialog_heading\" translatable=\"false\">व्यवस्थापक पासवर्ड दर्ज करें</string>\r\n    <string name=\"identification_screen_prompt_gender\" translatable=\"false\">लिंग *</string>\r\n    <string name=\"identification_screen_checkbox_male\">पुरुष </string>\r\n    <string name=\"identification_screen_checkbox_female\">महिला</string>\r\n    <string name=\"identification_screen_prompt_birthday\">जन्म की तारीख*</string>\r\n    <string name=\"identification_screen_prompt_age\">उम्र:</string>\r\n    <string name=\"identification_screen_prompt_city\">गांव / कस्बा / शहर *</string>\r\n    <string name=\"identification_screen_prompt_state\">राज्य *</string>\r\n    <string name=\"identification_screen_prompt_caste\" translatable=\"false\">जाति</string>\r\n    <string name=\"identification_screen_prompt_economic_status\" translatable=\"false\">आर्थिक स्थिति</string>\r\n    <string name=\"identification_screen_prompt_education\" translatable=\"false\">शिक्षा का स्तर</string>\r\n    <string name=\"identification_screen_prompt_country\" translatable=\"false\">देश *</string>\r\n    <string name=\"identification_screen_prompt_postal_code\" translatable=\"false\">डाक कोड</string>\r\n    <string name=\"identification_screen_prompt_relationship\" translatable=\"false\">बेटा / बेटी / की पत्नी</string>\r\n    <string name=\"identification_screen_prompt_occupation\" translatable=\"false\">व्यवसाय</string>\r\n    <string name=\"identification_screen_snack_patient_created\" translatable=\"false\">पेशेंट बनाया! सर्वर पर अपलोड हो रहा है।</string>\r\n    <string name=\"identification_screen_error_data_fields\" translatable=\"false\"> त्रुटि: डाटा मैदान सही ढंग से स्वरूपित नहीं कर रहे है</string>\r\n    <string name=\"identification_screen_dialog_age\" translatable=\"false\">कृपया वर्ष में उम्र दर्ज करें</string>\r\n    <string name=\"identification_screen_dialog_error_dob\" translatable=\"false\">आज के बाद जन्म की तारीख निर्धारित की जाती है</string>\r\n    <string name=\"identification_screen_dialog_error_gender\" translatable=\"false\">लिंग का चयन नहीं किया गया है</string>\r\n    <string name=\"identification_screen_required_fields\" translatable=\"false\">कृपया आवश्यक फ़ील्ड दर्ज करें</string>\r\n    <string name=\"identification_screen_error_dob\" translatable=\"false\">एक वैध जन्मतिथि दर्ज करें</string>\r\n    <string name=\"identification_screen_error_age\" translatable=\"false\">एक मान्य आयु दर्ज करें</string>\r\n    <string name=\"identification_screen_text_years\" translatable=\"false\"> वर्षों </string>\r\n    <string name=\"identification_screen_text_months\" translatable=\"false\"> महीने</string>\r\n    <string name=\"identification_screen_picker_years\" translatable=\"false\">वर्षों</string>\r\n    <string name=\"identification_screen_picker_months\" translatable=\"false\">महीने</string>\r\n\r\n    //Active Patients Screen\r\n    <string name=\"title_activity_active_patient\">आक्टिव विज़िट्स</string>\r\n\r\n    //Patient History Screen\r\n    <string name=\"title_activity_get_patient_history\" translatable=\"false\">पेशेंट का इतिहास</string>\r\n    <string name=\"title_activity_search_patient\" translatable=\"false\">पेशेंट को देखो</string>\r\n\r\n    //Complaint Node Screen\r\n    <string name=\"title_activity_complaint_select\" translatable=\"false\">शिकायतों का चयन करें</string>\r\n    <string name=\"title_activity_complaint_questions\" translatable=\"false\">सभी प्रश्नों के उत्तर दें</string>\r\n    <string name=\"title_activity_complaint_node\">शिकायतों का चयन करें</string>\r\n    <string name=\"complaint_category_selected\" translatable=\"false\">चयनित श्रेणियाँ:</string>\r\n    <string name=\"complaint_complaint_selected\" translatable=\"false\">चयनित शिकायतें:</string>\r\n    <string name=\"complaint_dialog_title\">आने का कारण</string>\r\n    <string name=\"complaint_required\" translatable=\"false\">शिकायत का चयन करना होगा!</string>\r\n\r\n    //Question Node Screen\r\n    <string name=\"title_activity_question_node\" translatable=\"false\"> सवाल गांठ कार्यकलाप</string>\r\n    <string name=\"complaint_change_selected\" translatable=\"false\">संशोधित</string>\r\n    <string name=\"question_answer_all\" translatable=\"false\">क्या आप सुनिश्चित हैं कि आपने सभी प्रश्नों का उत्तर दिया है।</string>\r\n    <string name=\"question_answer_all_phy_exam\" translatable=\"false\">कृपया सभी सामान्य परीक्षा के प्रश्नों के उत्तर दें।</string>\r\n    <string name=\"question_duration_picker\" translatable=\"false\">कृपया अवधि दर्ज करें</string>\r\n    <string name=\"question_text_input\" translatable=\"false\">कृपया अवधि दर्ज करें</string>\r\n    <string name=\"question_date_picker\" translatable=\"false\">कृपया तारीख का चयन करें</string>\r\n    <string name=\"question_location_picker\" translatable=\"false\">कृपया स्थानों का चयन करें</string>\r\n    <string name=\"question_number_picker\" translatable=\"false\">कृपया नंबर दर्ज करें</string>\r\n    <string name=\"question_area_picker\" translatable=\"false\">कृपया क्षेत्र (चौड़ाई X लंबाई) दर्ज करें</string>\r\n    <string name=\"question_range_picker\" translatable=\"false\">कृपया एक सीमा दर्ज करें</string>\r\n    <string name=\"question_frequency_picker\" translatable=\"false\">कृपया कितनी बार दर्ज करें</string>\r\n\r\n\r\n    //Table Exam Screen\r\n    <string name=\"title_activity_vitals\" translatable=\"false\">नब्ज</string>\r\n    <string name=\"table_hw\" translatable=\"false\">शरीर के माप</string>\r\n    <string name=\"table_height\" translatable=\"false\">ऊंचाई (सेंटिमीटर)</string>\r\n    <string name=\"table_weight\" translatable=\"false\">वजन (किग्रा)</string>\r\n    <string name=\"table_bmi\" translatable=\"false\">बीएमआई </string>\r\n    <string name=\"table_pulse\" translatable=\"false\">पल्स/धड़कन (धड़कन प्रति मिनट)</string>\r\n    <string name=\"table_bp\" translatable=\"false\">महत्वपूर्ण संकेत</string>\r\n    <string name=\"table_bpsys\" translatable=\"false\">बीपी सिस्टोलिक </string>\r\n    <string name=\"table_bpdia\" translatable=\"false\">बीपी डायास्टोलिक </string>\r\n    <string name=\"table_temp\" translatable=\"false\">तापमान (सेल्सियस)</string>\r\n    <string name=\"table_spo2\" translatable=\"false\">SpO2 (%) ऑक्सीजन </string>\r\n\r\n    //Patient Search Screen\r\n    <string name=\"search_hint\" translatable=\"false\">नाम द्वारा मरीज की खोज</string>\r\n    <string name=\"action_search\" translatable=\"false\">खोज</string>\r\n    <string name=\"alert_none_found\" translatable=\"false\">कृपया प्रोयोक्ता नाम और पासवर्ड दर्ज करे</string>\r\n\r\n    //Past Medical History Screen\r\n    <string name=\"title_activity_patient_history\" translatable=\"false\">पिछला चिकित्सक इतिहास</string>\r\n\r\n    //Visit Summary Screen\r\n    <string name=\"title_activity_family_history\" translatable=\"false\">परिवार इतिहास</string>\r\n    <string name=\"title_activity_physical_exam\" translatable=\"false\">  शारीरिक परीक्षा</string>\r\n    <string name=\"title_activity_patient_summary\" translatable=\"false\">संछेप यात्रा</string>\r\n    <string name=\"visit_summary_temperature\" translatable=\"false\">तापमान(सेल्सियस)</string>\r\n    <string name=\"visit_summary_pulseox\" translatable=\"false\">SpO2 (%)</string>\r\n    <string name=\"visit_summary_hw_on_duty\" translatable=\"false\">समुदाय स्वास्थ्यकर्मी ड्यूटी पर</string>\r\n    <string name=\"visit_summary_vitals_heading\" translatable=\"false\"> नब्ज</string>\r\n    <string name=\"visit_summary_height_heading\" translatable=\"false\">कद(सेंटीमीटर)</string>\r\n    <string name=\"visit_summary_weight\" translatable=\"false\">वजन(किलोग्राम)</string>\r\n    <string name=\"visit_summary_bmi\" translatable=\"false\">बी ऍम आई</string>\r\n    <string name=\"visit_summary_bp\" translatable=\"false\">ब्लड प्रेशर</string>\r\n    <string name=\"visit_summary_pulse\" translatable=\"false\">नाड़ी</string>\r\n    <string name=\"visit_summary_previous_reports\" translatable=\"false\">पिछला रिपोर्ट</string>\r\n    <string name=\"visit_summary_medical_history\">चिकित्सक इतिहास</string>\r\n    <string name=\"visit_summary_family_history\" translatable=\"false\">परिवार इतिहास</string>\r\n    <string name=\"visit_summary_on_examination\" translatable=\"false\">निरिक्षण करने पर</string>\r\n    <string name=\"visit_summary_complaint\" translatable=\"false\">यात्रा का कारण</string>\r\n    <string name=\"visit_summary_vitals\" translatable=\"false\">नब्ज</string>\r\n    <string name=\"visit_summary_doctor_details\" translatable=\"false\">चिकित्सक विवरण</string>\r\n    <string name=\"visit_summary_rx\" translatable=\"false\">निर्धारित दवाईयाँ</string>\r\n    <string name=\"visit_summary_diagnosis\" translatable=\"false\">मूल्यांकन</string>\r\n    <string name=\"visit_summary_advice\" translatable=\"false\">चिकित्सक सलाह</string>\r\n    <string name=\"visit_summary_tests_prescribed\" translatable=\"false\">जांच/संप्रेषण</string>\r\n    <string name=\"visit_summary_additional_comments\" translatable=\"false\"> अतिरिक्त टिप्पणी</string>\r\n    <string name=\"visit_summary_heading_name\" translatable=\"false\">नाम</string>\r\n    <string name=\"visit_summary_heading_id\" translatable=\"false\">पहचान</string>\r\n    <string name=\"visit_summary_button_download\" translatable=\"false\">डाउनलोड</string>\r\n    <string name=\"visit_summary_button_upload\" translatable=\"false\">अपलोड</string>\r\n    <string name=\"name_button_download\" translatable=\"false\"> बटन डाउनलोड</string>\r\n    <string name=\"visit_summary_follow_up_date\" translatable=\"false\">तारीख का पालन करे</string>\r\n    <string name=\"visit_summary_follow_up_reminder\" translatable=\"false\">कृप्या मरीज को उसके तारीख याद दिलाये:</string>\r\n    <string name=\"visit_summary_upload_reminder\" translatable=\"false\">कृप्या डालने से पहले यात्रा समाप्त करने का प्रयास करें!</string>\r\n\r\n\r\n    //Diagnostic Tests Screen\r\n    <string name=\"title_activity_diagnostic_tests_list\" translatable=\"false\">निदान जांच चुने</string>\r\n\r\n    //Physical Exam Dialog\r\n    <string name=\"wash_hands\">याद से अपना हाथ धोएं</string>\r\n\r\n\r\n    //Patient Detail Screen\r\n    <string name=\"header_patient_detail\" translatable=\"false\">मरीज की जानकारी</string>\r\n    <string name=\"button_history\" translatable=\"false\">मरीज का इतिहास</string>\r\n    <string name=\"title_activity_patient_detail\" translatable=\"false\">मरीज का विस्तार</string>\r\n    <string name=\"header_medical_history\" translatable=\"false\">इतिहास</string>\r\n    <string name=\"button_new_visit\" translatable=\"false\">नया यात्रा शुरु करो</string>\r\n    <string name=\"header_previous_visits\" translatable=\"false\">पिछली यात्रा</string>\r\n    <string name=\"header_patient_history\" translatable=\"false\">चिकित्सक इतिहास</string>\r\n    <string name=\"header_family_history\" translatable=\"false\">परिवार इतिहास</string>\r\n    <string name=\"string_no_hist\" translatable=\"false\">बीमारी का इतिहास नहीं है</string>\r\n    <string name=\"row_patient_id\" translatable=\"false\">मरीज की पहचान</string>\r\n    <string name=\"row_dob\" translatable=\"false\">जन्म तिथि</string>\r\n    <string name=\"row_age\" translatable=\"false\">उम्र</string>\r\n    <string name=\"row_address\">पता</string>\r\n    <string name=\"row_phone_number\" translatable=\"false\">फ़ोन</string>\r\n    <string name=\"row_open_visit\" translatable=\"false\">यात्रा खोलने के लिए क्लिक करे</string>\r\n    <string name=\"title_activity_settings\" translatable=\"false\">सेटिंग</string>\r\n\r\n    <!-- Strings related to Settings -->\r\n\r\n    <!-- Example General settings -->\r\n    <string name=\"pref_header_general\" translatable=\"false\">सामान्य</string>\r\n\r\n    <string name=\"pref_title_social_recommendations\" translatable=\"false\"> सामजिक सिफारिशें शुरू करे</string>\r\n    <string name=\"pref_description_social_recommendations\" translatable=\"false\">तुम्हारी सन्देश इतिहास पर आधारित सिफारिश के लिए लोग संपर्क करें</string>\r\n\r\n    <string name=\"pref_title_display_name\" translatable=\"false\">नाम को प्रदर्शित करे</string>\r\n    <string name=\"pref_default_display_name\" translatable=\"false\">जॉन स्मिथ</string>\r\n\r\n\r\n    <!-- Example settings for Data & syncBackground -->\r\n    <string name=\"pref_header_data_sync\" translatable=\"false\">डेटा-सिंक</string>\r\n\r\n    <string name=\"pref_title_server_url\" translatable=\"false\">सर्वर यूआरएल</string>\r\n    <string name=\"pref_title_id_prefix\" translatable=\"false\">स्थान उपसर्ग</string>\r\n\r\n    <!-- Example settings for Notifications -->\r\n    <string name=\"pref_header_notifications\" translatable=\"false\">सूचनाएं</string>\r\n    <string name=\"pref_title_new_message_notifications\" translatable=\"false\">नया सन्देश अधिसूचना</string>\r\n    <string name=\"pref_title_ringtone\" translatable=\"false\">रिंगटोन</string>\r\n    <string name=\"pref_ringtone_silent\" translatable=\"false\">मूक</string>\r\n    <string name=\"pref_title_vibrate\" translatable=\"false\">कांपना</string>\r\n    <string name=\"toast_crash\" translatable=\"false\">एप्लिकेशन त्रुटि का सामना करना पड़ा; सूचना भेजी गई</string>\r\n\r\n\r\n    <string name=\"title_activity_setup\" translatable=\"false\">सेट अप</string>\r\n\r\n    <string name=\"title_activity_camera\" translatable=\"false\">कैमरा</string>\r\n    <string name=\"title_activity_today_patient\">आज की विज़िट्स</string>\r\n    <string name=\"title_activity_additional_documents\">अतिरिक्त दस्तावेज़</string>\r\n    <string name=\"title_activity_video_library\" translatable=\"false\">वीडियो लाइब्रेरी</string>\r\n    <string name=\"visit_summary_patient_details\" translatable=\"false\">विवरण पर जाएँ</string>\r\n\r\n    <!--Setup Activity-->\r\n    <string name=\"setup_internet\" translatable=\"false\">सेटअप के लिए एक मजबूत इंटरनेट कनेक्शन की आवश्यकता है।</string>\r\n    <string name=\"generic_manual_entry\" translatable=\"false\">स्वयं भरे </string>\r\n    <string name=\"generic_erase_redo\" translatable=\"false\">मिटाओ और फिर से करो</string>\r\n    <string name=\"visit_summary_edit_vitals\" translatable=\"false\">आप इन विटल्स को फिर से इन विटल्स स्क्रीन से कर सकते हैं</string>\r\n\r\n    //Camera Permissions\r\n    <string name=\"permission_camera_rationale\" translatable=\"false\">कैमरा प्रीव्यू दिखाने के लिए कैमरा की अनुमति की आवश्यकता होती है</string>\r\n    <string name=\"permission_camera_denied\" translatable=\"false\">कैमरा अनुमति देने से इंकार कर दिया गया था| कृपया कैमरे तक पहुचने के लिए इस देने का विचार करें!</string>\r\n    <string name=\"permission_camera_never_askagain\" translatable=\"false\">कैमरा की अनुमति से इंकार कर दिया था फिर कभी नहीं पूछे</string>\r\n    <string name=\"button_allow\" translatable=\"false\">अनुमति</string>\r\n    <string name=\"button_deny\" translatable=\"false\">मना</string>\r\n    <string name=\"button_ok\" translatable=\"false\">ठीक</string>\r\n    <string name=\"button_cancel\" translatable=\"false\">रद्द करना</string>\r\n    <string name=\"picture_taken\" translatable=\"false\">तस्वीर ली</string>\r\n    <string name=\"switch_flash\" translatable=\"false\">फ़्लैश स्विच करें</string>\r\n    <string name=\"switch_camera\" translatable=\"false\">कैमरा स्विच करें</string>\r\n    <string name=\"flash_auto\" translatable=\"false\">फ्लैश ऑटो</string>\r\n    <string name=\"flash_off\" translatable=\"false\">फ्लैश बंद</string>\r\n    <string name=\"flash_on\" translatable=\"false\">फ्लैश शुरू</string>\r\n\r\n    //SEND SMS Permissions\r\n    <string name=\"permission_sms_rationale\" translatable=\"false\">एसएमएस भेजने के लिए एसएमएस की अनुमति की जरूरत होती है।</string>\r\n    <string name=\"permission_sms_denied\" translatable=\"false\">एसएमएस की अनुमति से इनकार कर दिया गया था। कृपया आवेदन से एसएमएस भेजने के लिए इसे देने पर विचार करें!</string>\r\n    <string name=\"permission_sms_never_askagain\" translatable=\"false\">एसएमएस की अनुमति से इनकार कर दिया गया था फिर कभी नहीं पूछें।</string>\r\n\r\n    <string name=\"button_save\" translatable=\"false\">सहेजें</string>\r\n    <string name=\"button_delete\" translatable=\"false\">हटाएं</string>\r\n\r\n    //Camera Dialog\r\n    <string name=\"camera_dialog_default\" translatable=\"false\">कृपया अच्छी रोशनी की स्थिति में दस्तावेज़ फोटो पर क्लिक करें। यदि दस्तावेज़ फ़ोटो स्पष्ट नहीं है, तो कृपया दस्तावेज़ फ़ोटो को फिर से लें।</string>\r\n\r\n    <!--Offline Login Errors-->\r\n    <string name=\"offline_credentials_unavailable\" translatable=\"false\">ऑफ़लाइन लॉगिन उपलब्ध नहीं है।</string>\r\n    <string name=\"offline_user_does_not_match\" translatable=\"false\">उपयोगकर्ता मेल नहीं खाता।</string>\r\n    <string name=\"offline_authentication_not_possible\" translatable=\"false\">ऑफ़लाइन प्रमाणित करने में असमर्थ।</string>\r\n    <string name=\"admin_authentication_not_possible\" translatable=\"false\">प्रमाणित करने में असमर्थ।</string>\r\n\r\n    <string name=\"login_location_select\" translatable=\"false\">स्थान चुनें</string>\r\n    <string name=\"prompt_licensekey\" translatable=\"false\">लाइसेंस कुंजी</string>\r\n    <string name=\"setup_use_demo_mindmap\" translatable=\"false\">डेमो प्रोटोकॉल का उपयोग करें</string>\r\n    <string name=\"setup_download_mindmap\" translatable=\"false\">प्रोटोकॉल डाउनलोड करें</string>\r\n\r\n    <string name=\"please_wait_progress\" translatable=\"false\">कृपया प्रतीक्षा कीजिये</string>\r\n    <string name=\"downloading_protocols\" translatable=\"false\">प्रोटोकॉल डाउनलोड हो रहा हैं</string>\r\n    <string name=\"logging_in\" translatable=\"false\">प्रवेश किया</string>\r\n    <string name=\"error_downloading_protocols\" translatable=\"false\">माइंड मैप डाउनलोड करने में त्रुटि</string>\r\n\r\n    //Sync strings\r\n    <string name=\"sync_stopped\" translatable=\"false\">रोका हुआ</string>\r\n    <string name=\"sync_in_progress\" translatable=\"false\">चालू</string>\r\n    <string name=\"sync_complete\" translatable=\"false\">पूर्ण</string>\r\n    <string name=\"sync_error\" translatable=\"false\">त्रुटि: ऐसी कोई स्थिति नहीं है</string>\r\n\r\n    <string name=\"id_number\" translatable=\"false\">आईडी नंबर</string>\r\n    <string name=\"uploading\" translatable=\"false\">अपलोड हो रहा है ...</string>\r\n    <string name=\"downloading\" translatable=\"false\">डाउनलोड हो रहा है ...</string>\r\n\r\n    <string name=\"visit\" translatable=\"false\">पर जाएँ</string>\r\n    <string name=\"visit_update\" translatable=\"false\">अपडेट पर जाएँ</string>\r\n    <string name=\"patient\">पेशेंट</string>\r\n    <string name=\"patient_update\" translatable=\"false\">पेशेंट अपडेट </string>\r\n    <string name=\"patient_images\" translatable=\"false\">पेशेंट प्रोफ़ाइल छवि</string>\r\n    <string name=\"visit_images\" translatable=\"false\">छवियों पर जाएँ</string>\r\n    <string name=\"prescription\" translatable=\"false\">पर्चे</string>\r\n\r\n    <string name=\"error_no_data\" translatable=\"false\">यात्रा समाप्त करने का प्रयास करने से पहले कृपया पहले डाउनलोड करें।</string>\r\n    <string name=\"error_phone_number\" translatable=\"false\">फ़ोन नंबर खाली नहीं हो सकता</string>\r\n    <string name=\"action_end_visit\" translatable=\"false\">विजिट समाप्त </string>\r\n\r\n    <string name=\"error_sms\" translatable=\"false\">एसएमएस/सन्देश  विफल, कृपया बाद में पुन: प्रयास करें!</string>\r\n    <string name=\"sms_success\" translatable=\"false\">एसएमएस भेजा गया!</string>\r\n\r\n    <string name=\"question_update_details\" translatable=\"false\">क्या आप विवरण अपडेट करना चाहते हैं?</string>\r\n\r\n    <string name=\"backup_completed\" translatable=\"false\">बैकअप पूर्ण!</string>\r\n\r\n    <string name=\"hide_text\">छिपाना</string>\r\n    <string name=\"show_text\">प्रदर्शन</string>\r\n\r\n    <string name=\"new_patient\">नया पेशेंट</string>\r\n    <string name=\"find_patient\">पेशेंट खोजे</string>\r\n    <string name=\"video_library\">वीडियो लाइब्रेरी</string>\r\n\r\n    <string name=\"error_no_sd\" translatable=\"false\">यह सुविधा केवल एसडी कार्ड वाले उपकरणों के लिए उपलब्ध है।</string>\r\n    <string name=\"error_admin_password\" translatable=\"false\">व्यवस्थापक पासवर्ड गलत</string>\r\n    <string name=\"error_no_file\" translatable=\"false\">इस निर्देशिका में कोई फ़ाइलें नहीं</string>\r\n    <string name=\"error_no_camera\" translatable=\"false\">कोई कैमरा नहीं लगाया गया।</string>\r\n    <string name=\"error_delete\" translatable=\"false\">हटाने में त्रुटि</string>\r\n    <string name=\"error_offline_login\" translatable=\"false\">ऑफ़लाइन लॉगिन असफल</string>\r\n    <string name=\"success_offline_login\" translatable=\"false\">ऑफलाइन लॉगिन सफल</string>\r\n    <string name=\"invalidate_offline_login\" translatable=\"false\">ऑफ़लाइन लॉगिन अमान्य है|</string>\r\n\r\n    <string name=\"patient_upload_error\" translatable=\"false\">पेशेंट को अपलोड नहीं किया गया है</string>\r\n    <string name=\"patient_not_registered\" translatable=\"false\">पेशेंट पंजीकृत नहीं है</string>\r\n\r\n    <string name=\"action_sync_all\" translatable=\"false\">सिंक डेटा</string>\r\n\r\n    <!-- Vitals Screen Error-->\r\n\r\n    <string name=\"weight_error\" translatable=\"false\">वजन %1$s किलो से कम होना चाहिए</string>\r\n    <string name=\"height_error\" translatable=\"false\">ऊंचाई 0 और %1$s सेमी के बीच होनी चाहिए चाहिए</string>\r\n    <string name=\"spo2_error\" translatable=\"false\">SpO2 %1$s और %2$s के बीच होना चाहिए</string>\r\n    <string name=\"pulse_error\" translatable=\"false\">पल्स %1$s और %2$s के बीच होना चाहिए</string>\r\n    <string name=\"bpsys_error\" translatable=\"false\">सिस्टोलिक दबाव %1$s और %2$s के बीच होना चाहिए</string>\r\n    <string name=\"bpdia_error\" translatable=\"false\">डायस्टोलिक दबाव %1$s और %2$s के बीच होना चाहिए</string>\r\n    <string name=\"resp_error\" translatable=\"false\">श्वसन दर %1$s और %2$s के बीच होनी चाहिए</string>\r\n    <string name=\"temp_error\" translatable=\"false\">तापमान %1$s और %2$s के बीच होना चाहिए</string>\r\n\r\n    <string name=\"not_provided\">नहीं दिया गया</string>\r\n\r\n    <!-- Patient Exit Survey -->\r\n    <string name=\"exit_survey_label\" translatable=\"false\">आपका अनुभव कैसा रहा?</string>\r\n    <string name=\"exit_survey_prompt\" translatable=\"false\">यहाँ अपनी टिप्पणी दर्ज करें</string>\r\n    <string name=\"exit_survey_skip\" translatable=\"false\">छोड़ें</string>\r\n    <string name=\"exit_survey_submit\" translatable=\"false\">जमा</string>\r\n    <string name=\"exit_survey_toast\">कृपया सबमिट करने से पहले एक स्माइली चुनें</string>\r\n\r\n\r\n    <!--DB Backup-->\r\n\r\n    <string name=\"db_backup_complete\" translatable=\"false\">डेटाबेस बैकअप पूरा!</string>\r\n    <string name=\"db_restore_complete\" translatable=\"false\">डेटाबेस रिस्टोर पूरा!</string>\r\n\r\n    <!--Cloud Backup-->\r\n\r\n    <string name=\"cloud_upload_header\" translatable=\"false\">क्लाउड पर डेटाबेस अपलोड करना</string>\r\n    <string name=\"no_network\" translatable=\"false\">इन्टरनेट कनेक्शन उपलब्ध नहीं है</string>\r\n    <string name=\"no_data\" translatable=\"false\">डेटा बैकअप नही है !</string>\r\n    <string name=\"local_backup_failed\" translatable=\"false\"> स्थानीय बैकअप उपलब्ध नही है</string>\r\n    <string name=\"local_backup_restore\" translatable=\"false\">स्थानीय बैकअप पुनर्स्थापित करना</string>\r\n\r\n    <string name=\"cloud_restore_header\" translatable=\"false\">क्लाउड से पुनर्स्थापित करना</string>\r\n    <string name=\"restore_data\" translatable=\"false\">पुनर्स्थापित डेटा</string>\r\n    <string name=\"error_existing_data\" translatable=\"false\">डेटाबेस में डेटा सामिल है पुनर्स्थापित नहीं किया जा सकता!</string>\r\n    <string name=\"cloud_download_data\" translatable=\"false\">क्लाउड से डेटाबेस डाउनलोड करना</string>\r\n\r\n    <string name=\"force_restore_header\" translatable=\"false\">क्लाउड से डेटा पुनार्स्तापिथ करना</string>\r\n\r\n    <string name=\"database_upload\" translatable=\"false\">डेटाबेस डालना</string>\r\n    <string name=\"database_uploading\" translatable=\"false\">अप्लोअडिंग डेटाबेस</string>\r\n    <string name=\"database_upload_complete\" translatable=\"false\">डेटाबेस पूरा डालना</string>\r\n    <string name=\"database_upload_failed\" translatable=\"false\">डेटाबेस डालना असफल</string>\r\n\r\n    <string name=\"db_backup_unavailable\" translatable=\"false\">डेटाबेस बैकअप उपस्थित नही है</string>\r\n    <string name=\"db_file_write_error\" translatable=\"false\">बैकअप फाइल डालने में भूल</string>\r\n\r\n    <string name=\"local_restore_alert_title\" translatable=\"false\">बैकअप बाहाल</string>\r\n    <string name=\"local_restore_alert_message\" translatable=\"false\">एक अस्थायी बैकअप मिला है क्या आप पूर्वस्थापित करना चाहते है?</string>\r\n\r\n\r\n    <!--Image Download Service-->\r\n    <string name=\"image_downloading_service_title\" translatable=\"false\">दोव्न्लोअदिन्ग</string>\r\n    <string name=\"image_downloading_service_message\" translatable=\"false\">दोव्न्लोअदिन्ग  छवी डेटा</string>\r\n    <string name=\"image_downloading_service_complete_title\" translatable=\"false\">छवी डेटा डाउनलोड सफल</string>\r\n    <string name=\"image_downloading_service_complete_message\" translatable=\"false\">सभी छवी फाइल्स डाउनलोड हो चुकी है</string>\r\n    <string name=\"image_downloading_service_process_message\" translatable=\"false\">डाउनलोड हो चूका</string>\r\n    <string name=\"error_img_unavailable\" translatable=\"false\">छवी उपलब्ध नहीं है</string>\r\n    <string name=\"error_img_download_failed\" translatable=\"false\">छवी डाउनलोड असफल</string>\r\n\r\n    <!--Parse Validation User login-->\r\n\r\n    <string name=\"user_logged_in\" translatable=\"false\">पहले से लोग्ड इन है!</string>\r\n    <string name=\"user_logged_in_other_device\" translatable=\"false\">पहले से लोग्ड  इन है| कृपया दुशरे यन्त्र से लॉगआउट करें</string>\r\n    <string name=\"user_logged_out\" translatable=\"false\">सर्वर से लोग्ड आउट</string>\r\n    <string name=\"user_login_check_success\" translatable=\"false\">लॉग इन सफल!</string>\r\n    <string name=\"user_login_error\" translatable=\"false\">एक अन्य उपयोगकर्ता इस स्थान में लॉग इन है कृपया ब्योस्थापक से संपर्क करें</string>\r\n    <string name=\"user_server_unreachable\" translatable=\"false\">डिवाइस ऑफलाइन! लॉग इन सत्यापन के लिए सर्वर की जाँच नही कर सकते</string>\r\n\r\n    <string name=\"title_activity_splash_acticity\" translatable=\"false\">स्प्लैश क्रियाकलाप</string>\r\n    <string name=\"title_activity_home\" translatable=\"false\"> घर का क्रियाकलाप</string>\r\n    <string name=\"title_activity_sync\" translatable=\"false\">क्रियाकलाप सिंक</string>\r\n    <string name=\"title_activity_privacy_notice\" translatable=\"false\">गोपनीयता सुचना</string>\r\n    <string name=\"title_activity_visit_summary\" translatable=\"false\">यात्रा सारांश क्रियाकलाप</string>\r\n    <string name=\"title_activity_past_medical_history\" translatable=\"false\">अतीत चिकित्सक  इतिहास क्रियाकलाप</string>\r\n    <string name=\"title_activity_patient_survey\" translatable=\"false\">मरीज सर्वे क्रियाकलाप</string>\r\n\r\n    <!--Privacy Notice Activity-->\r\n    <string name=\"privacy_toast\">कृपया एक विकल्प चुनें</string>\r\n    <string name=\"temperature_f\">तापमान (F)</string>\r\n    <string name=\"sync_now\">अभी सिंक करें</string>\r\n    <string name=\"lastsync\">अंतिम सिंक</string>\r\n    <string name=\"enter_password\">अपना पासवर्ड डालें</string>\r\n    <string name=\"enter_username\">अपने उपयोगकर्ता नाम दर्ज करें</string>\r\n    <string name=\"patient_denies\">पेशेंट इनकार करता है</string>\r\n    <string name=\"patient_reports\">पेशेंट की रिपोर्ट</string>\r\n\r\n    <string name=\"associated_symptoms\">जुड़े लक्षण</string>\r\n    <string name=\"enter_server_url\">सर्वर URL दर्ज करें</string>\r\n    <string name=\"enter_license_key\"><b>लाइसेंस नंबर डाले</b></string>\r\n    <string name=\"invalid_url\">अवैध यूआरएल</string>\r\n    <string name=\"years\">वर्षों</string>\r\n    <string name=\"months\">महीने</string>\r\n    <string name=\"please_wait_till_sync_is_completed\">कृपया सिंक पूरी होने तक प्रतीक्षा करें</string>\r\n    <string name=\"patient_name\">पेशेंट का नाम</string>\r\n    <string name=\"son_daughter_wife_of\">बेटा / बेटी / की पत्नी</string>\r\n    <string name=\"occupation\">व्यवसाय</string>\r\n    <string name=\"economic_status\">आर्थिक स्थिति</string>\r\n    <string name=\"education_level\">शिक्षा का स्तर</string>\r\n    <string name=\"caste\">जाति</string>\r\n    <string name=\"previous_visits\">पिछला विजिट</string>\r\n    <string name=\"accept\">स्वीकार करना</string>\r\n    <string name=\"reject\">अस्वीकार</string>\r\n    <string name=\"next\">आगे</string>\r\n    <string name=\"which_server_would_you_like_to_connect_to\">आप किस सर्वर से कनेक्ट करना चाहेंगे?</string>\r\n    <string name=\"enter_url\">यू आर एल दर्ज करो</string>\r\n    <string name=\"choose_a_location_to_login\">लॉगिन करने के लिए एक स्थान चुनें</string>\r\n    <string name=\"choose_an_option_for_protocols\">प्रोटोकॉल के लिए एक विकल्प चुनें</string>\r\n    <string name=\"please_enter_your_username_and_password\">कृपया अपना यूज़रनेम और पासवर्ड दर्ज करें</string>\r\n    <string name=\"android_id\">आंड्राय्ड आईडी:</string>\r\n    <string name=\"respiratory_rate\">श्वसन दर</string>\r\n    <string name=\"click_to_download_the_images\">चित्र डाउनलोड करने के लिए क्लिक करें</string>\r\n    <string name=\"doctor\">डॉक्टर का विवरण</string>\r\n    <string name=\"health_worker\">स्वास्थ्यकर्मी</string>\r\n    <string name=\"priority\">प्राथमिकता</string>\r\n    <string name=\"server_url\">सर्वर url</string>\r\n    <string name=\"sync\">सिंक</string>\r\n    <string name=\"update_protocols\">प्रोटोकॉल अद्यतन करें</string>\r\n    <string name=\"end_all_visit\">एंड ऑल विजिट</string>\r\n    <string name=\"filter_by_creator\">निर्माता द्वारा फ़िल्टर करें</string>\r\n    <string name=\"planet_name\">प्लॅनेट नामे</string>\r\n    <string name=\"ok\">ठीक</string>\r\n    <string name=\"cancel\">रद्द करना</string>\r\n    <string name=\"unable_to_end\">समाप्त करने में असमर्थ</string>\r\n    <string name=\"upload_before_end_visit_active\"> कृपया यात्रा समाप्त करने का प्रयास करने से पहले यात्रा अपलोड करें</string>\r\n    <string name=\"active\">सक्रिय</string>\r\n    <string name=\"closed\">बन्द है</string>\r\n\r\n    <string name=\"syncInProgress\">सिंक प्रगति में</string>\r\n    <string name=\"please_wait\">कृपया रुके...</string>\r\n    <string name=\"sync_notif_title\">सिंक</string>\r\n    <string name=\"sync_background_completed\">सिंक बैकग्राउंड पूरा हुआ</string>\r\n    <string name=\"sync_not_available\"> सिंक उपलब्ध नहीं है</string>\r\n    <string name=\"please_connect_to_internet\">कृपया  किसी इन्टरनेट कनेक्शन से जोड़े!</string>\r\n    <string name=\"image_upload\">छवी डालना</string>\r\n    <string name=\"image_upload_failed\">छवी डालना असफल</string>\r\n    <string name=\"sure_to_exit\">क्या आप निसंदेह बाहर निकलना चाहते है?</string>\r\n    <string name=\"sure_to_logout\">क्या आप लॉग आउट करना चाहते हैं?</string>\r\n    <string name=\"lastsync_normal\">आखिरी सिंक</string>\r\n    <string name=\"update_patient_identification\">मरीज डालना</string>\r\n    <string name=\"are_you_want_go_back\">क्या आप वाकई वापस जाना चाहते हैं?</string>\r\n    <string name=\"error\">भूल</string>\r\n    <string name=\"patient_data_upload\">मरीज डेटा अपलोड</string>\r\n    <string name=\"patient_image_download_notifi\">मरीज छवी डाउनलोड</string>\r\n    <string name=\"image_download_complete_notifi\">छवी डाउनलोड पूरा हुआ</string>\r\n    <string name=\"no_prior_visits\">कोई पूर्वा भ्रमण नहीं</string>\r\n    <string name=\"end_visit_notif\">यात्रा समाप्त</string>\r\n    <string name=\"visit_ended_notif\">यात्रा समाप्त हो चुकी है</string>\r\n    <string name=\"this_question_only_one_answer\">इस सवाल का केवल एक ही जवाब है</string>\r\n    <string name=\"uploading_to_doctor_notif\">चिकित्सक को भेज दिया</string>\r\n    <string name=\"visit_data_upload\">डेटा अपलोड पर जाएँ</string>\r\n    <string name=\"uploading_visit_data_notif\">यात्रा डेटा अपलोड करें</string>\r\n    <string name=\"uploaded_visit_data_notif\"> विजिट डेटा अपलोड हो गया</string>\r\n    <string name=\"failed_to_upload\">अपलोड करने में असफल</string>\r\n    <string name=\"upload_completed\">अपलोड पूरा हुआ</string>\r\n    <string name=\"check_your_connectivity\">अपने कनेक्टिविटी की जाँच करें</string>\r\n    <string name=\"download_from_doctor\">चिकित्सक से डाउनलोड करें</string>\r\n    <string name=\"prescription_downloaded\">पर्चे डाउनलोड हो गये</string>\r\n    <string name=\"downloading_prescription\">पर्चे डाउनलोड हो रहे है</string>\r\n    <string name=\"visit_data_failed\">यात्रा डेटा असफल रहा</string>\r\n    <string name=\"patient_data_failed\">मरीज डेटा असफल</string>\r\n    <string name=\"privacy_notice_title\">गोपनीयता सुचना</string>\r\n    <string name=\"no_data_active_patients\">इस स्वस्थ्य कार्यकर्ता के नाम पर कोई रोगी रिकॉर्ड नहीं ह </string>\r\n    <string name=\"syncing_visitDialog\">सिंकिंग</string>\r\n    <string name=\"successfully_synced_notif\">सफलतापूर्वक सिंक किया गया</string>\r\n    <string name=\"languages\">भाषए</string>\r\n    <string name=\"current_language\">सेलेक्टेड भाषा</string>\r\n    <string name=\"protocols_downloaded_successfully\">प्रोटोकॉल सफलतापूर्वक डाउनलोड!</string>\r\n    <string name=\"no_protocols_found\">कोई प्रोटोकॉल नहीं मिला</string>\r\n    <string name=\"unable_to_get_proper_response\">प्रोटोकॉल डाउनलोड करने में समस्या थी, कृपया सिस्टम व्यवस्थापक से संपर्क करें!</string>\r\n    <string name=\"last_synced\">आखरी समन्वित- </string>\r\n    <string name=\"today_visits\">आज की विज़िट्स</string>\r\n    <string name=\"active_visits\">आक्टिव विज़िट्स</string>\r\n    <string name=\"day\">दिन</string>\r\n    <string name=\"hour\">घंटा</string>\r\n    <string name=\"minute\">मिनट</string>\r\n    <string name=\"s\">s</string>\r\n    <string name=\"ago\">पहले</string>\r\n    <string name=\"successfully_synced\">समन्वित सफल</string>\r\n    <string name=\"failed_synced\">समन्वित विफल, कृपया अपने नेट की जांच करे</string>\r\n    <string name=\"visit_not_uploaded\">अपलोड नही किया गया</string>\r\n    <string name=\"upload_started\">अप्लोअडिंग...</string>\r\n    <string name=\"visit_uploaded_successfully\">विज़िट्स सफलतापूर्वक अपलोड किया गया</string>\r\n    <string name=\"visit_uploaded_failed\">इंटरनेट उपलब्ध होने पर अपलोड किया जाएगा</string>\r\n    <string name=\"visitID\">यात्रा पहचान </string>\r\n\r\n    <string name=\"end_visit_msg\">क्या आप वाकई विज़िट को समाप्त करना चाहते हैं?</string>\r\n    <string name=\"prescription_not_downloaded_check_internet\">प्रिस्क्रिप्शन डाउनलोड नहीं किया गया है, इंटरनेट कनेक्शन की जांच करें</string>\r\n    <string name=\"privacy_reject_toast\">आप सहमति के बिना एक मरीज को पंजीकृत नहीं कर सकते</string>\r\n    <string name=\"not_answered\">जवाब नहीं दिया</string>\r\n    <string name=\"new_update_available\">नया अपडेट उपस्थित</string>\r\n    <string name=\"update_app_note\">नया संस्करण नयी सविधाओं से उपलब्ध है कृपया एप्लीकेशन अपडेट करें</string>\r\n    <string name=\"update\">अपडेट करें</string>\r\n\r\n\r\n    <!--New Ayu Related Changes-->\r\n    <string name=\"what_is_the_reason_for_your_visit\" >आपकी विज़िट का कारण क्या है?</string>\r\n    <string name=\"swipe_down_to_return\">अगले/ पिछले के लिए निचे स्वाइप करें</string>\r\n    <string name=\"swipe_up\">अगले के लिए ऊपर स्वाइप करें</string>\r\n    <string name=\"swipe_down\">पिछले के लिए निचे स्वाइप करें</string>\r\n    <string name=\"have_symptom\">क्या आपको यह लक्षण हैं?</string>\r\n\r\n\r\n    <!--New UI changes 2.1-->\r\n    <string name=\"personal_information\">व्यक्तिगत जानकारी</string>\r\n    <string name=\"address_details\">पते का विवरण</string>\r\n    <string name=\"txt_others\">अन्य</string>\r\n    <string name=\"do_you_need_help_please_contact_us\">क्या आपको मदद की ज़रूरत है? कृपया हमसे सम्पर्क करें!</string>\r\n    <string name=\"whatsapp_helpline\">WhatsApp हेल्पलाइन</string>\r\n    <string name=\"Whatsapp_Help_Cardview\">हेल्प</string>\r\n    <string name=\"skip\">छोड़ें</string>\r\n    <string name=\"start\">शुरू</string>\r\n    <string name=\"who_is_this_napplication_for\">यह एप किसके लिए है?</string>\r\n    <string name=\"custom_setup\">सेटप</string>\r\n    <string name=\"demo_version\">डेमो संस्करण</string>\r\n    <string name=\"sample_text\">मामूली टेक्स्ट</string>\r\n    <string name=\"test_2_vibha_onplus_6t_10fke_7\">Test 2 Vibha onplus 6T, 10FKE-7</string>\r\n    <string name=\"age_11_years_5_months\">Age: 11 years, 5 months</string>\r\n    <string name=\"active_defaultTag\">सक्रिय</string>\r\n    <string name=\"since_when_have_you_had_this_symptom\">आपको यह लक्षण कब से है?</string>\r\n    <string name=\"hello_n_n_i_m_ayu_a_digital_health_assistant_let_s_get_started\">हेलो आयु, एक डिजिटल स्वस्थ्य सहायक| आयें शुरु करें!</string>\r\n    <string name=\"hello_n_n_i_m_ayu_a_digital_health_assistant_let_s_get_started_normal_Screen\">हेलो आयु, एक डिजिटल स्वस्थ्य सहायक| आयें शुरु करें!</string>\r\n    <string name=\"hello_my_name_is\">हेलो ! मेरा नाम है</string>\r\n    <string name=\"i_need_assistance\">और मुझे सहायता की आवश्यकता है|</string>\r\n    <string name=\"economic_values_missing\">आर्थिक मूल्य गायब है</string>\r\n    <string name=\"education_values_missing\">शिक्षा मूल्य गायब है</string>\r\n    <string name=\"intelehealth_a_telemedicine_platform\">एकल आरोग्य एक टेलीमेडिसिन एप है जो ग्रामीण और दूरदराज के क्षेत्रों में दूरदराज के डॉक्टरों के साथ स्वास्थ्य कार्यकर्ताओं को जोड़ता है ताकि वे अपने रोगियों के लिए उच्च गुणवत्ता वाली स्वास्थ्य सेवाएं प्रदान कर सकें।</string>\r\n    <string name=\"intelehealth_name\">एकल आरोग्य</string>\r\n    <string name=\"Ayu_name\">आयु</string>\r\n    <string name=\"close_button\">बंद</string>\r\n    <string name=\"active_tag_patientDetail\">सक्रिय</string>\r\n    <string name=\"associated_symptoms_patientDetail\">Associated symptoms</string>\r\n    <string name=\"device_ID\">डिवाइस की पहचान:</string>\r\n    <string name=\"enter_valid_license_url\">वैध लाइसेंस यूआरएल दर्ज करें</string>\r\n    <string name=\"please_enter_url_and_key\">कृपया URL और कुंजी दर्ज करें</string>\r\n    <string name=\"please_enter_valid_license_key\">कृपया एक मान्य लाइसेंस कुंजी दर्ज करें</string>\r\n    <string name=\"permission_denied\">अनुमति नहीं मिली\\n</string>\r\n    <string name=\"reject_permission_results\">यदि आप अनुमति को अस्वीकार करते हैं,तो आप इस सेवा का उपयोग नहीं कर सकते| कृपया सेटिंग-> अनुमति पर चालू करें</string>\r\n    <string name=\"current_time\">वर्तमान समय</string>\r\n    <string name=\"temperature_C\">\"तापमान (सी): \"</string>\r\n    <string name=\"temperature_F\">\"तापमान (एफ): \"</string>\r\n    <string name=\"no_history_family_found\">परिवार में बीमारी का कोई इतिहास नहीं दिया गया है।</string>\r\n    <string name=\"no_history_patient_illness_found\">पेशेंट की बीमारी का कोई इतिहास प्रदान नहीं किया गया।</string>\r\n    <string name=\"dr_registration_no\">पंजीकरण क्रमांक: </string>\r\n    <string name=\"dr_phone_number\">फ़ोन नंबर: </string>\r\n    <string name=\"dr_email\">ईमेल:  </string>\r\n    <string name=\"_visit_summary\"> सारांश पर जाएँ</string>\r\n    <string name=\"patient_id_\">पेशेंट आईडी:</string>\r\n    <string name=\"patient_name_title\">पेशेंट का नाम: </string>\r\n    <string name=\"patient_DOB\">पेशेंट जन्मतिथि:</string>\r\n    <string name=\"error_non_decimal_no_added\">त्रुटि: गैर-दशमलव संख्या दर्ज की गई।</string>\r\n    <string name=\"download_protocols\">प्रोटोकॉल डाउनलोड हो रहा हैं</string>\r\n    <string name=\"mindmap_internect_connection\">माइंडमैप डाउनलोड करने के लिए आपको इंटरनेट कनेक्टिविटी की आवश्यकता है, कृपया अपने इंटरनेट को चालू करें</string>\r\n    <string name=\"days\">दिन</string>\r\n    <string name=\"contact\">संपर्क करें</string>\r\n    <string name=\"has_a_new_prescription\">एक नया पर्ची है</string>\r\n    <string name=\"whatsapp_presc_toast\">फ़ाइल एक्सप्लोरर से पर्चे पीडीएफ का चयन करें - Internal storage/EkalArogya_PDF</string>\r\n    <string name=\"enter_mobile_number_to_share_prescription\">उस मोबाइल नंबर को दर्ज करें जिसमें आप नप्रिस्क्रिप्षन(डॉक्टर की पर्ची) को साझा करना चाहते हैं।</string>\r\n    <string name=\"share\">साझा करें</string>\r\n    <string name=\"please_enter_mobile_number\">कृपया मोबाइल नंबर दर्ज करें</string>\r\n    <string name=\"download_prescription_first_before_sharing\">साझा करने से पहले पहले पर्चे डाउनलोड करें</string>\r\n    <string name=\"i_sevika_confirm_that_i_have_read_out_the_privacy_notice_and_consent_to_the_patient\">*मैं (सेविका) इस बात की पुष्टि करती हूं कि मैंने पेशेंट को गोपनीयता नोटिस और सहमति पढ़ दी है।</string>\r\n    <string name=\"enter_10_digits\">10 अंक दर्ज करें</string>\r\n    <string name=\"please_read_out_privacy_consent_first\">कृपया पहले गोपनीयता सहमति पढ़ें।</string>\r\n    <string name=\"view_print\">देखें / प्रिंट करें</string>\r\n    <string name=\"refresh\">पुनश्चर्या</string>\r\n    <string name=\"family_member\">परिवार सदस्य</string>\r\n    <string name=\"no_family_member_registered\">कोई परिवार का सदस्य पंजीकृत नहीं</string>\r\n    <string name=\"document_\">\"डाक्यूमेंट - \"</string>\r\n    <string name=\"gender\">लिंग</string>\r\n\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values-hi-rIN/strings.xml	(revision db4b970cdda541301d033834f0099baa4d882c5d)
+++ app/src/main/res/values-hi-rIN/strings.xml	(date 1614691171022)
@@ -1,55 +1,55 @@
 <resources>
-    <string name="app_name" translatable="false">एकल आरोग्य</string>
+    <string name="app_name">एकल आरोग्य</string>
 
     //Generic
-    <string name="generic_the_flipping_word_next" translatable="false">आगे</string>
-    <string name="hint_required" translatable="false">अपेक्षित</string>
-    <string name="hint_optional" translatable="false">ऐच्छिक</string>
-    <string name="tag_optional" translatable="false">ऐच्छिक</string>
+    <string name="generic_the_flipping_word_next">आगे</string>
+    <string name="hint_required">अपेक्षित</string>
+    <string name="hint_optional">ऐच्छिक</string>
+    <string name="tag_optional">ऐच्छिक</string>
     <string name="generic_ok" >ठीक</string>
     <string name="generic_cancel">रद्द करना</string>
     <string name="generic_yes">हाँ</string>
     <string name="generic_no">नहीं</string>
-    <string name="generic_back" translatable="false">वापस</string>
-    <string name="generic_coming_soon" translatable="false">जल्द आ रहा है .....</string>
-    <string name="action_print" translatable="false">छाप</string>
-    <string name="action_sms" translatable="false">एसएमएस/सन्देश </string>
-    <string name="action_home" translatable="false">घर</string>
-    <string name="action_settings" translatable="false">समायोजन</string>
-    <string name="generic_warning" translatable="false">चेतावनी!!</string>
-    <string name="generic_update" translatable="false">अपडेट करें</string>
-    <string name="generic_deleted" translatable="false">हटाए गए</string>
+    <string name="generic_back">वापस</string>
+    <string name="generic_coming_soon">जल्द आ रहा है .....</string>
+    <string name="action_print">छाप</string>
+    <string name="action_sms">एसएमएस/सन्देश </string>
+    <string name="action_home">घर</string>
+    <string name="action_settings">समायोजन</string>
+    <string name="generic_warning">चेतावनी!!</string>
+    <string name="generic_update" >अपडेट करें</string>
+    <string name="generic_deleted">हटाए गए</string>
 
 
     //Database Schema Names
-    <string name="db_first_name" translatable="false">प्रथम नाम</string>
-    <string name="db_middle_name" translatable="false">मध्य नाम</string>
-    <string name="db_last_name" translatable="false">आखिरी नाम</string>
-    <string name="db_dob" translatable="false">जन्म तिथि</string>
-    <string name="db_phone_number" translatable="false">फोन</string>
-    <string name="db_address_line1" translatable="false">पता पंक्ति 1</string>
-    <string name="db_address_line2" translatable="false">पता पंक्ति 2</string>
-    <string name="db_city" translatable="false">गांव/ कस्बा / शहर</string>
-    <string name="db_state" translatable="false">राज्य प्रान्त</string>
-    <string name="db_postal_code" translatable="false">डाक कोड</string>
-    <string name="db_country" translatable="false">देश</string>
-    <string name="db_gender" translatable="false">लिंग</string>
-    <string name="db_patient_id1" translatable="false">patient_identifier1</string>
-    <string name="db_patient_id2" translatable="false">patient_identifier2</string>
-    <string name="db_patient_id3" translatable="false">patient_identifier3</string>
+    <string name="db_first_name" >प्रथम नाम</string>
+    <string name="db_middle_name" >मध्य नाम</string>
+    <string name="db_last_name" >आखिरी नाम</string>
+    <string name="db_dob">जन्म तिथि</string>
+    <string name="db_phone_number">फोन</string>
+    <string name="db_address_line1">पता पंक्ति 1</string>
+    <string name="db_address_line2">पता पंक्ति 2</string>
+    <string name="db_city">गांव/ कस्बा / शहर</string>
+    <string name="db_state">राज्य प्रान्त</string>
+    <string name="db_postal_code">डाक कोड</string>
+    <string name="db_country">देश</string>
+    <string name="db_gender">लिंग</string>
+    <string name="db_patient_id1">patient_identifier1</string>
+    <string name="db_patient_id2">patient_identifier2</string>
+    <string name="db_patient_id3">patient_identifier3</string>
 
     //Login Screen
-    <string name="title_activity_login" translatable="false">एकल आरोग्य</string>
-    <string name="prompt_email" translatable="false">उपयोगकर्ता नाम</string>
-    <string name="prompt_password" translatable="false">कुंजिका</string>
-    <string name="prompt_admin_password" translatable="false">व्यवस्थापक कुंजी</string>
-    <string name="action_sign_in" translatable="false">लॉग इन करें</string>
-    <string name="action_sign_in_short" translatable="false">शाइन ईन करें</string>
-    <string name="url_invalid" translatable="false">अपना यूआरएल चेक करें</string>
-    <string name="prefix_invalid" translatable="false">विभिन्न उपसर्ग चुनते है!</string>
-    <string name="error_invalid_email" translatable="false">यह उपयोगकर्ता अवैध हैं</string>
-    <string name="error_invalid_password" translatable="false">यह पासवर्ड बहुत छोटा है</string>
-    <string name="error_incorrect_password" translatable="false">कृपया उपयोगकर्ता नाम और पासवर्ड की जाँच करें</string>
+    <string name="title_activity_login">एकल आरोग्य</string>
+    <string name="prompt_email">उपयोगकर्ता नाम</string>
+    <string name="prompt_password">कुंजिका</string>
+    <string name="prompt_admin_password">व्यवस्थापक कुंजी</string>
+    <string name="action_sign_in">लॉग इन करें</string>
+    <string name="action_sign_in_short">शाइन ईन करें</string>
+    <string name="url_invalid">अपना यूआरएल चेक करें</string>
+    <string name="prefix_invalid">विभिन्न उपसर्ग चुनते है!</string>
+    <string name="error_invalid_email">यह उपयोगकर्ता अवैध हैं</string>
+    <string name="error_invalid_password">यह पासवर्ड बहुत छोटा है</string>
+    <string name="error_incorrect_password">कृपया उपयोगकर्ता नाम और पासवर्ड की जाँच करें</string>
     <string name="error_field_required" translatable="false">यह फ़ील्ड आवश्यक है</string>
     <string name="error_network" translatable="false">नेटवर्क त्रुटि</string>
     <string name="error_location_not_selected" translatable="false">कृपया स्थान ड्रॉपडाउन मान का चयन करें</string>
Index: app/src/main/java/app/intelehealth/client/activities/identificationActivity/IdentificationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.intelehealth.client.activities.identificationActivity;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.Resources;\r\nimport android.database.Cursor;\r\nimport android.database.sqlite.SQLiteDatabase;\r\nimport android.graphics.BitmapFactory;\r\nimport android.os.Bundle;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.android.material.textfield.TextInputLayout;\r\n\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.text.InputFilter;\r\nimport android.text.Spanned;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.AutoCompleteTextView;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.NumberPicker;\r\nimport android.widget.RadioButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\n\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\nimport com.google.gson.Gson;\r\n\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.File;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.time.Period;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Objects;\r\nimport java.util.UUID;\r\n\r\nimport app.intelehealth.client.R;\r\nimport app.intelehealth.client.activities.patientDetailActivity.PatientDetailActivity;\r\nimport app.intelehealth.client.app.AppConstants;\r\nimport app.intelehealth.client.app.IntelehealthApplication;\r\nimport app.intelehealth.client.database.dao.ImagesDAO;\r\nimport app.intelehealth.client.database.dao.ImagesPushDAO;\r\nimport app.intelehealth.client.database.dao.PatientsDAO;\r\nimport app.intelehealth.client.database.dao.SyncDAO;\r\nimport app.intelehealth.client.models.Patient;\r\nimport app.intelehealth.client.models.dto.PatientAttributesDTO;\r\nimport app.intelehealth.client.models.dto.PatientDTO;\r\nimport app.intelehealth.client.utilities.DateAndTimeUtils;\r\nimport app.intelehealth.client.utilities.EditTextUtils;\r\nimport app.intelehealth.client.utilities.FileUtils;\r\nimport app.intelehealth.client.utilities.IReturnValues;\r\nimport app.intelehealth.client.utilities.Logger;\r\nimport app.intelehealth.client.utilities.SessionManager;\r\nimport app.intelehealth.client.utilities.UuidGenerator;\r\n\r\nimport app.intelehealth.client.activities.cameraActivity.CameraActivity;\r\nimport app.intelehealth.client.activities.homeActivity.HomeActivity;\r\nimport app.intelehealth.client.activities.setupActivity.SetupActivity;\r\nimport app.intelehealth.client.utilities.NetworkConnection;\r\nimport app.intelehealth.client.utilities.StringUtils;\r\nimport app.intelehealth.client.utilities.exception.DAOException;\r\n\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_caste;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_caste_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_economic_edit;\r\nimport static app.intelehealth.client.utilities.StringUtils.switch_hi_education_edit;\r\n\r\npublic class IdentificationActivity extends AppCompatActivity {\r\n    private static final String TAG = IdentificationActivity.class.getSimpleName();\r\n    SessionManager sessionManager = null;\r\n    private boolean hasLicense = false;\r\n    private ArrayAdapter<CharSequence> educationAdapter;\r\n    private ArrayAdapter<CharSequence> casteAdapter;\r\n    private ArrayAdapter<CharSequence> economicStatusAdapter;\r\n    UuidGenerator uuidGenerator = new UuidGenerator();\r\n    Calendar today = Calendar.getInstance();\r\n    Calendar dob = Calendar.getInstance();\r\n    Patient patient1 = new Patient();\r\n    private String patientUuid = \"\";\r\n    private String mGender;\r\n    String patientID_edit;\r\n    private int mDOBYear;\r\n    private int mDOBMonth;\r\n    private int mDOBDay;\r\n    private DatePickerDialog mDOBPicker;\r\n    private int mAgeYears = 0;\r\n    private int mAgeMonths = 0;\r\n    private int mAgeDays = 0;\r\n    private String country1, state;\r\n    PatientsDAO patientsDAO = new PatientsDAO();\r\n    EditText mFirstName;\r\n    EditText mMiddleName;\r\n    EditText mLastName;\r\n    EditText mDOB;\r\n    EditText mPhoneNum;\r\n    EditText mAge;\r\n    MaterialAlertDialogBuilder mAgePicker;\r\n    EditText mAddress1;\r\n    EditText mAddress2;\r\n    AutoCompleteTextView mCity;\r\n    EditText mPostal;\r\n    RadioButton mGenderM;\r\n    RadioButton mGenderF;\r\n    EditText mRelationship;\r\n    EditText mOccupation;\r\n    EditText countryText;\r\n    EditText stateText;\r\n    EditText casteText;\r\n    Spinner mCountry;\r\n    Spinner mState;\r\n    EditText economicText;\r\n    EditText educationText;\r\n    TextInputLayout casteLayout;\r\n    TextInputLayout economicLayout;\r\n    TextInputLayout educationLayout;\r\n    LinearLayout countryStateLayout;\r\n    Spinner mCaste;\r\n    Spinner mEducation;\r\n    Spinner mEconomicStatus;\r\n    ImageView mImageView;\r\n    String uuid = \"\";\r\n    PatientDTO patientdto = new PatientDTO();\r\n    ImagesDAO imagesDAO = new ImagesDAO();\r\n    private String mCurrentPhotoPath;\r\n    Context context;\r\n    private String BlockCharacterSet_Others = \"0123456789\\\\@$!=><&^*+€¥£`~\";\r\n    private String BlockCharacterSet_Name = \"\\\\@$!=><&^*+\\\"\\'€¥£`~\";\r\n\r\n    Intent i_privacy;\r\n    String privacy_value;\r\n    private int retainPickerYear;\r\n    private int retainPickerMonth;\r\n    private int retainPickerDate;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_identification);\r\n        setTitle(R.string.title_activity_identification);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\r\n\r\n        i_privacy = getIntent();\r\n        context = IdentificationActivity.this;\r\n        privacy_value = i_privacy.getStringExtra(\"privacy\"); //privacy_accept value retrieved from previous act.\r\n\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onBackPressed();\r\n            }\r\n        });\r\n        sessionManager = new SessionManager(this);\r\n        mFirstName = findViewById(R.id.identification_first_name);\r\n        mFirstName.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Name}); //maxlength 25\r\n\r\n        mMiddleName = findViewById(R.id.identification_middle_name);\r\n        mMiddleName.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Name}); //maxlength 25\r\n\r\n        mLastName = findViewById(R.id.identification_last_name);\r\n        mLastName.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Name}); //maxlength 25\r\n\r\n        mDOB = findViewById(R.id.identification_birth_date_text_view);\r\n        mPhoneNum = findViewById(R.id.identification_phone_number);\r\n\r\n     /*   mPhoneNum.setOnFocusChangeListener(new View.OnFocusChangeListener() {\r\n            @Override\r\n            public void onFocusChange(View v, boolean hasFocus) {\r\n                if(hasFocus) {\r\n                    if(mPhoneNum.getText().toString().trim().length() < 10)\r\n                        mPhoneNum.setError(\"Enter 10 digits\");\r\n                    else\r\n                        mPhoneNum.setError(null);\r\n                }\r\n            }\r\n        });*/\r\n\r\n        mAge = findViewById(R.id.identification_age);\r\n        mAddress1 = findViewById(R.id.identification_address1);\r\n        mAddress1.setFilters(new InputFilter[]{new InputFilter.LengthFilter(50), inputFilter_Name}); //maxlength 50\r\n\r\n        mAddress2 = findViewById(R.id.identification_address2);\r\n        mAddress2.setFilters(new InputFilter[]{new InputFilter.LengthFilter(50), inputFilter_Name}); //maxlength 50\r\n\r\n        mCity = findViewById(R.id.identification_city);\r\n        mCity.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Others}); //maxlength 25\r\n\r\n        stateText = findViewById(R.id.identification_state);\r\n        mState = findViewById(R.id.spinner_state);\r\n        mPostal = findViewById(R.id.identification_postal_code);\r\n        countryText = findViewById(R.id.identification_country);\r\n        mCountry = findViewById(R.id.spinner_country);\r\n        mGenderM = findViewById(R.id.identification_gender_male);\r\n        mGenderF = findViewById(R.id.identification_gender_female);\r\n        mRelationship = findViewById(R.id.identification_relationship);\r\n        mRelationship.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Others}); //maxlength 25\r\n\r\n        mOccupation = findViewById(R.id.identification_occupation);\r\n        mOccupation.setFilters(new InputFilter[]{new InputFilter.LengthFilter(25), inputFilter_Others}); //maxlength 25\r\n\r\n        mCaste = findViewById(R.id.spinner_caste);\r\n        mEducation = findViewById(R.id.spinner_education);\r\n        mEconomicStatus = findViewById(R.id.spinner_economic_status);\r\n        casteText = findViewById(R.id.identification_caste);\r\n        educationText = findViewById(R.id.identification_education);\r\n        economicText = findViewById(R.id.identification_econiomic_status);\r\n\r\n        casteLayout = findViewById(R.id.identification_txtlcaste);\r\n        economicLayout = findViewById(R.id.identification_txtleconomic);\r\n        educationLayout = findViewById(R.id.identification_txtleducation);\r\n        countryStateLayout = findViewById(R.id.identification_llcountry_state);\r\n        mImageView = findViewById(R.id.imageview_id_picture);\r\n//Initialize the local database to store patient information\r\n\r\n        Intent intent = this.getIntent(); // The intent was passed to the activity\r\n        if (intent != null) {\r\n            if (intent.hasExtra(\"patientUuid\")) {\r\n                this.setTitle(R.string.update_patient_identification);\r\n                patientID_edit = intent.getStringExtra(\"patientUuid\");\r\n                patient1.setUuid(patientID_edit);\r\n                setscreen(patientID_edit);\r\n            }\r\n        }\r\n//        if (sessionManager.valueContains(\"licensekey\"))\r\n        if (!sessionManager.getLicenseKey().isEmpty())\r\n            hasLicense = true;\r\n        //Check for license key and load the correct config file\r\n        try {\r\n            JSONObject obj = null;\r\n            if (hasLicense) {\r\n                obj = new JSONObject(Objects.requireNonNullElse\r\n                        (FileUtils.readFileRoot(AppConstants.CONFIG_FILE_NAME, context),\r\n                                String.valueOf(FileUtils.encodeJSON(context, AppConstants.CONFIG_FILE_NAME)))); //Load the config file\r\n            } else {\r\n                obj = new JSONObject(String.valueOf(FileUtils.encodeJSON(this, AppConstants.CONFIG_FILE_NAME)));\r\n            }\r\n\r\n            //Display the fields on the Add Patient screen as per the config file\r\n            if (obj.getBoolean(\"mFirstName\")) {\r\n                mFirstName.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mFirstName.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mMiddleName\")) {\r\n                mMiddleName.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mMiddleName.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mLastName\")) {\r\n                mLastName.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mLastName.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mDOB\")) {\r\n                mDOB.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mDOB.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mPhoneNum\")) {\r\n                mPhoneNum.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mPhoneNum.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mAge\")) {\r\n                mAge.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mAge.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mAddress1\")) {\r\n                mAddress1.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mAddress1.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mAddress2\")) {\r\n                mAddress2.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mAddress2.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mCity\")) {\r\n                mCity.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mCity.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"countryStateLayout\")) {\r\n                countryStateLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                countryStateLayout.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mPostal\")) {\r\n                mPostal.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mPostal.setVisibility(View.GONE);\r\n            }\r\n\r\n            if (obj.getBoolean(\"mGenderM\")) {\r\n                mGenderM.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mGenderM.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mGenderF\")) {\r\n                mGenderF.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mGenderF.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mRelationship\")) {\r\n                mRelationship.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mRelationship.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"mOccupation\")) {\r\n                mOccupation.setVisibility(View.VISIBLE);\r\n            } else {\r\n                mOccupation.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"casteLayout\")) {\r\n                casteLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                casteLayout.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"educationLayout\")) {\r\n                educationLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                educationLayout.setVisibility(View.GONE);\r\n            }\r\n            if (obj.getBoolean(\"economicLayout\")) {\r\n                economicLayout.setVisibility(View.VISIBLE);\r\n            } else {\r\n                economicLayout.setVisibility(View.GONE);\r\n            }\r\n            country1 = obj.getString(\"mCountry\");\r\n            state = obj.getString(\"mState\");\r\n\r\n            if (country1.equalsIgnoreCase(\"India\")) {\r\n                EditTextUtils.setEditTextMaxLength(10, mPhoneNum);\r\n            } else if (country1.equalsIgnoreCase(\"Philippines\")) {\r\n                EditTextUtils.setEditTextMaxLength(11, mPhoneNum);\r\n            }\r\n\r\n        } catch (JSONException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n//            Issue #627\r\n//            added the catch exception to check the config and throwing back to setup activity\r\n            Toast.makeText(getApplicationContext(), \"JsonException\" + e, Toast.LENGTH_LONG).show();\r\n            showAlertDialogButtonClicked(e.toString());\r\n        }\r\n\r\n        //setting the fields when user clicks edit details\r\n        mFirstName.setText(patient1.getFirst_name());\r\n        mMiddleName.setText(patient1.getMiddle_name());\r\n        mLastName.setText(patient1.getLast_name());\r\n        mDOB.setText(patient1.getDate_of_birth());\r\n        mPhoneNum.setText(patient1.getPhone_number());\r\n        mAddress1.setText(patient1.getAddress1());\r\n        mAddress2.setText(patient1.getAddress2());\r\n        mCity.setText(patient1.getCity_village());\r\n        mPostal.setText(patient1.getPostal_code());\r\n        mRelationship.setText(patient1.getSdw());\r\n        mOccupation.setText(patient1.getOccupation());\r\n\r\n        if (patient1.getPatient_photo() != null && !patient1.getPatient_photo().trim().isEmpty())\r\n            mImageView.setImageBitmap(BitmapFactory.decodeFile(patient1.getPatient_photo()));\r\n\r\n        Resources res = getResources();\r\n        ArrayAdapter<CharSequence> countryAdapter = ArrayAdapter.createFromResource(this,\r\n                R.array.countries, R.layout.custom_spinner);\r\n        //countryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        mCountry.setAdapter(countryAdapter);\r\n\r\n//        ArrayAdapter<CharSequence> casteAdapter = ArrayAdapter.createFromResource(this,\r\n//                R.array.caste, R.layout.custom_spinner);\r\n//        //countryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n//        mCaste.setAdapter(casteAdapter);\r\n        try {\r\n            String casteLanguage = \"caste_\" + sessionManager.getAppLanguage();\r\n            int castes = res.getIdentifier(casteLanguage, \"array\", getApplicationContext().getPackageName());\r\n            if (castes != 0) {\r\n                casteAdapter = ArrayAdapter.createFromResource(this,\r\n                        castes, R.layout.custom_spinner);\r\n\r\n            }\r\n            mCaste.setAdapter(casteAdapter);\r\n        } catch (Exception e) {\r\n            Toast.makeText(this, R.string.education_values_missing, Toast.LENGTH_SHORT).show();\r\n            Logger.logE(\"Identification\", \"#648\", e);\r\n        }\r\n        try {\r\n            String economicLanguage = \"economic_\" + sessionManager.getAppLanguage();\r\n            int economics = res.getIdentifier(economicLanguage, \"array\", getApplicationContext().getPackageName());\r\n            if (economics != 0) {\r\n                economicStatusAdapter = ArrayAdapter.createFromResource(this,\r\n                        economics, R.layout.custom_spinner);\r\n            }\r\n            // countryAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n            mEconomicStatus.setAdapter(economicStatusAdapter);\r\n        } catch (Exception e) {\r\n            Toast.makeText(this, R.string.economic_values_missing, Toast.LENGTH_SHORT).show();\r\n            Logger.logE(\"Identification\", \"#648\", e);\r\n        }\r\n        try {\r\n            String educationLanguage = \"education_\" + sessionManager.getAppLanguage();\r\n            int educations = res.getIdentifier(educationLanguage, \"array\", getApplicationContext().getPackageName());\r\n            if (educations != 0) {\r\n                educationAdapter = ArrayAdapter.createFromResource(this,\r\n                        educations, R.layout.custom_spinner);\r\n\r\n            }\r\n            // countryAdapter.setDropDownViewResource(R.layout.custom_spinner);\r\n            mEducation.setAdapter(educationAdapter);\r\n        } catch (Exception e) {\r\n            Toast.makeText(this, R.string.education_values_missing, Toast.LENGTH_SHORT).show();\r\n            Logger.logE(\"Identification\", \"#648\", e);\r\n        }\r\n\r\n\r\n        if (null == patientID_edit || patientID_edit.isEmpty()) {\r\n            generateUuid();\r\n\r\n        }\r\n\r\n        // setting radio button automatically according to the databse when user clicks edit details\r\n        if (patientID_edit != null) {\r\n\r\n            if (patient1.getGender().equals(\"M\")) {\r\n                mGenderM.setChecked(true);\r\n                if (mGenderF.isChecked())\r\n                    mGenderF.setChecked(false);\r\n                Log.v(TAG, \"yes\");\r\n            } else {\r\n                mGenderF.setChecked(true);\r\n                if (mGenderM.isChecked())\r\n                    mGenderM.setChecked(false);\r\n                Log.v(TAG, \"yes\");\r\n            }\r\n\r\n        }\r\n        if (mGenderM.isChecked()) {\r\n            mGender = \"M\";\r\n        } else {\r\n            mGender = \"F\";\r\n        }\r\n        if (patientID_edit != null) {\r\n            // setting country according database\r\n            mCountry.setSelection(countryAdapter.getPosition(String.valueOf(patient1.getCountry())));\r\n\r\n            if (patient1.getEducation_level().equals(getResources().getString(R.string.not_provided)))\r\n                mEducation.setSelection(0);\r\n            else {\r\n                if(sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String education = switch_hi_education_edit(patient1.getEducation_level());\r\n                    mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(education) : 0);\r\n                }\r\n                else if(sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(patient1.getEducation_level()) : 0);\r\n                }\r\n                else {\r\n                    mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(patient1.getEducation_level()) : 0);\r\n                }\r\n            }\r\n                //mEducation.setSelection(educationAdapter != null ? educationAdapter.getPosition(patient1.getEducation_level()) : 0);\r\n            if (educationAdapter == null) {\r\n                Toast.makeText(context, \"Education Level: \" + patient1.getEducation_level(), Toast.LENGTH_LONG).show();\r\n            }\r\n\r\n\r\n            if (patient1.getEconomic_status().equals(getResources().getString(R.string.not_provided)))\r\n                mEconomicStatus.setSelection(0);\r\n            else {\r\n                if(sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String economic = switch_hi_economic_edit(patient1.getEconomic_status());\r\n                    mEconomicStatus.setSelection(economicStatusAdapter.getPosition(economic));\r\n                }\r\n                else if(sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    mEconomicStatus.setSelection(economicStatusAdapter.getPosition(patient1.getEconomic_status()));\r\n                }\r\n                else {\r\n                    mEconomicStatus.setSelection(economicStatusAdapter.getPosition(patient1.getEconomic_status()));\r\n                }\r\n            }\r\n               // mEconomicStatus.setSelection(economicStatusAdapter.getPosition(patient1.getEconomic_status()));\r\n\r\n            if (patient1.getCaste().equals(getResources().getString(R.string.not_provided)))\r\n                mCaste.setSelection(0);\r\n            else {\r\n                if(sessionManager.getAppLanguage().equalsIgnoreCase(\"hi\")) {\r\n                    String caste = switch_hi_caste_edit(patient1.getCaste());\r\n                    mCaste.setSelection(casteAdapter.getPosition(caste));\r\n                }\r\n                else if(sessionManager.getAppLanguage().equalsIgnoreCase(\"or\")) {\r\n                    mCaste.setSelection(casteAdapter.getPosition(patient1.getCaste()));\r\n                }\r\n                else {\r\n                    mCaste.setSelection(casteAdapter.getPosition(patient1.getCaste()));\r\n                }\r\n\r\n            }\r\n                //mCaste.setSelection(casteAdapter.getPosition(patient1.getCaste())); //edit...\r\n        } else {\r\n            mCountry.setSelection(countryAdapter.getPosition(country1));\r\n        }\r\n\r\n        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(this, R.array.state_error, R.layout.custom_spinner);\r\n        //  stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        mState.setAdapter(stateAdapter);\r\n\r\n        mCountry.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                if (i != 0) {\r\n                    String country = adapterView.getItemAtPosition(i).toString();\r\n\r\n                    if (country.matches(\"India\")) {\r\n                        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                                R.array.states_india, R.layout.custom_spinner);\r\n                        // stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        mState.setAdapter(stateAdapter);\r\n                        // setting state according database when user clicks edit details\r\n\r\n                        if (patientID_edit != null)\r\n                            mState.setSelection(stateAdapter.getPosition(String.valueOf(patient1.getState_province())));\r\n                        else\r\n                            mState.setSelection(stateAdapter.getPosition(state));\r\n\r\n                    } else if (country.matches(\"United States\")) {\r\n                        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                                R.array.states_us, R.layout.custom_spinner);\r\n                        // stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        mState.setAdapter(stateAdapter);\r\n\r\n                        if (patientID_edit != null) {\r\n\r\n                            mState.setSelection(stateAdapter.getPosition(String.valueOf(patient1.getState_province())));\r\n                        }\r\n                    } else if (country.matches(\"Philippines\")) {\r\n                        ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                                R.array.states_philippines, R.layout.custom_spinner);\r\n                        stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                        mState.setAdapter(stateAdapter);\r\n\r\n                        if (patientID_edit != null) {\r\n                            mState.setSelection(stateAdapter.getPosition(String.valueOf(patient1.getState_province())));\r\n                        } else {\r\n                            mState.setSelection(stateAdapter.getPosition(\"Bukidnon\"));\r\n                        }\r\n                    }\r\n                } else {\r\n                    ArrayAdapter<CharSequence> stateAdapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                            R.array.state_error, R.layout.custom_spinner);\r\n                    // stateAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    mState.setAdapter(stateAdapter);\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n        mState.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                String state = parent.getItemAtPosition(position).toString();\r\n                if (state.matches(\"Odisha\")) {\r\n                    //Creating the instance of ArrayAdapter containing list of fruit names\r\n                    ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                            R.array.odisha_villages, R.layout.custom_spinner);\r\n                    mCity.setThreshold(1);//will start working from first character\r\n                    mCity.setAdapter(adapter);//setting the adapter data into the AutoCompleteTextView\r\n                } else if (state.matches(\"Bukidnon\")) {\r\n                    ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(IdentificationActivity.this,\r\n                            R.array.bukidnon_villages, R.layout.custom_spinner);\r\n                    mCity.setThreshold(1);//will start working from first character\r\n                    mCity.setAdapter(adapter);//setting the adapter data into the AutoCompleteTextView\r\n                } else {\r\n                    mCity.setAdapter(null);\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        mGenderF.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onRadioButtonClicked(v);\r\n            }\r\n        });\r\n\r\n        mGenderM.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                onRadioButtonClicked(v);\r\n            }\r\n        });\r\n        mImageView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String patientTemp = \"\";\r\n                if (patientUuid.equalsIgnoreCase(\"\")) {\r\n                    patientTemp = patientID_edit;\r\n                } else {\r\n                    patientTemp = patientUuid;\r\n                }\r\n                File filePath = new File(AppConstants.IMAGE_PATH + patientTemp);\r\n                if (!filePath.exists()) {\r\n                    filePath.mkdir();\r\n                }\r\n                Intent cameraIntent = new Intent(IdentificationActivity.this, CameraActivity.class);\r\n\r\n                // cameraIntent.putExtra(CameraActivity.SHOW_DIALOG_MESSAGE, getString(R.string.camera_dialog_default));\r\n                cameraIntent.putExtra(CameraActivity.SET_IMAGE_NAME, patientTemp);\r\n                cameraIntent.putExtra(CameraActivity.SET_IMAGE_PATH, filePath.toString());\r\n                startActivityForResult(cameraIntent, CameraActivity.TAKE_IMAGE);\r\n            }\r\n        });\r\n        mDOBYear = today.get(Calendar.YEAR);\r\n        mDOBMonth = today.get(Calendar.MONTH);\r\n        mDOBDay = today.get(Calendar.DAY_OF_MONTH);\r\n        //DOB is set using an AlertDialog\r\n        Locale.setDefault(Locale.ENGLISH);\r\n\r\n        mDOBPicker = new DatePickerDialog(this, android.R.style.Theme_Holo_Light_Dialog_NoActionBar, new DatePickerDialog.OnDateSetListener() {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                //Set the DOB calendar to the date selected by the user\r\n                dob.set(year, monthOfYear, dayOfMonth);\r\n                mDOB.setError(null);\r\n                mAge.setError(null);\r\n                //Set Maximum date to current date because even after bday is less than current date it goes to check date is set after today\r\n                mDOBPicker.getDatePicker().setMaxDate(System.currentTimeMillis() - 1000);\r\n                Locale.setDefault(Locale.ENGLISH);\r\n                //Formatted so that it can be read the way the user sets\r\n                SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.getDefault());\r\n                dob.set(year, monthOfYear, dayOfMonth);\r\n                String dobString = simpleDateFormat.format(dob.getTime());\r\n                mDOB.setText(dobString);\r\n                mDOBYear = year;\r\n                mDOBMonth = monthOfYear;\r\n                mDOBDay = dayOfMonth;\r\n\r\n                String age = getYear(dob.get(Calendar.YEAR), dob.get(Calendar.MONTH), dob.get(Calendar.DATE), today.get(Calendar.YEAR), today.get(Calendar.MONTH), today.get(Calendar.DATE));\r\n                //get years months days\r\n                String[] frtData = age.split(\"-\");\r\n\r\n                String[] yearData = frtData[0].split(\" \");\r\n                String[] monthData = frtData[1].split(\" \");\r\n                String[] daysData = frtData[2].split(\" \");\r\n\r\n                mAgeYears = Integer.valueOf(yearData[0]);\r\n                mAgeMonths = Integer.valueOf(monthData[1]);\r\n                mAgeDays = Integer.valueOf(daysData[1]);\r\n                mAge.setText(age);\r\n\r\n            }\r\n        }, mDOBYear, mDOBMonth, mDOBDay);\r\n\r\n        //DOB Picker is shown when clicked\r\n        mDOBPicker.getDatePicker().setMaxDate(System.currentTimeMillis());\r\n        mDOB.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                mDOBPicker.show();\r\n            }\r\n        });\r\n        //if patient update then age will be set\r\n        if (patientID_edit != null) {\r\n            mDOB.setText(DateAndTimeUtils.getFormatedDateOfBirthAsView(patient1.getDate_of_birth()));\r\n            //get year month days\r\n            String yrMoDays = DateAndTimeUtils.getAgeInYearMonth(patient1.getDate_of_birth(), context);\r\n\r\n            String[] ymdData = DateAndTimeUtils.getAgeInYearMonth(patient1.getDate_of_birth()).split(\" \");\r\n            mAgeYears = Integer.valueOf(ymdData[0]);\r\n            mAgeMonths = Integer.valueOf(ymdData[1]);\r\n            mAgeDays = Integer.valueOf(ymdData[2]);\r\n            mAge.setText(yrMoDays);\r\n        }\r\n        mAge.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                mAgePicker = new MaterialAlertDialogBuilder(IdentificationActivity.this, R.style.AlertDialogStyle);\r\n                mAgePicker.setTitle(R.string.identification_screen_prompt_age);\r\n                final LayoutInflater inflater = getLayoutInflater();\r\n                View convertView = inflater.inflate(R.layout.dialog_2_numbers_picker, null);\r\n                mAgePicker.setView(convertView);\r\n                NumberPicker yearPicker = convertView.findViewById(R.id.dialog_2_numbers_quantity);\r\n                NumberPicker monthPicker = convertView.findViewById(R.id.dialog_2_numbers_unit);\r\n                NumberPicker dayPicker = convertView.findViewById(R.id.dialog_3_numbers_unit);\r\n                dayPicker.setVisibility(View.VISIBLE);\r\n\r\n                final TextView middleText = convertView.findViewById(R.id.dialog_2_numbers_text);\r\n                final TextView endText = convertView.findViewById(R.id.dialog_2_numbers_text_2);\r\n                final TextView dayTv = convertView.findViewById(R.id.dialog_2_numbers_text_3);\r\n                dayPicker.setVisibility(View.VISIBLE);\r\n\r\n                int totalDays = today.getActualMaximum(Calendar.DAY_OF_MONTH);\r\n                dayTv.setText(getString(R.string.days));\r\n                middleText.setText(getString(R.string.identification_screen_picker_years));\r\n                endText.setText(getString(R.string.identification_screen_picker_months));\r\n\r\n\r\n                yearPicker.setMinValue(0);\r\n                yearPicker.setMaxValue(100);\r\n                monthPicker.setMinValue(0);\r\n                monthPicker.setMaxValue(12);\r\n\r\n                dayPicker.setMinValue(0);\r\n                dayPicker.setMaxValue(31);\r\n\r\n                EditText yearText = yearPicker.findViewById(Resources.getSystem().getIdentifier(\"numberpicker_input\", \"id\", \"android\"));\r\n                EditText monthText = monthPicker.findViewById(Resources.getSystem().getIdentifier(\"numberpicker_input\", \"id\", \"android\"));\r\n                EditText dayText = dayPicker.findViewById(Resources.getSystem().getIdentifier(\"numberpicker_input\", \"id\", \"android\"));\r\n\r\n\r\n                yearPicker.setValue(mAgeYears);\r\n                monthPicker.setValue(mAgeMonths);\r\n                dayPicker.setValue(mAgeDays);\r\n\r\n                //year\r\n                EditTextUtils.returnEditextValues(new IReturnValues() {\r\n                    @Override\r\n                    public void onReturnValue(String value) {\r\n                        mAgeYears = Integer.valueOf(value);\r\n                    }\r\n                }, yearText);\r\n\r\n                //month\r\n                EditTextUtils.returnEditextValues(new IReturnValues() {\r\n                    @Override\r\n                    public void onReturnValue(String value) {\r\n                        mAgeMonths = Integer.valueOf(value);\r\n                    }\r\n                }, monthText);\r\n\r\n                //day\r\n                EditTextUtils.returnEditextValues(new IReturnValues() {\r\n                    @Override\r\n                    public void onReturnValue(String value) {\r\n                        mAgeDays = Integer.valueOf(value);\r\n                    }\r\n                }, dayText);\r\n                mAgePicker.setPositiveButton(R.string.generic_ok, (dialog, which) -> {\r\n                    String ageString = mAgeYears + getString(R.string.identification_screen_text_years) + \" - \" +\r\n                            mAgeMonths + getString(R.string.identification_screen_text_months) + \" - \" +\r\n                            mAgeDays + getString(R.string.days);\r\n                    mAge.setText(ageString);\r\n\r\n\r\n                    Calendar calendar = Calendar.getInstance();\r\n                    int curYear = calendar.get(Calendar.YEAR);\r\n                    //int birthYear = curYear - yearPicker.getValue();\r\n                    int birthYear = curYear - mAgeYears;\r\n                    int curMonth = calendar.get(Calendar.MONTH);\r\n                    //int birthMonth = curMonth - monthPicker.getValue();\r\n                    int birthMonth = curMonth - mAgeMonths;\r\n                    //int birthDay = calendar.get(Calendar.DAY_OF_MONTH) - dayPicker.getValue();\r\n                    int birthDay = calendar.get(Calendar.DAY_OF_MONTH) - mAgeDays;\r\n                    mDOBYear = birthYear;\r\n                    mDOBMonth = birthMonth;\r\n\r\n                    if (birthDay < 0) {\r\n                        mDOBDay = birthDay + totalDays - 1;\r\n                        mDOBMonth--;\r\n\r\n                    } else {\r\n                        mDOBDay = birthDay;\r\n                    }\r\n                    Locale.setDefault(Locale.ENGLISH);\r\n                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat(\"dd MMMM yyyy\", Locale.getDefault());\r\n                    dob.set(mDOBYear, mDOBMonth, mDOBDay);\r\n                    String dobString = simpleDateFormat.format(dob.getTime());\r\n                    mDOB.setText(dobString);\r\n                    mDOBPicker.updateDate(mDOBYear, mDOBMonth, mDOBDay);\r\n                    dialog.dismiss();\r\n                });\r\n                mAgePicker.setNegativeButton(R.string.generic_cancel, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n                AlertDialog alertDialog = mAgePicker.show();\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n            }\r\n        });\r\n        FloatingActionButton fab = findViewById(R.id.fab);\r\n        fab.setOnClickListener(v -> {\r\n            if (patientID_edit != null) {\r\n                onPatientUpdateClicked(patient1);\r\n            } else {\r\n                onPatientCreateClicked();\r\n            }\r\n        });\r\n    }\r\n\r\n    public String getYear(int syear, int smonth, int sday, int eyear, int emonth, int eday) {\r\n        String calculatedAge = null;\r\n        int resmonth;\r\n        int resyear;\r\n        int resday;\r\n\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\r\n\r\n            LocalDate today = LocalDate.now();\r\n            LocalDate birthday = LocalDate.of(syear, smonth + 1, sday);\r\n\r\n            Period p = Period.between(birthday, today);\r\n            System.out.println(p.getDays());\r\n            System.out.println(p.getMonths());\r\n            System.out.println(p.getYears());\r\n            calculatedAge = p.getYears() + \" years  - \" + p.getMonths() + \" month - \" + p.getDays() + \" days\";\r\n\r\n\r\n        } else {\r\n\r\n            //calculating year\r\n            resyear = eyear - syear;\r\n\r\n            //calculating month\r\n            if (emonth >= smonth) {\r\n                resmonth = emonth - smonth;\r\n            } else {\r\n                resmonth = emonth - smonth;\r\n                resmonth = 12 + resmonth;\r\n                resyear--;\r\n            }\r\n\r\n            //calculating date\r\n            if (eday >= sday) {\r\n                resday = eday - sday;\r\n            } else {\r\n                resday = eday - sday;\r\n                resday = 30 + resday;\r\n                if (resmonth == 0) {\r\n                    resmonth = 11;\r\n                    resyear--;\r\n                } else {\r\n                    resmonth--;\r\n                }\r\n            }\r\n\r\n            //displaying error if calculated age is negative\r\n            if (resday < 0 || resmonth < 0 || resyear < 0) {\r\n                Toast.makeText(this, \"Current Date must be greater than Date of Birth\", Toast.LENGTH_LONG).show();\r\n                mDOB.setError(getString(R.string.identification_screen_error_dob));\r\n                mAge.setError(getString(R.string.identification_screen_error_age));\r\n            } else {\r\n                // t1.setText(\"Age: \" + resyear + \" years /\" + resmonth + \" months/\" + resday + \" days\");\r\n\r\n                calculatedAge = resyear + \" years - \" + resmonth + \" months - \" + resday + \" days\";\r\n            }\r\n        }\r\n\r\n        return calculatedAge != null ? calculatedAge : \" \";\r\n    }\r\n\r\n    public void onRadioButtonClicked(View view) {\r\n        boolean checked = ((RadioButton) view).isChecked();\r\n        switch (view.getId()) {\r\n            case R.id.identification_gender_male:\r\n                if (checked)\r\n                    mGender = \"M\";\r\n                Log.v(TAG, \"gender:\" + mGender);\r\n                break;\r\n            case R.id.identification_gender_female:\r\n                if (checked)\r\n                    mGender = \"F\";\r\n                Log.v(TAG, \"gender:\" + mGender);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private InputFilter inputFilter_Name = new InputFilter() { //filter input for name fields\r\n        @Override\r\n        public CharSequence filter(CharSequence charSequence, int i, int i1, Spanned spanned, int i2, int i3) {\r\n            if (charSequence != null && BlockCharacterSet_Name.contains((\"\" + charSequence))) {\r\n                return \"\";\r\n            }\r\n            return null;\r\n        }\r\n    };\r\n\r\n    private InputFilter inputFilter_Others = new InputFilter() { //filter input for all other fields\r\n        @Override\r\n        public CharSequence filter(CharSequence charSequence, int i, int i1, Spanned spanned, int i2, int i3) {\r\n            if (charSequence != null && BlockCharacterSet_Others.contains((\"\" + charSequence))) {\r\n                return \"\";\r\n            }\r\n            return null;\r\n        }\r\n    };\r\n\r\n    public void generateUuid() {\r\n\r\n        patientUuid = uuidGenerator.UuidGenerator();\r\n\r\n    }\r\n\r\n    // This method is for setting the screen with existing values in database whenn user clicks edit details\r\n    private void setscreen(String str) {\r\n        SQLiteDatabase db = AppConstants.inteleHealthDatabaseHelper.getWriteDb();\r\n\r\n        String patientSelection = \"uuid=?\";\r\n        String[] patientArgs = {str};\r\n        String[] patientColumns = {\"uuid\", \"first_name\", \"middle_name\", \"last_name\",\r\n                \"date_of_birth\", \"address1\", \"address2\", \"city_village\", \"state_province\",\r\n                \"postal_code\", \"country\", \"phone_number\", \"gender\", \"sdw\", \"occupation\", \"patient_photo\",\r\n                \"economic_status\", \"education_status\", \"caste\"};\r\n        Cursor idCursor = db.query(\"tbl_patient\", patientColumns, patientSelection, patientArgs, null, null, null);\r\n        if (idCursor.moveToFirst()) {\r\n            do {\r\n                patient1.setUuid(idCursor.getString(idCursor.getColumnIndexOrThrow(\"uuid\")));\r\n                patient1.setFirst_name(idCursor.getString(idCursor.getColumnIndexOrThrow(\"first_name\")));\r\n                patient1.setMiddle_name(idCursor.getString(idCursor.getColumnIndexOrThrow(\"middle_name\")));\r\n                patient1.setLast_name(idCursor.getString(idCursor.getColumnIndexOrThrow(\"last_name\")));\r\n                patient1.setDate_of_birth(idCursor.getString(idCursor.getColumnIndexOrThrow(\"date_of_birth\")));\r\n                patient1.setAddress1(idCursor.getString(idCursor.getColumnIndexOrThrow(\"address1\")));\r\n                patient1.setAddress2(idCursor.getString(idCursor.getColumnIndexOrThrow(\"address2\")));\r\n                patient1.setCity_village(idCursor.getString(idCursor.getColumnIndexOrThrow(\"city_village\")));\r\n                patient1.setState_province(idCursor.getString(idCursor.getColumnIndexOrThrow(\"state_province\")));\r\n                patient1.setPostal_code(idCursor.getString(idCursor.getColumnIndexOrThrow(\"postal_code\")));\r\n                patient1.setCountry(idCursor.getString(idCursor.getColumnIndexOrThrow(\"country\")));\r\n                patient1.setPhone_number(idCursor.getString(idCursor.getColumnIndexOrThrow(\"phone_number\")));\r\n                patient1.setGender(idCursor.getString(idCursor.getColumnIndexOrThrow(\"gender\")));\r\n                patient1.setSdw(idCursor.getString(idCursor.getColumnIndexOrThrow(\"sdw\")));\r\n                patient1.setOccupation(idCursor.getString(idCursor.getColumnIndexOrThrow(\"occupation\")));\r\n                patient1.setPatient_photo(idCursor.getString(idCursor.getColumnIndexOrThrow(\"patient_photo\")));\r\n\r\n            } while (idCursor.moveToNext());\r\n            idCursor.close();\r\n        }\r\n        String patientSelection1 = \"patientuuid = ?\";\r\n        String[] patientArgs1 = {str};\r\n        String[] patientColumns1 = {\"value\", \"person_attribute_type_uuid\"};\r\n        final Cursor idCursor1 = db.query(\"tbl_patient_attribute\", patientColumns1, patientSelection1, patientArgs1, null, null, null);\r\n        String name = \"\";\r\n        if (idCursor1.moveToFirst()) {\r\n            do {\r\n                try {\r\n                    name = patientsDAO.getAttributesName(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"person_attribute_type_uuid\")));\r\n                } catch (DAOException e) {\r\n                    FirebaseCrashlytics.getInstance().recordException(e);\r\n                }\r\n\r\n                if (name.equalsIgnoreCase(\"caste\")) {\r\n                    patient1.setCaste(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Telephone Number\")) {\r\n                    patient1.setPhone_number(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Education Level\")) {\r\n                    patient1.setEducation_level(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Economic Status\")) {\r\n                    patient1.setEconomic_status(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"occupation\")) {\r\n                    patient1.setOccupation(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n                if (name.equalsIgnoreCase(\"Son/wife/daughter\")) {\r\n                    patient1.setSdw(idCursor1.getString(idCursor1.getColumnIndexOrThrow(\"value\")));\r\n                }\r\n\r\n            } while (idCursor1.moveToNext());\r\n        }\r\n        idCursor1.close();\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        MaterialAlertDialogBuilder alertdialogBuilder = new MaterialAlertDialogBuilder(this);\r\n        alertdialogBuilder.setMessage(R.string.are_you_want_go_back);\r\n        alertdialogBuilder.setPositiveButton(R.string.generic_yes, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialogInterface, int i) {\r\n                Intent i_back = new Intent(getApplicationContext(), HomeActivity.class);\r\n                startActivity(i_back);\r\n            }\r\n        });\r\n        alertdialogBuilder.setNegativeButton(R.string.generic_no, null);\r\n\r\n        AlertDialog alertDialog = alertdialogBuilder.create();\r\n        alertDialog.show();\r\n\r\n        Button positiveButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_POSITIVE);\r\n        Button negativeButton = alertDialog.getButton(android.app.AlertDialog.BUTTON_NEGATIVE);\r\n\r\n        positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n        negativeButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n        //negativeButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n    }\r\n\r\n    public void showAlertDialogButtonClicked(String errorMessage) {\r\n\r\n        MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(this);\r\n        alertDialogBuilder.setTitle(\"Config Error\");\r\n        alertDialogBuilder.setMessage(errorMessage);\r\n        alertDialogBuilder.setNeutralButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                finish();\r\n                Intent i = new Intent(IdentificationActivity.this, SetupActivity.class);\r\n                i.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);// This flag ensures all activities on top of the CloseAllViewsDemo are cleared.\r\n                startActivity(i);\r\n            }\r\n        });\r\n        AlertDialog alertDialog = alertDialogBuilder.create();\r\n        alertDialog.show();\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        Log.v(TAG, \"Result Received\");\r\n        if (requestCode == CameraActivity.TAKE_IMAGE) {\r\n            Log.v(TAG, \"Request Code \" + CameraActivity.TAKE_IMAGE);\r\n            if (resultCode == RESULT_OK) {\r\n                Log.i(TAG, \"Result OK\");\r\n                mCurrentPhotoPath = data.getStringExtra(\"RESULT\");\r\n                Log.v(\"IdentificationActivity\", mCurrentPhotoPath);\r\n\r\n                Glide.with(this)\r\n                        .load(new File(mCurrentPhotoPath))\r\n                        .thumbnail(0.25f)\r\n                        .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                        .skipMemoryCache(true)\r\n                        .into(mImageView);\r\n            }\r\n        }\r\n    }\r\n\r\n    public void onPatientCreateClicked() {\r\n        PatientsDAO patientsDAO = new PatientsDAO();\r\n        PatientAttributesDTO patientAttributesDTO = new PatientAttributesDTO();\r\n        List<PatientAttributesDTO> patientAttributesDTOList = new ArrayList<>();\r\n        uuid = UUID.randomUUID().toString();\r\n\r\n        patientdto.setUuid(uuid);\r\n        Gson gson = new Gson();\r\n\r\n        boolean cancel = false;\r\n        View focusView = null;\r\n\r\n\r\n        if (dob.equals(\"\") || dob.toString().equals(\"\")) {\r\n            if (dob.after(today)) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_dob);\r\n                //alertDialogBuilder.setMessage(getString(R.string.identification_dialog_date_error));\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n\r\n                mDOBPicker.show();\r\n                alertDialog.show();\r\n\r\n                Button postiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                postiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                // postiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (mPhoneNum.getText().toString().trim().length() > 0) {\r\n            if (mPhoneNum.getText().toString().trim().length() < 10) {\r\n                mPhoneNum.requestFocus();\r\n                mPhoneNum.setError(getString(R.string.enter_10_digits));\r\n                return;\r\n            }\r\n        }\r\n\r\n   /*     ArrayList<EditText> values = new ArrayList<>();\r\n        values.add(mFirstName);\r\n        values.add(mMiddleName);\r\n        values.add(mLastName);\r\n        values.add(mDOB);\r\n        values.add(mPhoneNum);\r\n        values.add(mAddress1);\r\n        values.add(mAddress2);\r\n        values.add(mCity);\r\n        values.add(mPostal);\r\n        values.add(mRelationship);\r\n        values.add(mOccupation);*/\r\n\r\n/*\r\n        if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n            MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n            alertDialogBuilder.setTitle(R.string.error);\r\n            alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n            alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    dialog.dismiss();\r\n                }\r\n            });\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n            alertDialog.show();\r\n\r\n            Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n            positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n            positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n            return;\r\n        }\r\n*/\r\n\r\n        if (!mFirstName.getText().toString().equals(\"\") && !mLastName.getText().toString().equals(\"\")\r\n                && !mCity.getText().toString().equals(\"\") && !countryText.getText().toString().equals(\"\") &&\r\n                !stateText.getText().toString().equals(\"\") && !mDOB.getText().toString().equals(\"\") && !mAge.getText().toString().equals(\"\") && (mGenderF.isChecked() || mGenderM.isChecked())) {\r\n\r\n            Log.v(TAG, \"Result\");\r\n\r\n        } else {\r\n            if (mFirstName.getText().toString().equals(\"\")) {\r\n                mFirstName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mLastName.getText().toString().equals(\"\")) {\r\n                mLastName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mDOB.getText().toString().equals(\"\")) {\r\n                mDOB.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mAge.getText().toString().equals(\"\")) {\r\n                mAge.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mCity.getText().toString().equals(\"\")) {\r\n                mCity.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                alertDialog.show();\r\n\r\n                Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n\r\n            }\r\n\r\n\r\n            Toast.makeText(IdentificationActivity.this, R.string.identification_screen_required_fields, Toast.LENGTH_LONG).show();\r\n            return;\r\n        }\r\n\r\n        if (mCountry.getSelectedItemPosition() == 0) {\r\n            countryText.setError(getString(R.string.error_field_required));\r\n            focusView = countryText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            countryText.setError(null);\r\n        }\r\n\r\n\r\n        if (mState.getSelectedItemPosition() == 0) {\r\n            stateText.setError(getString(R.string.error_field_required));\r\n            focusView = stateText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            stateText.setError(null);\r\n        }\r\n        if (cancel) {\r\n            focusView.requestFocus();\r\n        } else {\r\n\r\n            patientdto.setFirstname(StringUtils.getValue(mFirstName.getText().toString()));\r\n            patientdto.setMiddlename(StringUtils.getValue(mMiddleName.getText().toString()));\r\n            patientdto.setLastname(StringUtils.getValue(mLastName.getText().toString()));\r\n            patientdto.setPhonenumber(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientdto.setGender(StringUtils.getValue(mGender));\r\n            patientdto.setDateofbirth(DateAndTimeUtils.getFormatedDateOfBirth(StringUtils.getValue(mDOB.getText().toString())));\r\n            patientdto.setAddress1(StringUtils.getValue(mAddress1.getText().toString()));\r\n            patientdto.setAddress2(StringUtils.getValue(mAddress2.getText().toString()));\r\n            patientdto.setCityvillage(StringUtils.getValue(mCity.getText().toString()));\r\n            patientdto.setPostalcode(StringUtils.getValue(mPostal.getText().toString()));\r\n            patientdto.setCountry(StringUtils.getValue(mCountry.getSelectedItem().toString()));\r\n            patientdto.setPatientPhoto(mCurrentPhotoPath);\r\n//          patientdto.setEconomic(StringUtils.getValue(m));\r\n            patientdto.setStateprovince(StringUtils.getValue(mState.getSelectedItem().toString()));\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"caste\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mCaste));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Telephone Number\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Son/wife/daughter\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mRelationship.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"occupation\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mOccupation.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Economic Status\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEconomicStatus));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Education Level\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEducation));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"ProfileImageTimestamp\"));\r\n            patientAttributesDTO.setValue(AppConstants.dateAndTimeUtils.currentDateTime());\r\n\r\n            //House Hold Registration\r\n            if (sessionManager.getHouseholdUuid().equals(\"\")){\r\n\r\n                String HouseHold_UUID = UUID.randomUUID().toString();\r\n                sessionManager.setHouseholdUuid(HouseHold_UUID);\r\n\r\n                patientAttributesDTO = new PatientAttributesDTO();\r\n                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n                patientAttributesDTO.setPatientuuid(uuid);\r\n                patientAttributesDTO.setPersonAttributeTypeUuid\r\n                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n                patientAttributesDTO.setValue(HouseHold_UUID);\r\n\r\n            } else {\r\n\r\n                String HouseHold_UUID = sessionManager.getHouseholdUuid();\r\n                patientAttributesDTO = new PatientAttributesDTO();\r\n                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n                patientAttributesDTO.setPatientuuid(uuid);\r\n                patientAttributesDTO.setPersonAttributeTypeUuid\r\n                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n                patientAttributesDTO.setValue(HouseHold_UUID);\r\n\r\n            }\r\n\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n            Logger.logD(TAG, \"PatientAttribute list size\" + patientAttributesDTOList.size());\r\n            patientdto.setPatientAttributesDTOList(patientAttributesDTOList);\r\n            patientdto.setSyncd(false);\r\n            Logger.logD(\"patient json : \", \"Json : \" + gson.toJson(patientdto, PatientDTO.class));\r\n\r\n        }\r\n\r\n        try {\r\n            Logger.logD(TAG, \"insertpatinet \");\r\n            boolean isPatientInserted = patientsDAO.insertPatientToDB(patientdto, uuid);\r\n            boolean isPatientImageInserted = imagesDAO.insertPatientProfileImages(mCurrentPhotoPath, uuid);\r\n\r\n            if (NetworkConnection.isOnline(getApplication())) {\r\n//                patientApiCall();\r\n//                frameJson();\r\n\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.patient_data_upload),\r\n//                        getString(R.string.uploading) + patientdto.getFirstname() + \"\" + patientdto.getLastname() +\r\n//                                \"'s data\", 2, getApplication());\r\n\r\n                SyncDAO syncDAO = new SyncDAO();\r\n                ImagesPushDAO imagesPushDAO = new ImagesPushDAO();\r\n                boolean push = syncDAO.pushDataApi();\r\n                boolean pushImage = imagesPushDAO.patientProfileImagesPush();\r\n\r\n//                if (push)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s data upload complete.\", 2, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s data not uploaded.\", 2, getApplication());\r\n\r\n//                if (pushImage)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s Image upload complete.\", 4, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirstname() + \"\" + patientdto.getLastname() + \"'s Image not complete.\", 4, getApplication());\r\n\r\n\r\n//\r\n            }\r\n//            else {\r\n//                AppConstants.notificationUtils.showNotifications(getString(R.string.patient_data_failed), getString(R.string.check_your_connectivity), 2, IdentificationActivity.this);\r\n//            }\r\n            if (isPatientInserted && isPatientImageInserted) {\r\n                Logger.logD(TAG, \"inserted\");\r\n                Intent i = new Intent(getApplication(), PatientDetailActivity.class);\r\n                i.putExtra(\"patientUuid\", uuid);\r\n                i.putExtra(\"patientName\", patientdto.getFirstname() + \" \" + patientdto.getLastname());\r\n                i.putExtra(\"tag\", \"newPatient\");\r\n                i.putExtra(\"privacy\", privacy_value);\r\n                i.putExtra(\"hasPrescription\", \"false\");\r\n                Log.d(TAG, \"Privacy Value on (Identification): \" + privacy_value); //privacy value transferred to PatientDetail activity.\r\n                i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                getApplication().startActivity(i);\r\n            } else {\r\n                Toast.makeText(IdentificationActivity.this, \"Error of adding the data\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } catch (DAOException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n        }\r\n\r\n    }\r\n\r\n    public void onPatientUpdateClicked(Patient patientdto) {\r\n        PatientsDAO patientsDAO = new PatientsDAO();\r\n        PatientAttributesDTO patientAttributesDTO = new PatientAttributesDTO();\r\n        List<PatientAttributesDTO> patientAttributesDTOList = new ArrayList<>();\r\n        uuid = patientdto.getUuid();\r\n\r\n        patientdto.setUuid(uuid);\r\n        Gson gson = new Gson();\r\n\r\n        boolean cancel = false;\r\n        View focusView = null;\r\n\r\n\r\n        if (dob.equals(\"\") || dob.toString().equals(\"\")) {\r\n            if (dob.after(today)) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_dob);\r\n                //alertDialogBuilder.setMessage(getString(R.string.identification_dialog_date_error));\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n\r\n                mDOBPicker.show();\r\n                alertDialog.show();\r\n\r\n                Button postiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                postiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                // postiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (mPhoneNum.getText().toString().trim().length() > 0) {\r\n            if (mPhoneNum.getText().toString().trim().length() < 10) {\r\n                mPhoneNum.requestFocus();\r\n                mPhoneNum.setError(\"Enter 10 digits\");\r\n                return;\r\n            }\r\n        }\r\n\r\n       /* ArrayList<EditText> values = new ArrayList<>();\r\n        values.add(mFirstName);\r\n        values.add(mMiddleName);\r\n        values.add(mLastName);\r\n        values.add(mDOB);\r\n        values.add(mPhoneNum);\r\n        values.add(mAddress1);\r\n        values.add(mAddress2);\r\n        values.add(mCity);\r\n        values.add(mPostal);\r\n        values.add(mRelationship);\r\n        values.add(mOccupation);*/\r\n\r\n/*\r\n        if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n            MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n            alertDialogBuilder.setTitle(R.string.error);\r\n            alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n            alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                @Override\r\n                public void onClick(DialogInterface dialog, int which) {\r\n                    dialog.dismiss();\r\n                }\r\n            });\r\n            AlertDialog alertDialog = alertDialogBuilder.create();\r\n            alertDialog.show();\r\n\r\n            Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n            positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n            positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n\r\n            return;\r\n        }\r\n*/\r\n\r\n        if (!mFirstName.getText().toString().equals(\"\") && !mLastName.getText().toString().equals(\"\")\r\n                && !mCity.getText().toString().equals(\"\") && !countryText.getText().toString().equals(\"\") &&\r\n                !stateText.getText().toString().equals(\"\") && !mDOB.getText().toString().equals(\"\") && !mAge.getText().toString().equals(\"\") && (mGenderF.isChecked() || mGenderM.isChecked())) {\r\n\r\n            Log.v(TAG, \"Result\");\r\n\r\n        } else {\r\n            if (mFirstName.getText().toString().equals(\"\")) {\r\n                mFirstName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mLastName.getText().toString().equals(\"\")) {\r\n                mLastName.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mDOB.getText().toString().equals(\"\")) {\r\n                mDOB.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mAge.getText().toString().equals(\"\")) {\r\n                mAge.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (mCity.getText().toString().equals(\"\")) {\r\n                mCity.setError(getString(R.string.error_field_required));\r\n            }\r\n\r\n            if (!mGenderF.isChecked() && !mGenderM.isChecked()) {\r\n                MaterialAlertDialogBuilder alertDialogBuilder = new MaterialAlertDialogBuilder(IdentificationActivity.this);\r\n                alertDialogBuilder.setTitle(R.string.error);\r\n                alertDialogBuilder.setMessage(R.string.identification_screen_dialog_error_gender);\r\n                alertDialogBuilder.setPositiveButton(R.string.generic_ok, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n                AlertDialog alertDialog = alertDialogBuilder.create();\r\n                alertDialog.show();\r\n\r\n                Button positiveButton = alertDialog.getButton(AlertDialog.BUTTON_POSITIVE);\r\n                positiveButton.setTextColor(getResources().getColor(R.color.colorPrimary));\r\n                //positiveButton.setTypeface(Typeface.DEFAULT, Typeface.BOLD);\r\n                IntelehealthApplication.setAlertDialogCustomTheme(IdentificationActivity.this, alertDialog);\r\n\r\n            }\r\n\r\n\r\n            Toast.makeText(IdentificationActivity.this, R.string.identification_screen_required_fields, Toast.LENGTH_LONG).show();\r\n            return;\r\n        }\r\n\r\n        if (mCountry.getSelectedItemPosition() == 0) {\r\n            countryText.setError(getString(R.string.error_field_required));\r\n            focusView = countryText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            countryText.setError(null);\r\n        }\r\n\r\n\r\n        if (mState.getSelectedItemPosition() == 0) {\r\n            stateText.setError(getString(R.string.error_field_required));\r\n            focusView = stateText;\r\n            cancel = true;\r\n            return;\r\n        } else {\r\n            stateText.setError(null);\r\n        }\r\n        if (cancel) {\r\n            focusView.requestFocus();\r\n        } else {\r\n            if (mCurrentPhotoPath == null)\r\n                mCurrentPhotoPath = patientdto.getPatient_photo();\r\n\r\n            patientdto.setFirst_name(StringUtils.getValue(mFirstName.getText().toString()));\r\n            patientdto.setMiddle_name(StringUtils.getValue(mMiddleName.getText().toString()));\r\n            patientdto.setLast_name(StringUtils.getValue(mLastName.getText().toString()));\r\n            patientdto.setPhone_number(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientdto.setGender(StringUtils.getValue(mGender));\r\n            patientdto.setDate_of_birth(DateAndTimeUtils.getFormatedDateOfBirth(StringUtils.getValue(mDOB.getText().toString())));\r\n            patientdto.setAddress1(StringUtils.getValue(mAddress1.getText().toString()));\r\n            patientdto.setAddress2(StringUtils.getValue(mAddress2.getText().toString()));\r\n            patientdto.setCity_village(StringUtils.getValue(mCity.getText().toString()));\r\n            patientdto.setPostal_code(StringUtils.getValue(mPostal.getText().toString()));\r\n            patientdto.setCountry(StringUtils.getValue(mCountry.getSelectedItem().toString()));\r\n            patientdto.setPatient_photo(mCurrentPhotoPath);\r\n//                patientdto.setEconomic(StringUtils.getValue(m));\r\n            patientdto.setState_province(StringUtils.getValue(patientdto.getState_province()));\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"caste\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mCaste));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Telephone Number\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mPhoneNum.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Son/wife/daughter\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mRelationship.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"occupation\"));\r\n            patientAttributesDTO.setValue(StringUtils.getValue(mOccupation.getText().toString()));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Economic Status\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEconomicStatus));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"Education Level\"));\r\n            patientAttributesDTO.setValue(StringUtils.getProvided(mEducation));\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTO = new PatientAttributesDTO();\r\n            patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n            patientAttributesDTO.setPatientuuid(uuid);\r\n            patientAttributesDTO.setPersonAttributeTypeUuid(patientsDAO.getUuidForAttribute(\"ProfileImageTimestamp\"));\r\n            patientAttributesDTO.setValue(AppConstants.dateAndTimeUtils.currentDateTime());\r\n\r\n\r\n            //House Hold Registration\r\n            if (sessionManager.getHouseholdUuid().equals(\"\")){\r\n\r\n                String HouseHold_UUID = UUID.randomUUID().toString();\r\n                sessionManager.setHouseholdUuid(HouseHold_UUID);\r\n\r\n                patientAttributesDTO = new PatientAttributesDTO();\r\n                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n                patientAttributesDTO.setPatientuuid(uuid);\r\n                patientAttributesDTO.setPersonAttributeTypeUuid\r\n                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n                patientAttributesDTO.setValue(HouseHold_UUID);\r\n\r\n            } else {\r\n\r\n                String HouseHold_UUID = sessionManager.getHouseholdUuid();\r\n                patientAttributesDTO = new PatientAttributesDTO();\r\n                patientAttributesDTO.setUuid(UUID.randomUUID().toString());\r\n                patientAttributesDTO.setPatientuuid(uuid);\r\n                patientAttributesDTO.setPersonAttributeTypeUuid\r\n                        (patientsDAO.getUuidForAttribute(\"householdID\"));\r\n                patientAttributesDTO.setValue(HouseHold_UUID);\r\n\r\n            }\r\n//          patientAttributesDTOList.add(patientAttributesDTO);\r\n\r\n            patientAttributesDTOList.add(patientAttributesDTO);\r\n            Logger.logD(TAG, \"PatientAttribute list size\" + patientAttributesDTOList.size());\r\n            //patientdto.setPatientAttributesDTOList(patientAttributesDTOList);\r\n\r\n            Logger.logD(\"patient json onPatientUpdateClicked : \", \"Json : \" + gson.toJson(patientdto, Patient.class));\r\n\r\n        }\r\n        try {\r\n            Logger.logD(TAG, \"update \");\r\n            boolean isPatientUpdated = patientsDAO.updatePatientToDB(patientdto, uuid, patientAttributesDTOList);\r\n            boolean isPatientImageUpdated = imagesDAO.updatePatientProfileImages(mCurrentPhotoPath, uuid);\r\n\r\n            if (NetworkConnection.isOnline(getApplication())) {\r\n                SyncDAO syncDAO = new SyncDAO();\r\n                ImagesPushDAO imagesPushDAO = new ImagesPushDAO();\r\n                boolean ispush = syncDAO.pushDataApi();\r\n                boolean isPushImage = imagesPushDAO.patientProfileImagesPush();\r\n\r\n//                if (ispush)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s data upload complete.\", 2, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s data not uploaded.\", 2, getApplication());\r\n\r\n//                if (isPushImage)\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s Image upload complete.\", 4, getApplication());\r\n//                else\r\n//                    AppConstants.notificationUtils.DownloadDone(getString(R.string.patient_data_upload), \"\" + patientdto.getFirst_name() + \"\" + patientdto.getLast_name() + \"'s Image not complete.\", 4, getApplication());\r\n\r\n            }\r\n            if (isPatientUpdated && isPatientImageUpdated) {\r\n                Logger.logD(TAG, \"updated\");\r\n                Intent i = new Intent(getApplication(), PatientDetailActivity.class);\r\n                i.putExtra(\"patientUuid\", uuid);\r\n                i.putExtra(\"patientName\", patientdto.getFirst_name() + \" \" + patientdto.getLast_name());\r\n                i.putExtra(\"tag\", \"newPatient\");\r\n                i.putExtra(\"hasPrescription\", \"false\");\r\n                i.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);\r\n                getApplication().startActivity(i);\r\n            }\r\n        } catch (DAOException e) {\r\n            FirebaseCrashlytics.getInstance().recordException(e);\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/app/intelehealth/client/activities/identificationActivity/IdentificationActivity.java	(revision db4b970cdda541301d033834f0099baa4d882c5d)
+++ app/src/main/java/app/intelehealth/client/activities/identificationActivity/IdentificationActivity.java	(date 1614582166244)
@@ -14,6 +14,7 @@
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
 import com.google.android.material.textfield.TextInputLayout;
 
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.appcompat.widget.Toolbar;
@@ -82,6 +83,7 @@
 import app.intelehealth.client.utilities.NetworkConnection;
 import app.intelehealth.client.utilities.StringUtils;
 import app.intelehealth.client.utilities.exception.DAOException;
+import in.balakrishnan.easycam.CameraBundleBuilder;
 
 import static app.intelehealth.client.utilities.StringUtils.switch_hi_caste;
 import static app.intelehealth.client.utilities.StringUtils.switch_hi_caste_edit;
@@ -118,6 +120,7 @@
     EditText mPhoneNum;
     EditText mAge;
     MaterialAlertDialogBuilder mAgePicker;
+    String [] list;
     EditText mAddress1;
     EditText mAddress2;
     AutoCompleteTextView mCity;
@@ -638,12 +641,30 @@
                 if (!filePath.exists()) {
                     filePath.mkdir();
                 }
-                Intent cameraIntent = new Intent(IdentificationActivity.this, CameraActivity.class);
-
-                // cameraIntent.putExtra(CameraActivity.SHOW_DIALOG_MESSAGE, getString(R.string.camera_dialog_default));
-                cameraIntent.putExtra(CameraActivity.SET_IMAGE_NAME, patientTemp);
-                cameraIntent.putExtra(CameraActivity.SET_IMAGE_PATH, filePath.toString());
-                startActivityForResult(cameraIntent, CameraActivity.TAKE_IMAGE);
+//                Intent cameraIntent = new Intent(IdentificationActivity.this, CameraActivity.class);
+//
+//                // cameraIntent.putExtra(CameraActivity.SHOW_DIALOG_MESSAGE, getString(R.string.camera_dialog_default));
+//                cameraIntent.putExtra(CameraActivity.SET_IMAGE_NAME, patientTemp);
+//                cameraIntent.putExtra(CameraActivity.SET_IMAGE_PATH, filePath.toString());
+//                startActivityForResult(cameraIntent, CameraActivity.TAKE_IMAGE);
+                Intent intent = new Intent(IdentificationActivity.this, CameraActivity.class);
+                intent.putExtra(CameraActivity.SET_IMAGE_NAME, patientTemp);
+                intent.putExtra(CameraActivity.SET_IMAGE_PATH, filePath.toString());
+                intent.setFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP | Intent.FLAG_ACTIVITY_CLEAR_TOP);
+                intent.putExtra("inputData", new CameraBundleBuilder()
+                        .setFullscreenMode(false)
+                        .setDoneButtonString("Add")
+                        .setSinglePhotoMode(false)
+                        .setMax_photo(3)
+                        .setManualFocus(true)
+                        .setBucketName(getClass().getName())
+                        .setPreviewEnableCount(true)
+                        .setPreviewIconVisiblity(true)
+                        .setPreviewPageRedirection(true)
+                        .setEnableDone(false)
+                        .setClearBucket(true)
+                        .createCameraBundle());
+                startActivityForResult(intent, CameraActivity.TAKE_IMAGE);
             }
         });
         mDOBYear = today.get(Calendar.YEAR);
@@ -888,6 +909,8 @@
         return calculatedAge != null ? calculatedAge : " ";
     }
 
+
+
     public void onRadioButtonClicked(View view) {
         boolean checked = ((RadioButton) view).isChecked();
         switch (view.getId()) {
@@ -1048,6 +1071,17 @@
         IntelehealthApplication.setAlertDialogCustomTheme(this, alertDialog);
     }
 
+//    @Override
+//    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+//        super.onActivityResult(requestCode, resultCode, data);
+//        if (requestCode == 214) {
+//            if (resultCode == RESULT_OK) {
+//                assert data != null;
+//                list = data.getStringArrayExtra("resultData");
+//            }
+//        }
+//    }
+
     @Override
     protected void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
@@ -1056,6 +1090,7 @@
             Log.v(TAG, "Request Code " + CameraActivity.TAKE_IMAGE);
             if (resultCode == RESULT_OK) {
                 Log.i(TAG, "Result OK");
+                assert data != null;
                 mCurrentPhotoPath = data.getStringExtra("RESULT");
                 Log.v("IdentificationActivity", mCurrentPhotoPath);
 
@@ -1069,6 +1104,27 @@
         }
     }
 
+//    @Override
+//    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+//        super.onActivityResult(requestCode, resultCode, data);
+//        Log.v(TAG, "Result Received");
+//        if (requestCode == CameraActivity.TAKE_IMAGE) {
+//            Log.v(TAG, "Request Code " + CameraActivity.TAKE_IMAGE);
+//            if (resultCode == RESULT_OK) {
+//                Log.i(TAG, "Result OK");
+//                mCurrentPhotoPath = data.getStringExtra("RESULT");
+//                Log.v("IdentificationActivity", mCurrentPhotoPath);
+//
+//                Glide.with(this)
+//                        .load(new File(mCurrentPhotoPath))
+//                        .thumbnail(0.25f)
+//                        .diskCacheStrategy(DiskCacheStrategy.NONE)
+//                        .skipMemoryCache(true)
+//                        .into(mImageView);
+//            }
+//        }
+//    }
+
     public void onPatientCreateClicked() {
         PatientsDAO patientsDAO = new PatientsDAO();
         PatientAttributesDTO patientAttributesDTO = new PatientAttributesDTO();
Index: app/src/main/java/app/intelehealth/client/activities/cameraActivity/CameraActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package app.intelehealth.client.activities.cameraActivity;\r\n\r\nimport android.Manifest;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.media.ExifInterface;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.HandlerThread;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\n\r\nimport com.google.android.material.dialog.MaterialAlertDialogBuilder;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\n\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.cameraview.CameraView;\r\nimport com.google.firebase.crashlytics.FirebaseCrashlytics;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\n\r\nimport app.intelehealth.client.R;\r\nimport app.intelehealth.client.app.AppConstants;\r\nimport app.intelehealth.client.app.IntelehealthApplication;\r\nimport permissions.dispatcher.NeedsPermission;\r\nimport permissions.dispatcher.OnNeverAskAgain;\r\nimport permissions.dispatcher.OnPermissionDenied;\r\nimport permissions.dispatcher.OnShowRationale;\r\nimport permissions.dispatcher.PermissionRequest;\r\nimport permissions.dispatcher.RuntimePermissions;\r\n\r\n@RuntimePermissions\r\npublic class CameraActivity extends AppCompatActivity {\r\n\r\n    public static final int TAKE_IMAGE = 205;\r\n    /**\r\n     * Bundle key used for the {@link String} setting custom Image Name\r\n     * for the file generated\r\n     */\r\n    public static final String SET_IMAGE_NAME = \"IMG_NAME\";\r\n    /**\r\n     * Bundle key used for the {@link String} setting custom FilePath for\r\n     * storing the file generated\r\n     */\r\n    public static final String SET_IMAGE_PATH = \"IMG_PATH\";\r\n    /**\r\n     * Bundle key used for the {@link String} showing custom dialog\r\n     * message before starting the camera.\r\n     */\r\n    public static final String SHOW_DIALOG_MESSAGE = \"DEFAULT_DLG\";\r\n    private static final int[] FLASH_OPTIONS = {\r\n            CameraView.FLASH_AUTO,\r\n            CameraView.FLASH_OFF,\r\n            CameraView.FLASH_ON,\r\n    };\r\n    private static final int[] FLASH_ICONS = {\r\n            R.drawable.ic_flash_auto,\r\n            R.drawable.ic_flash_off,\r\n            R.drawable.ic_flash_on,\r\n    };\r\n    private static final int[] FLASH_TITLES = {\r\n            R.string.flash_auto,\r\n            R.string.flash_off,\r\n            R.string.flash_on,\r\n    };\r\n    private final String TAG = CameraActivity.class.getSimpleName();\r\n    private CameraView mCameraView;\r\n    private FloatingActionButton mFab;\r\n    private int mCurrentFlash;\r\n\r\n    private Handler mBackgroundHandler;\r\n\r\n    //Pass Custom File Name Using intent.putExtra(CameraActivity.SET_IMAGE_NAME, \"Image Name\");\r\n    private String mImageName = null;\r\n    //Pass Dialog Message Using intent.putExtra(CameraActivity.SET_IMAGE_NAME, \"Dialog Message\");\r\n    private String mDialogMessage = null;\r\n    //Pass Custom File Path Using intent.putExtra(CameraActivity.SET_IMAGE_PATH, \"Image Path\");\r\n    private String mFilePath = null;\r\n    private CameraView.Callback mCallback\r\n            = new CameraView.Callback() {\r\n\r\n        @Override\r\n        public void onCameraOpened(CameraView cameraView) {\r\n            Log.d(TAG, \"onCameraOpened\");\r\n        }\r\n\r\n        @Override\r\n        public void onCameraClosed(CameraView cameraView) {\r\n            Log.d(TAG, \"onCameraClosed\");\r\n        }\r\n\r\n        @Override\r\n        public void onPictureTaken(CameraView cameraView, final byte[] data) {\r\n            Log.d(TAG, \"onPictureTaken \" + data.length);\r\n            Toast.makeText(cameraView.getContext(), R.string.picture_taken, Toast.LENGTH_SHORT)\r\n                    .show();\r\n            compressImageAndSave(data);\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    void compressImageAndSave(final byte[] data) {\r\n        getBackgroundHandler().post(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                if (mImageName == null) {\r\n                    mImageName = \"IMG\";\r\n                }\r\n\r\n\r\n                String filePath = AppConstants.IMAGE_PATH + mImageName + \".jpg\";\r\n\r\n                File file;\r\n                if (mFilePath == null) {\r\n                    file = new File(AppConstants.IMAGE_PATH + mImageName + \".jpg\");\r\n                } else {\r\n                    file = new File(AppConstants.IMAGE_PATH + mImageName + \".jpg\");\r\n                }\r\n                OutputStream os = null;\r\n                try {\r\n                    os = new FileOutputStream(file);\r\n                    Bitmap bitmap = BitmapFactory.decodeByteArray(data, 0, data.length);\r\n                    //  Bitmap bitmap = Bitmap.createScaledBitmap(bmp, 600, 800, false);\r\n                    //  bitmap.recycle();\r\n                    bitmap.compress(Bitmap.CompressFormat.JPEG, 100, os);\r\n                    os.flush();\r\n                    os.close();\r\n                    bitmap.recycle();\r\n\r\n\r\n                    Bitmap scaledBitmap = null;\r\n\r\n                    BitmapFactory.Options options = new BitmapFactory.Options();\r\n                    options.inJustDecodeBounds = true;\r\n                    Bitmap bmp = BitmapFactory.decodeFile(filePath, options);\r\n\r\n                    int actualHeight = options.outHeight;\r\n                    int actualWidth = options.outWidth;\r\n                    float maxHeight = 816.0f;\r\n                    float maxWidth = 612.0f;\r\n                    float imgRatio = actualWidth / actualHeight;\r\n                    float maxRatio = maxWidth / maxHeight;\r\n\r\n                    if (actualHeight > maxHeight || actualWidth > maxWidth) {\r\n                        if (imgRatio < maxRatio) {\r\n                            imgRatio = maxHeight / actualHeight;\r\n                            actualWidth = (int) (imgRatio * actualWidth);\r\n                            actualHeight = (int) maxHeight;\r\n                        } else if (imgRatio > maxRatio) {\r\n                            imgRatio = maxWidth / actualWidth;\r\n                            actualHeight = (int) (imgRatio * actualHeight);\r\n                            actualWidth = (int) maxWidth;\r\n                        } else {\r\n                            actualHeight = (int) maxHeight;\r\n                            actualWidth = (int) maxWidth;\r\n                        }\r\n                    }\r\n\r\n                    options.inSampleSize = calculateInSampleSize(options, actualWidth, actualHeight);\r\n                    options.inJustDecodeBounds = false;\r\n                    options.inDither = false;\r\n                    options.inPurgeable = true;\r\n                    options.inInputShareable = true;\r\n                    options.inTempStorage = new byte[16 * 1024];\r\n\r\n                    try {\r\n                        bmp = BitmapFactory.decodeFile(filePath, options);\r\n                    } catch (OutOfMemoryError exception) {\r\n                        exception.printStackTrace();\r\n\r\n                    }\r\n                    try {\r\n                        scaledBitmap = Bitmap.createBitmap(actualWidth, actualHeight, Bitmap.Config.ARGB_8888);\r\n                    } catch (OutOfMemoryError exception) {\r\n                        exception.printStackTrace();\r\n                    }\r\n\r\n                    float ratioX = actualWidth / (float) options.outWidth;\r\n                    float ratioY = actualHeight / (float) options.outHeight;\r\n                    float middleX = actualWidth / 2.0f;\r\n                    float middleY = actualHeight / 2.0f;\r\n\r\n                    Matrix scaleMatrix = new Matrix();\r\n                    scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);\r\n\r\n                    Canvas canvas = new Canvas(scaledBitmap);\r\n                    canvas.setMatrix(scaleMatrix);\r\n                    canvas.drawBitmap(bmp, middleX - bmp.getWidth() / 2, middleY - bmp.getHeight() / 2, new Paint(\r\n                            Paint.FILTER_BITMAP_FLAG));\r\n\r\n                    ExifInterface exif;\r\n                    try {\r\n                        exif = new ExifInterface(filePath);\r\n\r\n                        int orientation = exif.getAttributeInt(ExifInterface.TAG_ORIENTATION, 0);\r\n                        Log.e(\"EXIF\", \"Exif: \" + orientation);\r\n                        Matrix matrix = new Matrix();\r\n                        if (orientation == 6) {\r\n                            matrix.postRotate(90);\r\n                            Log.e(\"EXIF\", \"Exif: \" + orientation);\r\n                        } else if (orientation == 3) {\r\n                            matrix.postRotate(180);\r\n                            Log.e(\"EXIF\", \"Exif: \" + orientation);\r\n                        } else if (orientation == 8) {\r\n                            matrix.postRotate(270);\r\n                            Log.e(\"EXIF\", \"Exif: \" + orientation);\r\n                        }\r\n                        scaledBitmap = Bitmap.createBitmap(scaledBitmap, 0, 0, scaledBitmap.getWidth(), scaledBitmap.getHeight(),\r\n                                matrix, true);\r\n                    } catch (IOException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    FileOutputStream out = null;\r\n                    String filename = filePath;\r\n                    try {\r\n                        out = new FileOutputStream(file);\r\n                        scaledBitmap.compress(Bitmap.CompressFormat.JPEG, 95, out);\r\n                    } catch (FileNotFoundException e) {\r\n                        e.printStackTrace();\r\n                    } finally {\r\n                        if (bmp != null) {\r\n                            bmp.recycle();\r\n                            bmp = null;\r\n                        }\r\n                        if (scaledBitmap != null) {\r\n                            scaledBitmap.recycle();\r\n                        }\r\n                    }\r\n                    Intent intent = new Intent();\r\n                    intent.putExtra(\"RESULT\", file.getAbsolutePath());\r\n                    setResult(RESULT_OK, intent);\r\n                    Log.i(TAG, file.getAbsolutePath());\r\n                    finish();\r\n                } catch (IOException e) {\r\n                    Log.w(TAG, \"Cannot write to \" + file, e);\r\n                    setResult(RESULT_CANCELED, new Intent());\r\n                    finish();\r\n                } finally {\r\n                    if (os != null) {\r\n                        try {\r\n                            os.close();\r\n                        } catch (IOException e) {\r\n                            FirebaseCrashlytics.getInstance().recordException(e);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static int calculateInSampleSize(BitmapFactory.Options options, int reqWidth, int reqHeight) {\r\n        final int height = options.outHeight;\r\n        final int width = options.outWidth;\r\n        int inSampleSize = 1;\r\n\r\n        if (height > reqHeight || width > reqWidth) {\r\n            if (width > height) {\r\n                inSampleSize = Math.round((float) height / (float) reqHeight);\r\n            } else {\r\n                inSampleSize = Math.round((float) width / (float) reqWidth);\r\n            }\r\n        }\r\n        return inSampleSize;\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        Bundle extras = getIntent().getExtras();\r\n        if (extras != null) {\r\n            if (extras.containsKey(SET_IMAGE_NAME))\r\n                mImageName = extras.getString(SET_IMAGE_NAME);\r\n            if (extras.containsKey(SHOW_DIALOG_MESSAGE))\r\n                mDialogMessage = extras.getString(SHOW_DIALOG_MESSAGE);\r\n            if (extras.containsKey(SET_IMAGE_PATH))\r\n                mFilePath = extras.getString(SET_IMAGE_PATH);\r\n        }\r\n\r\n        setContentView(R.layout.activity_camera);\r\n        mCameraView = findViewById(R.id.camera_surface_CameraView);\r\n        mFab = findViewById(R.id.take_picture);\r\n\r\n\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        ActionBar actionBar = getSupportActionBar();\r\n        if (actionBar != null) {\r\n            actionBar.setDisplayShowTitleEnabled(false);\r\n\r\n        }\r\n\r\n        if (mCameraView != null) mCameraView.addCallback(mCallback);\r\n        if (mFab != null) {\r\n            mFab.setOnClickListener(new View.OnClickListener() {\r\n                @Override\r\n                public void onClick(View v) {\r\n                    if (mCameraView != null) {\r\n                        mCameraView.takePicture();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        if (mCameraView != null) mCameraView.stop();\r\n        CameraActivityPermissionsDispatcher.startCameraWithCheck(this);\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        if (mCameraView != null) mCameraView.stop();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.camera, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.switch_flash:\r\n                if (mCameraView != null) {\r\n                    mCurrentFlash = (mCurrentFlash + 1) % FLASH_OPTIONS.length;\r\n                    item.setTitle(FLASH_TITLES[mCurrentFlash]);\r\n                    item.setIcon(FLASH_ICONS[mCurrentFlash]);\r\n                    mCameraView.setFlash(FLASH_OPTIONS[mCurrentFlash]);\r\n                }\r\n                return true;\r\n        }\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,\r\n                                           @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        CameraActivityPermissionsDispatcher.onRequestPermissionsResult(this, requestCode, grantResults);\r\n    }\r\n\r\n    @NeedsPermission(Manifest.permission.CAMERA)\r\n    void startCamera() {\r\n        if (mDialogMessage != null) {\r\n            MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(this)\r\n                    .setMessage(mDialogMessage)\r\n                    .setNeutralButton(getString(R.string.button_ok), new DialogInterface.OnClickListener() {\r\n                        @Override\r\n                        public void onClick(DialogInterface dialog, int which) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    });\r\n            AlertDialog dialog = builder.show();\r\n            IntelehealthApplication.setAlertDialogCustomTheme(this, dialog);\r\n        }\r\n        if (mCameraView != null)\r\n            mCameraView.start();\r\n    }\r\n\r\n    @OnShowRationale(Manifest.permission.CAMERA)\r\n    void showRationaleForCamera(final PermissionRequest request) {\r\n        MaterialAlertDialogBuilder builder = new MaterialAlertDialogBuilder(this)\r\n                .setMessage(getString(R.string.permission_camera_rationale))\r\n                .setPositiveButton(getString(R.string.button_allow), new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        request.proceed();\r\n                    }\r\n                })\r\n                .setNegativeButton(getString(R.string.button_deny), new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        request.cancel();\r\n                    }\r\n                });\r\n        AlertDialog dialog = builder.show();\r\n        IntelehealthApplication.setAlertDialogCustomTheme(this, dialog);\r\n    }\r\n\r\n    @OnPermissionDenied(Manifest.permission.CAMERA)\r\n    void showDeniedForCamera() {\r\n        Toast.makeText(this, getString(R.string.permission_camera_denied), Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    @OnNeverAskAgain(Manifest.permission.CAMERA)\r\n    void showNeverAskForCamera() {\r\n        Toast.makeText(this, getString(R.string.permission_camera_never_askagain), Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    private Handler getBackgroundHandler() {\r\n        if (mBackgroundHandler == null) {\r\n            HandlerThread thread = new HandlerThread(\"background\");\r\n            thread.start();\r\n            mBackgroundHandler = new Handler(thread.getLooper());\r\n        }\r\n        return mBackgroundHandler;\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        //do nothing\r\n        finish();\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/app/intelehealth/client/activities/cameraActivity/CameraActivity.java	(revision db4b970cdda541301d033834f0099baa4d882c5d)
+++ app/src/main/java/app/intelehealth/client/activities/cameraActivity/CameraActivity.java	(date 1614581980615)
@@ -87,9 +87,8 @@
     private CameraView mCameraView;
     private FloatingActionButton mFab;
     private int mCurrentFlash;
-
+    String list;
     private Handler mBackgroundHandler;
-
     //Pass Custom File Name Using intent.putExtra(CameraActivity.SET_IMAGE_NAME, "Image Name");
     private String mImageName = null;
     //Pass Dialog Message Using intent.putExtra(CameraActivity.SET_IMAGE_NAME, "Dialog Message");
@@ -121,6 +120,18 @@
     };
 
 
+//    @Override
+//    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+//        super.onActivityResult(requestCode, resultCode, data);
+//        if (requestCode == 214) {
+//            if (resultCode == RESULT_OK) {
+//                assert data != null;
+//                list = String.valueOf(data.getStringArrayExtra("resultData"));
+//                final byte[] dataImage = list.getBytes();
+//                compressImageAndSave(dataImage);
+//            }
+//        }
+//    }
     void compressImageAndSave(final byte[] data) {
         getBackgroundHandler().post(new Runnable() {
             @Override
@@ -149,7 +160,6 @@
                     os.close();
                     bitmap.recycle();
 
-
                     Bitmap scaledBitmap = null;
 
                     BitmapFactory.Options options = new BitmapFactory.Options();
